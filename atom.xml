<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Wynter</title>
  
  <subtitle>不甘平庸，就别懒惰</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://wynter.wang/"/>
  <updated>2017-10-19T13:39:30.000Z</updated>
  <id>https://wynter.wang/</id>
  
  <author>
    <name>Wynter</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hello World</title>
    <link href="https://wynter.wang/2017/10/19/hello-world/"/>
    <id>https://wynter.wang/2017/10/19/hello-world/</id>
    <published>2017-10-19T13:39:30.000Z</published>
    <updated>2017-10-19T13:39:30.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>iOS-UIKit框架学习—UITextView</title>
    <link href="https://wynter.wang/2017/05/12/iOS-UIKit%E6%A1%86%E6%9E%B6%E5%AD%A6%E4%B9%A0%E2%80%94UITextView/"/>
    <id>https://wynter.wang/2017/05/12/iOS-UIKit框架学习—UITextView/</id>
    <published>2017-05-12T12:26:34.000Z</published>
    <updated>2017-05-12T12:29:25.000Z</updated>
    
    <content type="html"><![CDATA[<p>UITextView的类实现一个滚动的，多行文本区域的行为。类支持使用自定义字体，颜色，和对齐的文本的显示，同时还支持文本编辑。通常可以使用一个文本视图，显示多行文本。<br><a id="more"></a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div></pre></td><td class="code"><pre><div class="line">@protocol UITextViewDelegate &lt;NSObject, UIScrollViewDelegate&gt;</div><div class="line"></div><div class="line">@optional</div><div class="line"></div><div class="line">// 是否开始编辑</div><div class="line">- (BOOL)textViewShouldBeginEditing:(UITextView *)textView;</div><div class="line">// 是否完成编辑</div><div class="line">- (BOOL)textViewShouldEndEditing:(UITextView *)textView;</div><div class="line">// 开始编辑</div><div class="line">- (void)textViewDidBeginEditing:(UITextView *)textView;</div><div class="line">// 完成编辑</div><div class="line">- (void)textViewDidEndEditing:(UITextView *)textView;</div><div class="line">// 文本发生改变，是否替换成指定的文本</div><div class="line">- (BOOL)textView:(UITextView *)textView shouldChangeTextInRange:(NSRange)range replacementText:(NSString *)text;</div><div class="line">// 文本内容发生改变</div><div class="line">- (void)textViewDidChange:(UITextView *)textView;</div><div class="line">// 更改选中的文本</div><div class="line">- (void)textViewDidChangeSelection:(UITextView *)textView;</div><div class="line">// 是否允许指定的用户使用指定范围的URL进行交互</div><div class="line">- (BOOL)textView:(UITextView *)textView shouldInteractWithURL:(NSURL *)URL inRange:(NSRange)characterRange interaction:(UITextItemInteraction)interaction NS_AVAILABLE_IOS(10_0);</div><div class="line">// 是否允许指定文本附件与文本进行交互</div><div class="line">- (BOOL)textView:(UITextView *)textView shouldInteractWithTextAttachment:(NSTextAttachment *)textAttachment inRange:(NSRange)characterRange interaction:(UITextItemInteraction)interaction NS_AVAILABLE_IOS(10_0);</div><div class="line">- (BOOL)textView:(UITextView *)textView shouldInteractWithURL:(NSURL *)URL inRange:(NSRange)characterRange NS_DEPRECATED_IOS(7_0, 10_0, &quot;Use textView:shouldInteractWithURL:inRange:forInteractionType: instead&quot;);</div><div class="line">- (BOOL)textView:(UITextView *)textView shouldInteractWithTextAttachment:(NSTextAttachment *)textAttachment inRange:(NSRange)characterRange NS_DEPRECATED_IOS(7_0, 10_0, &quot;Use textView:shouldInteractWithTextAttachment:inRange:forInteractionType: instead&quot;);</div><div class="line"></div><div class="line">@end</div><div class="line"></div><div class="line">NS_CLASS_AVAILABLE_IOS(2_0) @interface UITextView : UIScrollView &lt;UITextInput, UIContentSizeCategoryAdjusting&gt;</div><div class="line">// 代理</div><div class="line">@property(nullable,nonatomic,weak) id&lt;UITextViewDelegate&gt; delegate;</div><div class="line">// 文本内容</div><div class="line">@property(null_resettable,nonatomic,copy) NSString *text;</div><div class="line">// 字体</div><div class="line">@property(nullable,nonatomic,strong) UIFont *font;</div><div class="line">// 字体颜色</div><div class="line">@property(nullable,nonatomic,strong) UIColor *textColor;</div><div class="line">// 对齐方式</div><div class="line">@property(nonatomic) NSTextAlignment textAlignment;</div><div class="line">// 选择的范围</div><div class="line">@property(nonatomic) NSRange selectedRange;</div><div class="line">// 是否可编辑</div><div class="line">@property(nonatomic,getter=isEditable) BOOL editable __TVOS_PROHIBITED;</div><div class="line">// 是否可选</div><div class="line">@property(nonatomic,getter=isSelectable) BOOL selectable NS_AVAILABLE_IOS(7_0);</div><div class="line">// 自动检测文本类型，如电话号码、邮箱、网址等</div><div class="line">@property(nonatomic) UIDataDetectorTypes dataDetectorTypes NS_AVAILABLE_IOS(3_0) __TVOS_PROHIBITED;</div><div class="line">// 是否允许设置文本属性 默认为NO</div><div class="line">@property(nonatomic) BOOL allowsEditingTextAttributes NS_AVAILABLE_IOS(6_0);</div><div class="line">// 文本属性</div><div class="line">@property(null_resettable,copy) NSAttributedString *attributedText NS_AVAILABLE_IOS(6_0);</div><div class="line">// 属性字典</div><div class="line">@property(nonatomic,copy) NSDictionary&lt;NSString *, id&gt; *typingAttributes NS_AVAILABLE_IOS(6_0);</div><div class="line">// 设置指定可见的的滚动范围</div><div class="line">- (void)scrollRangeToVisible:(NSRange)range;</div><div class="line">// 自定义输入框</div><div class="line">@property (nullable, readwrite, strong) UIView *inputView;</div><div class="line">// 输入框的辅助视图</div><div class="line">@property (nullable, readwrite, strong) UIView *inputAccessoryView;</div><div class="line">// 再次编辑是否清楚文本 默认为NO</div><div class="line">@property(nonatomic) BOOL clearsOnInsertion NS_AVAILABLE_IOS(6_0);</div><div class="line"></div><div class="line">// 创建文本视图</div><div class="line">- (instancetype)initWithFrame:(CGRect)frame textContainer:(nullable NSTextContainer *)textContainer NS_AVAILABLE_IOS(7_0) NS_DESIGNATED_INITIALIZER;</div><div class="line">- (nullable instancetype)initWithCoder:(NSCoder *)aDecoder NS_DESIGNATED_INITIALIZER;</div><div class="line"></div><div class="line">// 获取文本视图的文本容器</div><div class="line">@property(nonatomic,readonly) NSTextContainer *textContainer NS_AVAILABLE_IOS(7_0);</div><div class="line">// 设置文本容器内间距</div><div class="line">@property(nonatomic, assign) UIEdgeInsets textContainerInset NS_AVAILABLE_IOS(7_0);</div><div class="line">// 获取布局管理器</div><div class="line">@property(nonatomic,readonly) NSLayoutManager *layoutManager NS_AVAILABLE_IOS(7_0);</div><div class="line">// 获取文本存储对象中的文本</div><div class="line">@property(nonatomic,readonly,strong) NSTextStorage *textStorage NS_AVAILABLE_IOS(7_0);</div><div class="line"></div><div class="line">// link的样式属性</div><div class="line">@property(null_resettable, nonatomic, copy) NSDictionary&lt;NSString *, id&gt; *linkTextAttributes NS_AVAILABLE_IOS(7_0);</div><div class="line"></div><div class="line">@end</div></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">/ 开始编辑时发送通知</div><div class="line">UIKIT_EXTERN NSNotificationName const UITextViewTextDidBeginEditingNotification;</div><div class="line">// 文本发生变化发送通知</div><div class="line">UIKIT_EXTERN NSNotificationName const UITextViewTextDidChangeNotification;</div><div class="line">// 编辑完成发送通知</div><div class="line">UIKIT_EXTERN NSNotificationName const UITextViewTextDidEndEditingNotification;</div></pre></td></tr></table></figure><p>e.g.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">UITextView *textView = [[UITextView alloc]initWithFrame:CGRectMake(0, 0, SCREEN_WIDTH, 100)];</div><div class="line">textView.font = [UIFont systemFontOfSize:12.f];</div><div class="line">textView.text = @&quot;iOS-UIKit框架学习—UITextView&quot;;</div><div class="line">textView.textColor = UIColorFromRGB(0xababab);</div><div class="line">// UITextView在上下左右分别有一个8px的padding,设置为0后可以正常计算文本高度，否则要宽度-16</div><div class="line">[textView setContentOffset:CGPointZero];</div><div class="line">[self.view addSubview:textView];</div><div class="line"></div><div class="line">// 用此方法计算高度不需要设置内容边距</div><div class="line">CGSize sizeToFit = [textView sizeThatFits:CGSizeMake(SCREEN_WIDTH, MAXFLOAT)];</div></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;UITextView的类实现一个滚动的，多行文本区域的行为。类支持使用自定义字体，颜色，和对齐的文本的显示，同时还支持文本编辑。通常可以使用一个文本视图，显示多行文本。&lt;br&gt;
    
    </summary>
    
      <category term="iOS" scheme="https://wynter.wang/categories/iOS/"/>
    
    
      <category term="API" scheme="https://wynter.wang/tags/API/"/>
    
      <category term="iOS" scheme="https://wynter.wang/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>iOS 百度地图SDK-配置开发环境</title>
    <link href="https://wynter.wang/2017/05/01/iOS-%E7%99%BE%E5%BA%A6%E5%9C%B0%E5%9B%BESDK-%E9%85%8D%E7%BD%AE%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/"/>
    <id>https://wynter.wang/2017/05/01/iOS-百度地图SDK-配置开发环境/</id>
    <published>2017-05-01T08:13:16.000Z</published>
    <updated>2017-05-15T10:12:45.000Z</updated>
    
    <content type="html"><![CDATA[<p>虽然百度地图应经用了很多次了，但是每次都浪费很长时间来配置，所以今天把配置<a href="http://lbsyun.baidu.com/index.php?title=iossdk" target="_blank" rel="external">百度地图SDK</a>的过程记录下来，也方便日后查看。<br><a id="more"></a></p><h2 id="第一步、导入百度SDK"><a href="#第一步、导入百度SDK" class="headerlink" title="第一步、导入百度SDK"></a>第一步、导入百度SDK</h2><p>百度地图SDK支持手动和使用<code>CocoaPods</code>自动配置</p><h3 id="自动配置-framework形式开发包（使用CocoaPods）"><a href="#自动配置-framework形式开发包（使用CocoaPods）" class="headerlink" title="自动配置.framework形式开发包（使用CocoaPods）"></a>自动配置.framework形式开发包（使用CocoaPods）</h3><p> 1、进入工程所在根目录执行：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pod init   // 初始化后，会自动创建`Podfile`文件</div></pre></td></tr></table></figure></p><p> 2、搜索百度地图SDK在CocoaPods的版本号：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pod search  BaiduMapKit</div></pre></td></tr></table></figure></p><p>3、编辑Podfile内容如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pod <span class="string">'BaiduMapKit'</span>, <span class="string">'3.3.0'</span>   // 3.3.0是当前最新的版本号</div></pre></td></tr></table></figure></p><p>4.在Podfile所在的文件夹下输入命令：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pod install</div></pre></td></tr></table></figure></p><p>成功以后，会出现如下记录：</p><blockquote><p>Analyzing dependencies<br>Downloading dependencies<br>Installing BaiduMapKit (3.3.0)<br>Generating Pods project<br>Integrating client project<br>[!] Please close any current Xcode sessions and use <code>BaiDuPoiSearch.xcworkspace</code> for this project from now on</p></blockquote><h3 id="手动配置-framework形式开发包"><a href="#手动配置-framework形式开发包" class="headerlink" title="手动配置.framework形式开发包"></a>手动配置.framework形式开发包</h3><p>1、根据需要导入 .framework包，将所需要的<code>BaiduMapAPI_**.framework</code>拷贝到工程所在文件夹下，BaiduMapAPI_Base.framework为基础包，使用SDK任何功能都需导入，其他分包可按需导入</p><p>2、在<code>TARGETS</code>-&gt;<code>Build Phases</code>-&gt;<code>Link Binary With Libaries</code>中点击“+”按钮，在弹出的窗口中点击<code>Add Other</code>按钮，选择<code>BaiduMapAPI_**.framework</code>添加到工程中</p><blockquote><p>注意:静态库中采用Objective-C++实现，因此需要您保证您工程中至少有一个.mm后缀的源文件(您可以将任意一个.m后缀的文件改名为.mm)，或者在工程属性中指定编译方式，即在Xcode的<code>Project</code> -&gt; <code>Edit Active Target</code>-&gt;<code>Build Setting</code> 中找到 <code>Compile Sources As</code>，并将其设置为<code>Objective-C++</code></p></blockquote><h2 id="第二步、引入所需的系统依赖库"><a href="#第二步、引入所需的系统依赖库" class="headerlink" title="第二步、引入所需的系统依赖库"></a>第二步、引入所需的系统依赖库</h2><p>百度地图SDK中提供了定位功能和动画效果，v2.0.0版本开始使用OpenGL渲染因此您需要在您的Xcode工程中引入：<br><code>CoreLocation.framework</code>、<code>QuartzCore.framework</code>、<code>OpenGLES.framework</code>、<code>SystemConfiguration.framework</code>、<code>CoreGraphics.framework</code>、<code>Security.framework</code>、<code>libsqlite3.0.tbd</code>、<code>CoreTelephony.framework</code> 、<code>libstdc++.6.0.9.tbd</code></p><p><strong>添加方法：</strong>在Xcode的<code>Project</code> -&gt; <code>Active Target</code> -&gt;<code>Build Phases</code> -&gt;<code>Link Binary With Libraries</code>，添加这几个系统库即可</p><h2 id="第三步、引入所需的第三方openssl库"><a href="#第三步、引入所需的第三方openssl库" class="headerlink" title="第三步、引入所需的第三方openssl库"></a>第三步、引入所需的第三方openssl库</h2><p>添加支持HTTPS所需的penssl静态库：<code>libssl.a</code>和<code>libcrypto.a</code>（SDK打好的包存放于thirdlib目录下</p><p><strong>添加方法：</strong> 在 <code>TARGETS</code>-&gt;<code>Build Phases</code>-&gt;<code>Link Binary With Libaries</code>中点击“+”按钮，在弹出的窗口中点击<code>Add Other</code>按钮，选择libssl.a和libcrypto.a添加到工程中</p><h2 id="第四步、环境配置"><a href="#第四步、环境配置" class="headerlink" title="第四步、环境配置"></a>第四步、环境配置</h2><p>在<code>TARGETS</code>-&gt;<code>Build Settings</code>-&gt;<code>Other Linker Flags</code> 中添加<code>-ObjC</code>。</p><h2 id="第五步、引入mapapi-bundle资源文件"><a href="#第五步、引入mapapi-bundle资源文件" class="headerlink" title="第五步、引入mapapi.bundle资源文件"></a>第五步、引入mapapi.bundle资源文件</h2><p>如果使用了基础地图功能，需要添加该资源，否则地图不能正常显示<code>mapapi.bundle</code>中存储了定位、默认大头针标注View及路线关键点的资源图片，还存储了矢量地图绘制必需的资源文件。如果您不需要使用内置的图片显示功能，则可以删除<code>bundle</code>文件中的<code>image</code>文件夹。您也可以根据具体需求任意替换或删除该<code>bundle</code>中<code>image</code>文件夹的图片文件。</p><p><strong>添加方法：</strong>选中工程名，在右键菜单中选择<code>Add Files to …</code>，从<code>BaiduMapAPI_Map.framework</code>||<code>Resources</code>文件中选择<code>mapapi.bundle</code>文件，并勾选<code>Copy items if needed</code>复选框，单击<code>Add</code>按钮，将资源文件添加到工程中。</p><h2 id="第六步、引入头文件"><a href="#第六步、引入头文件" class="headerlink" title="第六步、引入头文件"></a>第六步、引入头文件</h2><p>在使用SDK的类 按需 引入下边的头文件：<br><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#import <span class="meta-string">&lt;BaiduMapAPI_Base/BMKBaseComponent.h&gt;</span>//引入base相关所有的头文件</span></div><div class="line"><span class="meta">#import <span class="meta-string">&lt;BaiduMapAPI_Map/BMKMapComponent.h&gt;</span>//引入地图功能所有的头文件</span></div><div class="line"><span class="meta">#import <span class="meta-string">&lt;BaiduMapAPI_Search/BMKSearchComponent.h&gt;</span>//引入检索功能所有的头文件</span></div><div class="line"><span class="meta">#import <span class="meta-string">&lt;BaiduMapAPI_Cloud/BMKCloudSearchComponent.h&gt;</span>//引入云检索功能所有的头文件</span></div><div class="line"><span class="meta">#import <span class="meta-string">&lt;BaiduMapAPI_Location/BMKLocationComponent.h&gt;</span>//引入定位功能所有的头文件</span></div><div class="line"><span class="meta">#import <span class="meta-string">&lt;BaiduMapAPI_Utils/BMKUtilsComponent.h&gt;</span>//引入计算工具所有的头文件</span></div><div class="line"><span class="meta">#import <span class="meta-string">&lt;BaiduMapAPI_Radar/BMKRadarComponent.h&gt;</span>//引入周边雷达功能所有的头文件</span></div><div class="line"><span class="meta">#import <span class="meta-string">&lt;BaiduMapAPI_Map/BMKMapView.h&gt;</span>//只引入所需的单个头文件</span></div></pre></td></tr></table></figure></p><h2 id="第七步、调用客户端"><a href="#第七步、调用客户端" class="headerlink" title="第七步、调用客户端"></a>第七步、调用客户端</h2><p>如果在iOS9中使用了调起百度地图客户端功能，必须在<code>Info.plist</code>中进行如下配置，否则不能调起百度地图客户端。<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">key</span>&gt;</span>LSApplicationQueriesSchemes<span class="tag">&lt;/<span class="name">key</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">array</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">string</span>&gt;</span>baidumap<span class="tag">&lt;/<span class="name">string</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">array</span>&gt;</span></div></pre></td></tr></table></figure></p><h2 id="第八步、开启定位提醒"><a href="#第八步、开启定位提醒" class="headerlink" title="第八步、开启定位提醒"></a>第八步、开启定位提醒</h2><p>自iOS SDK v2.5.0起，为了对iOS8的定位能力做兼容，做了相应的修改，开发者在使用过程中注意事项如下：</p><p>需要在info.plist里添加（以下二选一，两个都添加默认使用<code>NSLocationWhenInUseUsageDescription</code>）：</p><ul><li><p><code>NSLocationWhenInUseUsageDescription</code>  // 允许在前台使用时获取GPS的描述</p></li><li><p><code>NSLocationAlwaysUsageDescription</code> // 允许永久使用GPS的描述</p></li></ul><h2 id="第九步、验证key和应用名称是否相符"><a href="#第九步、验证key和应用名称是否相符" class="headerlink" title="第九步、验证key和应用名称是否相符"></a>第九步、验证key和应用名称是否相符</h2><p>在使用Xcode6进行SDK开发过程中，需要在info.plist中添加：<code>Bundle display name</code> ，且其值不能为空（Xcode6新建的项目没有此配置，若没有会造成manager start failed）</p><h2 id="第十步、APPDelegate配置"><a href="#第十步、APPDelegate配置" class="headerlink" title="第十步、APPDelegate配置"></a>第十步、APPDelegate配置</h2><p>.h文件<br><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#import <span class="meta-string">&lt;BaiduMapAPI_Base/BMKBaseComponent.h&gt;</span></span></div><div class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">AppDelegate</span> : <span class="title">UIResponder</span> &lt;<span class="title">UIApplicationDelegate</span>,<span class="title">BMKGeneralDelegate</span>&gt;</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>,<span class="keyword">strong</span>) BMKMapManager* mapManager;</div></pre></td></tr></table></figure></p><p>.m文件<br><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line">-(<span class="keyword">void</span>)setUpBaiMap &#123;</div><div class="line">    <span class="comment">//百度地图</span></div><div class="line">    <span class="keyword">if</span> ([[<span class="built_in">UIDevice</span> currentDevice].systemVersion floatValue] &gt;= <span class="number">8</span>) &#123;</div><div class="line">        <span class="comment">//由于IOS8中定位的授权机制改变 需要进行手动授权</span></div><div class="line">        <span class="built_in">CLLocationManager</span>  *locationManager = [[<span class="built_in">CLLocationManager</span> alloc] init];</div><div class="line">        <span class="comment">//获取授权认证</span></div><div class="line">        [locationManager requestAlwaysAuthorization];</div><div class="line">        [locationManager requestWhenInUseAuthorization];</div><div class="line">        [locationManager startUpdatingLocation];</div><div class="line">    &#125;</div><div class="line">    _mapManager = [[BMKMapManager alloc]init];</div><div class="line">    <span class="comment">// 如果要关注网络及授权验证事件，请设定     generalDelegate参数</span></div><div class="line">    <span class="built_in">BOOL</span> ret = [_mapManager start:BaiDu_MapKey  generalDelegate:<span class="keyword">self</span>];</div><div class="line">    <span class="keyword">if</span> (!ret) &#123;</div><div class="line">        DLog(<span class="string">@"manager start failed!"</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="meta">#pragma mark - 百度地图</span></div><div class="line">- (<span class="keyword">void</span>)onGetNetworkState:(<span class="keyword">int</span>)iError &#123;</div><div class="line">    <span class="keyword">if</span> (<span class="number">0</span> == iError) &#123;</div><div class="line">        <span class="built_in">NSLog</span>(<span class="string">@"联网成功"</span>);</div><div class="line">    &#125; <span class="keyword">else</span>&#123;</div><div class="line">        <span class="built_in">NSLog</span>(<span class="string">@"onGetNetworkState %d"</span>,iError);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">- (<span class="keyword">void</span>)onGetPermissionState:(<span class="keyword">int</span>)iError &#123;</div><div class="line">    <span class="keyword">if</span> (<span class="number">0</span> == iError) &#123;</div><div class="line">        <span class="built_in">NSLog</span>(<span class="string">@"授权成功"</span>);</div><div class="line">        <span class="keyword">self</span>.isMapPermission = <span class="literal">YES</span>;</div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">        <span class="built_in">NSLog</span>(<span class="string">@"onGetPermissionState %d"</span>,iError);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><h2 id="第十一步、管理地图的生命周期"><a href="#第十一步、管理地图的生命周期" class="headerlink" title="第十一步、管理地图的生命周期"></a>第十一步、管理地图的生命周期</h2><p>自2.0.0起，BMKMapView新增viewWillAppear、viewWillDisappear方法来控制BMKMapView的生命周期，并且在一个时刻只能有一个`BMKMapView接受回调消息，因此在使用BMKMapView的viewController中需要在viewWillAppear、viewWillDisappear方法中调用BMKMapView的对应的方法，并处理delegate，代码如下：<br><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">-(<span class="keyword">void</span>)viewWillAppear:(<span class="built_in">BOOL</span>)animated</div><div class="line">&#123;</div><div class="line">    [_mapView viewWillAppear];</div><div class="line">    _mapView.delegate = <span class="keyword">self</span>; <span class="comment">// 此处记得不用的时候需要置nil，否则影响内存的释放</span></div><div class="line">&#125;</div><div class="line">-(<span class="keyword">void</span>)viewWillDisappear:(<span class="built_in">BOOL</span>)animated</div><div class="line">&#123;</div><div class="line">      [_mapView viewWillDisappear];</div><div class="line">      _mapView.delegate = <span class="literal">nil</span>; <span class="comment">// 不用时，置nil</span></div><div class="line">&#125;</div></pre></td></tr></table></figure></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>本文借鉴<a href="http://lbsyun.baidu.com/index.php?title=iossdk/guide/buildproject" target="_blank" rel="external">百度地图SDK-配置开发环境</a>，只是对百度地图的配置进行了一下总结，仅供开发百度地图参考使用，如有侵权行为，请联系我并及时删除。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;虽然百度地图应经用了很多次了，但是每次都浪费很长时间来配置，所以今天把配置&lt;a href=&quot;http://lbsyun.baidu.com/index.php?title=iossdk&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;百度地图SDK&lt;/a&gt;的过程记录下来，也方便日后查看。&lt;br&gt;
    
    </summary>
    
      <category term="blog" scheme="https://wynter.wang/categories/blog/"/>
    
    
      <category term="SDK" scheme="https://wynter.wang/tags/SDK/"/>
    
  </entry>
  
  <entry>
    <title>iOS-UIKit框架学习—UISwitch</title>
    <link href="https://wynter.wang/2017/04/14/iOS-UIKit%E6%A1%86%E6%9E%B6%E5%AD%A6%E4%B9%A0%E2%80%94UISwitch/"/>
    <id>https://wynter.wang/2017/04/14/iOS-UIKit框架学习—UISwitch/</id>
    <published>2017-04-14T09:14:11.000Z</published>
    <updated>2017-04-14T09:28:45.000Z</updated>
    
    <content type="html"><![CDATA[<p>您可以使用UISwitch类来创建和管理ON/ OFF按钮，您会看到，例如在飞行模式等服务的偏好设定（设定）。这些对象被称为开关。<br><a id="more"></a></p><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">NS_CLASS_AVAILABLE_IOS</span>(<span class="number">2</span>_0) __TVOS_PROHIBITED <span class="class"><span class="keyword">@interface</span> <span class="title">UISwitch</span> : <span class="title">UIControl</span> &lt;<span class="title">NSCoding</span>&gt;</span></div><div class="line"></div><div class="line"><span class="comment">// 开关开启时的颜色 On</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nullable</span>, <span class="keyword">nonatomic</span>, <span class="keyword">strong</span>) <span class="built_in">UIColor</span> *onTintColor <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">5</span>_0) <span class="built_in">UI_APPEARANCE_SELECTOR</span>;</div><div class="line"><span class="comment">// 背景边框颜色</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">null_resettable</span>, <span class="keyword">nonatomic</span>, <span class="keyword">strong</span>) <span class="built_in">UIColor</span> *tintColor <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">6</span>_0);</div><div class="line"><span class="comment">// 开关关闭时的颜色 Off</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nullable</span>, <span class="keyword">nonatomic</span>, <span class="keyword">strong</span>) <span class="built_in">UIColor</span> *thumbTintColor <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">6</span>_0) <span class="built_in">UI_APPEARANCE_SELECTOR</span>;</div><div class="line"><span class="comment">// 打开时的状态图片</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nullable</span>, <span class="keyword">nonatomic</span>, <span class="keyword">strong</span>) <span class="built_in">UIImage</span> *onImage <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">6</span>_0) <span class="built_in">UI_APPEARANCE_SELECTOR</span>;</div><div class="line"><span class="comment">// 关闭时的状态图片</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nullable</span>, <span class="keyword">nonatomic</span>, <span class="keyword">strong</span>) <span class="built_in">UIImage</span> *offImage <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">6</span>_0) <span class="built_in">UI_APPEARANCE_SELECTOR</span>;</div><div class="line"></div><div class="line"><span class="comment">// 开关</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>,<span class="keyword">getter</span>=isOn) <span class="built_in">BOOL</span> on;</div><div class="line"></div><div class="line"><span class="comment">// 初始化</span></div><div class="line">- (<span class="keyword">instancetype</span>)initWithFrame:(<span class="built_in">CGRect</span>)frame <span class="built_in">NS_DESIGNATED_INITIALIZER</span>;</div><div class="line">- (<span class="keyword">nullable</span> <span class="keyword">instancetype</span>)initWithCoder:(<span class="built_in">NSCoder</span> *)aDecoder <span class="built_in">NS_DESIGNATED_INITIALIZER</span>;</div><div class="line"><span class="comment">// 设置开关并有动画效果</span></div><div class="line">- (<span class="keyword">void</span>)setOn:(<span class="built_in">BOOL</span>)on animated:(<span class="built_in">BOOL</span>)animated; </div><div class="line"></div><div class="line"><span class="keyword">@end</span></div></pre></td></tr></table></figure><p>e.g.<br><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">UISwitch</span> *switch1 = [[<span class="built_in">UISwitch</span> alloc]initWithFrame:<span class="built_in">CGRectMake</span>(<span class="number">100</span>, <span class="number">100</span>, <span class="number">0</span>, <span class="number">0</span>)];</div><div class="line">switch1.onTintColor = [<span class="built_in">UIColor</span> redColor];</div><div class="line">switch1.thumbTintColor = [<span class="built_in">UIColor</span> blueColor];</div><div class="line">switch1.tintColor = [<span class="built_in">UIColor</span> yellowColor];</div><div class="line">[switch1 setOn:<span class="literal">YES</span> animated:<span class="literal">YES</span>];</div><div class="line">[<span class="keyword">self</span>.view addSubview:switch1];</div></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;您可以使用UISwitch类来创建和管理ON/ OFF按钮，您会看到，例如在飞行模式等服务的偏好设定（设定）。这些对象被称为开关。&lt;br&gt;
    
    </summary>
    
      <category term="iOS" scheme="https://wynter.wang/categories/iOS/"/>
    
    
      <category term="API" scheme="https://wynter.wang/tags/API/"/>
    
      <category term="iOS" scheme="https://wynter.wang/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>iOS-UIKit框架学习—UISlider</title>
    <link href="https://wynter.wang/2017/04/14/iOS-UIKit%E6%A1%86%E6%9E%B6%E5%AD%A6%E4%B9%A0%E2%80%94UISlider/"/>
    <id>https://wynter.wang/2017/04/14/iOS-UIKit框架学习—UISlider/</id>
    <published>2017-04-14T09:13:35.000Z</published>
    <updated>2017-04-14T09:28:43.000Z</updated>
    
    <content type="html"><![CDATA[<p>一个UISlider对象是一个可视化的控制，用来选择一个连续值范围从单一的值。滑块始终显示为单杠。拇指，注意到滑块的当前值，并更改设置的用户可以通过移动。<br><a id="more"></a></p><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="built_in">NS_CLASS_AVAILABLE_IOS</span>(<span class="number">2</span>_0) __TVOS_PROHIBITED <span class="class"><span class="keyword">@interface</span> <span class="title">UISlider</span> : <span class="title">UIControl</span> &lt;<span class="title">NSCoding</span>&gt;</span></div><div class="line"></div><div class="line"><span class="comment">// 当前的值</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>) <span class="keyword">float</span> value;</div><div class="line"><span class="comment">// 滑动器的最小值</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>) <span class="keyword">float</span> minimumValue;</div><div class="line"><span class="comment">// 滑动器的最大值</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>) <span class="keyword">float</span> maximumValue;</div><div class="line"><span class="comment">// 左侧最小值图片 如🔊</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nullable</span>, <span class="keyword">nonatomic</span>,<span class="keyword">strong</span>) <span class="built_in">UIImage</span> *minimumValueImage;</div><div class="line"><span class="comment">// 右侧最大值图片 如🔊</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nullable</span>, <span class="keyword">nonatomic</span>,<span class="keyword">strong</span>) <span class="built_in">UIImage</span> *maximumValueImage;</div><div class="line"><span class="comment">// 是否拖动值改变后连续 默认YES</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>,<span class="keyword">getter</span>=isContinuous) <span class="built_in">BOOL</span> continuous;</div><div class="line"></div><div class="line"><span class="comment">// 最小的值的填充色</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nullable</span>, <span class="keyword">nonatomic</span>,<span class="keyword">strong</span>) <span class="built_in">UIColor</span> *minimumTrackTintColor <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">5</span>_0) <span class="built_in">UI_APPEARANCE_SELECTOR</span>;</div><div class="line"><span class="comment">// 最大的值的填充色</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nullable</span>, <span class="keyword">nonatomic</span>,<span class="keyword">strong</span>) <span class="built_in">UIColor</span> *maximumTrackTintColor <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">5</span>_0) <span class="built_in">UI_APPEARANCE_SELECTOR</span>;</div><div class="line"><span class="comment">// 滑块的填充色</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nullable</span>, <span class="keyword">nonatomic</span>,<span class="keyword">strong</span>) <span class="built_in">UIColor</span> *thumbTintColor <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">5</span>_0) <span class="built_in">UI_APPEARANCE_SELECTOR</span>;</div><div class="line"></div><div class="line"><span class="comment">// 设置值并有动画效果</span></div><div class="line">- (<span class="keyword">void</span>)setValue:(<span class="keyword">float</span>)value animated:(<span class="built_in">BOOL</span>)animated;</div><div class="line"></div><div class="line"><span class="comment">// 设置不同状态下滑块图片</span></div><div class="line">- (<span class="keyword">void</span>)setThumbImage:(<span class="keyword">nullable</span> <span class="built_in">UIImage</span> *)image forState:(<span class="built_in">UIControlState</span>)state;</div><div class="line"><span class="comment">// 设置不同状态下最小值图片</span></div><div class="line">- (<span class="keyword">void</span>)setMinimumTrackImage:(<span class="keyword">nullable</span> <span class="built_in">UIImage</span> *)image forState:(<span class="built_in">UIControlState</span>)state;</div><div class="line"><span class="comment">// 设置不同状态下最大值图片</span></div><div class="line">- (<span class="keyword">void</span>)setMaximumTrackImage:(<span class="keyword">nullable</span> <span class="built_in">UIImage</span> *)image forState:(<span class="built_in">UIControlState</span>)state;</div><div class="line"></div><div class="line"><span class="comment">// 获取不同状态下滑块的图片</span></div><div class="line">- (<span class="keyword">nullable</span> <span class="built_in">UIImage</span> *)thumbImageForState:(<span class="built_in">UIControlState</span>)state;</div><div class="line"><span class="comment">// 获取不同状态下最小值的图片</span></div><div class="line">- (<span class="keyword">nullable</span> <span class="built_in">UIImage</span> *)minimumTrackImageForState:(<span class="built_in">UIControlState</span>)state;</div><div class="line"><span class="comment">// 获取不同状态下最大值的图片</span></div><div class="line">- (<span class="keyword">nullable</span> <span class="built_in">UIImage</span> *)maximumTrackImageForState:(<span class="built_in">UIControlState</span>)state;</div><div class="line"></div><div class="line"><span class="comment">// 获取当前滑块的图片</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nullable</span>,<span class="keyword">nonatomic</span>,<span class="keyword">readonly</span>) <span class="built_in">UIImage</span> *currentThumbImage;</div><div class="line"><span class="comment">// 获取当前最小值图片</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nullable</span>,<span class="keyword">nonatomic</span>,<span class="keyword">readonly</span>) <span class="built_in">UIImage</span> *currentMinimumTrackImage;</div><div class="line"><span class="comment">// 获取当前最大值图片</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nullable</span>,<span class="keyword">nonatomic</span>,<span class="keyword">readonly</span>) <span class="built_in">UIImage</span> *currentMaximumTrackImage;</div><div class="line"></div><div class="line"><span class="comment">// 返回最小值图片绘制的矩形</span></div><div class="line">- (<span class="built_in">CGRect</span>)minimumValueImageRectForBounds:(<span class="built_in">CGRect</span>)bounds;</div><div class="line"><span class="comment">// 返回最大值图片绘制的矩形</span></div><div class="line">- (<span class="built_in">CGRect</span>)maximumValueImageRectForBounds:(<span class="built_in">CGRect</span>)bounds;</div><div class="line"><span class="comment">// 返回为滑块轨道绘制的矩形</span></div><div class="line">- (<span class="built_in">CGRect</span>)trackRectForBounds:(<span class="built_in">CGRect</span>)bounds;</div><div class="line"><span class="comment">// 返回为拇指滑块轨道绘制的矩形</span></div><div class="line">- (<span class="built_in">CGRect</span>)thumbRectForBounds:(<span class="built_in">CGRect</span>)bounds trackRect:(<span class="built_in">CGRect</span>)rect value:(<span class="keyword">float</span>)value;</div><div class="line"></div><div class="line"><span class="keyword">@end</span></div></pre></td></tr></table></figure><p>e.g.<br><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">UISlider</span> *slider = [[<span class="built_in">UISlider</span> alloc]initWithFrame:<span class="built_in">CGRectMake</span>(<span class="number">0</span>, <span class="number">100</span>, SCREEN_WIDTH, <span class="number">10</span>)];</div><div class="line">slider.minimumValue = <span class="number">0.</span>f;</div><div class="line">slider.maximumValue = <span class="number">100.</span>f;</div><div class="line">slider.thumbTintColor = [<span class="built_in">UIColor</span> blueColor];</div><div class="line">slider.minimumTrackTintColor = [<span class="built_in">UIColor</span> yellowColor];</div><div class="line">slider.maximumTrackTintColor = [<span class="built_in">UIColor</span> redColor];</div><div class="line">[slider setValue:<span class="number">50</span> animated:<span class="literal">YES</span>];</div><div class="line">[<span class="keyword">self</span>.view addSubview:slider];</div></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;一个UISlider对象是一个可视化的控制，用来选择一个连续值范围从单一的值。滑块始终显示为单杠。拇指，注意到滑块的当前值，并更改设置的用户可以通过移动。&lt;br&gt;
    
    </summary>
    
      <category term="iOS" scheme="https://wynter.wang/categories/iOS/"/>
    
    
      <category term="API" scheme="https://wynter.wang/tags/API/"/>
    
      <category term="iOS" scheme="https://wynter.wang/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>iOS-UIKit框架学习—UITextField</title>
    <link href="https://wynter.wang/2017/04/14/iOS-UIKit%E6%A1%86%E6%9E%B6%E5%AD%A6%E4%B9%A0%E2%80%94UITextField/"/>
    <id>https://wynter.wang/2017/04/14/iOS-UIKit框架学习—UITextField/</id>
    <published>2017-04-14T09:10:52.000Z</published>
    <updated>2017-04-14T09:32:16.000Z</updated>
    
    <content type="html"><![CDATA[<p>UITextField对象是一个显示可编辑的文字和动作消息发送到目标对象，当用户按下返回按钮控制。通常可以使用这个类从用户收集少量的文字，并执行一些立即采取行动，如搜索操作，根据该文本。<br><a id="more"></a></p><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">NS_CLASS_AVAILABLE_IOS</span>(<span class="number">2</span>_0) <span class="class"><span class="keyword">@interface</span> <span class="title">UITextField</span> : <span class="title">UIControl</span> &lt;<span class="title">UITextInput</span>, <span class="title">NSCoding</span>, <span class="title">UIContentSizeCategoryAdjusting</span>&gt;</span></div><div class="line"></div><div class="line"><span class="comment">// 文本</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nullable</span>, <span class="keyword">nonatomic</span>,<span class="keyword">copy</span>)   <span class="built_in">NSString</span>               *text;</div><div class="line"><span class="comment">// 富文本</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nullable</span>, <span class="keyword">nonatomic</span>,<span class="keyword">copy</span>)   <span class="built_in">NSAttributedString</span>     *attributedText <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">6</span>_0);</div><div class="line"><span class="comment">// 字体颜色</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nullable</span>, <span class="keyword">nonatomic</span>,<span class="keyword">strong</span>) <span class="built_in">UIColor</span>                *textColor;</div><div class="line"><span class="comment">// 字体 默认系统12号</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nullable</span>, <span class="keyword">nonatomic</span>,<span class="keyword">strong</span>) <span class="built_in">UIFont</span>                 *font;</div><div class="line"><span class="comment">// 对齐方式</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>)        <span class="built_in">NSTextAlignment</span>         textAlignment;</div><div class="line"><span class="comment">// 文本边缘风格</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>)        <span class="built_in">UITextBorderStyle</span>       borderStyle;</div><div class="line"><span class="comment">// 默认富文本属性</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>,<span class="keyword">copy</span>)   <span class="built_in">NSDictionary</span>&lt;<span class="built_in">NSString</span> *, <span class="keyword">id</span>&gt;           *defaultTextAttributes <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">7</span>_0);</div><div class="line"><span class="comment">// 占位符</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nullable</span>, <span class="keyword">nonatomic</span>,<span class="keyword">copy</span>)   <span class="built_in">NSString</span>               *placeholder;</div><div class="line"><span class="comment">// 占位符富文本属性</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nullable</span>, <span class="keyword">nonatomic</span>,<span class="keyword">copy</span>)   <span class="built_in">NSAttributedString</span>     *attributedPlaceholder <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">6</span>_0);</div><div class="line"><span class="comment">// 在文本开始编辑的时候是否移除旧文本</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>)        <span class="built_in">BOOL</span>                    clearsOnBeginEditing;</div><div class="line"><span class="comment">// 是否根据文本框宽度自动调节字体大小</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>)        <span class="built_in">BOOL</span>                    adjustsFontSizeToFitWidth;</div><div class="line"><span class="comment">// 允许最小的字号</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>)        <span class="built_in">CGFloat</span>                 minimumFontSize;</div><div class="line"><span class="comment">// 代理</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nullable</span>, <span class="keyword">nonatomic</span>,<span class="keyword">weak</span>)   <span class="keyword">id</span>&lt;<span class="built_in">UITextFieldDelegate</span>&gt; delegate;</div><div class="line"><span class="comment">// 表示启用时文本字段的背景外观的图像</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nullable</span>, <span class="keyword">nonatomic</span>,<span class="keyword">strong</span>) <span class="built_in">UIImage</span>                *background;</div><div class="line"><span class="comment">// 表示禁用时文本字段的背景外观的图像</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nullable</span>, <span class="keyword">nonatomic</span>,<span class="keyword">strong</span>) <span class="built_in">UIImage</span>                *disabledBackground;</div><div class="line"><span class="comment">// 文本是否处于编辑状态</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>,<span class="keyword">readonly</span>,<span class="keyword">getter</span>=isEditing) <span class="built_in">BOOL</span> editing;</div><div class="line"><span class="comment">// 是否可以编辑文本中的属性</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>) <span class="built_in">BOOL</span> allowsEditingTextAttributes <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">6</span>_0);</div><div class="line"><span class="comment">// 用户输入的新文本属性</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nullable</span>, <span class="keyword">nonatomic</span>,<span class="keyword">copy</span>) <span class="built_in">NSDictionary</span>&lt;<span class="built_in">NSString</span> *, <span class="keyword">id</span>&gt; *typingAttributes <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">6</span>_0);</div><div class="line"><span class="comment">// 清除按钮类型</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>)        <span class="built_in">UITextFieldViewMode</span>  clearButtonMode;</div><div class="line"><span class="comment">// 左侧view</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nullable</span>, <span class="keyword">nonatomic</span>,<span class="keyword">strong</span>) <span class="built_in">UIView</span>              *leftView;</div><div class="line"><span class="comment">// 左侧视图的类型</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>)        <span class="built_in">UITextFieldViewMode</span>  leftViewMode;</div><div class="line"><span class="comment">// 右侧view</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nullable</span>, <span class="keyword">nonatomic</span>,<span class="keyword">strong</span>) <span class="built_in">UIView</span>              *rightView;</div><div class="line"><span class="comment">// 右侧视图的类型</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>)        <span class="built_in">UITextFieldViewMode</span>  rightViewMode;</div><div class="line"></div><div class="line"><span class="comment">// 返回接收者的CGRect</span></div><div class="line">- (<span class="built_in">CGRect</span>)borderRectForBounds:(<span class="built_in">CGRect</span>)bounds;</div><div class="line">- (<span class="built_in">CGRect</span>)textRectForBounds:(<span class="built_in">CGRect</span>)bounds;</div><div class="line">- (<span class="built_in">CGRect</span>)placeholderRectForBounds:(<span class="built_in">CGRect</span>)bounds;</div><div class="line">- (<span class="built_in">CGRect</span>)editingRectForBounds:(<span class="built_in">CGRect</span>)bounds;</div><div class="line">- (<span class="built_in">CGRect</span>)clearButtonRectForBounds:(<span class="built_in">CGRect</span>)bounds;</div><div class="line">- (<span class="built_in">CGRect</span>)leftViewRectForBounds:(<span class="built_in">CGRect</span>)bounds;</div><div class="line">- (<span class="built_in">CGRect</span>)rightViewRectForBounds:(<span class="built_in">CGRect</span>)bounds;</div><div class="line"></div><div class="line"><span class="comment">// 绘制文本</span></div><div class="line">- (<span class="keyword">void</span>)drawTextInRect:(<span class="built_in">CGRect</span>)rect;</div><div class="line"><span class="comment">// 绘制占位符文本</span></div><div class="line">- (<span class="keyword">void</span>)drawPlaceholderInRect:(<span class="built_in">CGRect</span>)rect;</div><div class="line"></div><div class="line"><span class="comment">// 输入框成为第一响应显示自定义输入视图</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nullable</span>, <span class="keyword">readwrite</span>, <span class="keyword">strong</span>) <span class="built_in">UIView</span> *inputView;</div><div class="line"><span class="comment">// 输入框成为第一响应显示自定义附件输入视图</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nullable</span>, <span class="keyword">readwrite</span>, <span class="keyword">strong</span>) <span class="built_in">UIView</span> *inputAccessoryView;</div><div class="line"><span class="comment">// 插入文本之前是否替换前一个文本</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>) <span class="built_in">BOOL</span> clearsOnInsertion <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">6</span>_0);</div><div class="line"></div><div class="line"><span class="keyword">@end</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">UIView</span> (<span class="title">UITextField</span>)</span></div><div class="line"><span class="comment">// 是否结束编辑</span></div><div class="line">- (<span class="built_in">BOOL</span>)endEditing:(<span class="built_in">BOOL</span>)force;</div><div class="line"><span class="keyword">@end</span></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">@protocol</span> <span class="title">UITextFieldDelegate</span> &lt;<span class="title">NSObject</span>&gt;</span></div><div class="line"></div><div class="line"><span class="keyword">@optional</span></div><div class="line"></div><div class="line"><span class="comment">// 是否可以在指定文本中编辑</span></div><div class="line">- (<span class="built_in">BOOL</span>)textFieldShouldBeginEditing:(<span class="built_in">UITextField</span> *)textField;</div><div class="line"><span class="comment">// 开始编辑</span></div><div class="line">- (<span class="keyword">void</span>)textFieldDidBeginEditing:(<span class="built_in">UITextField</span> *)textField;</div><div class="line"><span class="comment">// 是否可以在指定文本中停止</span></div><div class="line">- (<span class="built_in">BOOL</span>)textFieldShouldEndEditing:(<span class="built_in">UITextField</span> *)textField;</div><div class="line"><span class="comment">// 结束编辑</span></div><div class="line">- (<span class="keyword">void</span>)textFieldDidEndEditing:(<span class="built_in">UITextField</span> *)textField;</div><div class="line"><span class="comment">//  替换textFieldDidEndEditing:</span></div><div class="line">- (<span class="keyword">void</span>)textFieldDidEndEditing:(<span class="built_in">UITextField</span> *)textField reason:(<span class="built_in">UITextFieldDidEndEditingReason</span>)reason <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">10</span>_0);</div><div class="line"><span class="comment">// 指定文本是否可以发生改变</span></div><div class="line">- (<span class="built_in">BOOL</span>)textField:(<span class="built_in">UITextField</span> *)textField shouldChangeCharactersInRange:(<span class="built_in">NSRange</span>)range replacementString:(<span class="built_in">NSString</span> *)string;</div><div class="line"></div><div class="line"><span class="comment">// 是否可以清除指定内容</span></div><div class="line">- (<span class="built_in">BOOL</span>)textFieldShouldClear:(<span class="built_in">UITextField</span> *)textField;</div><div class="line"><span class="comment">// 按下返回按钮按下是否</span></div><div class="line">- (<span class="built_in">BOOL</span>)textFieldShouldReturn:(<span class="built_in">UITextField</span> *)textField;</div><div class="line"></div><div class="line"><span class="keyword">@end</span></div></pre></td></tr></table></figure><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="comment">// 边界风格</span></div><div class="line"><span class="keyword">typedef</span> <span class="built_in">NS_ENUM</span>(<span class="built_in">NSInteger</span>, <span class="built_in">UITextBorderStyle</span>) &#123;</div><div class="line">    <span class="built_in">UITextBorderStyleNone</span>,        <span class="comment">//  无</span></div><div class="line">    <span class="built_in">UITextBorderStyleLine</span>,        <span class="comment">// 矩形外观</span></div><div class="line">    <span class="built_in">UITextBorderStyleBezel</span>,       <span class="comment">// 阴影矩形外观</span></div><div class="line">    <span class="built_in">UITextBorderStyleRoundedRect</span>  <span class="comment">// 圆角矩形</span></div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="comment">// 右侧清空按钮</span></div><div class="line"><span class="keyword">typedef</span> <span class="built_in">NS_ENUM</span>(<span class="built_in">NSInteger</span>, <span class="built_in">UITextFieldViewMode</span>) &#123;</div><div class="line">    <span class="built_in">UITextFieldViewModeNever</span>,         <span class="comment">// 从不出现</span></div><div class="line">    <span class="built_in">UITextFieldViewModeWhileEditing</span>,  <span class="comment">// 编辑时出现</span></div><div class="line">    <span class="built_in">UITextFieldViewModeUnlessEditing</span>, <span class="comment">// 除了编辑外出现</span></div><div class="line">    <span class="built_in">UITextFieldViewModeAlways</span>         <span class="comment">// 一直出现</span></div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="comment">// 将要编辑完成的状态</span></div><div class="line"><span class="keyword">typedef</span> <span class="built_in">NS_ENUM</span>(<span class="built_in">NSInteger</span>, <span class="built_in">UITextFieldDidEndEditingReason</span>) &#123;</div><div class="line">    <span class="built_in">UITextFieldDidEndEditingReasonCommitted</span>, <span class="comment">// 提交编辑</span></div><div class="line">    <span class="built_in">UITextFieldDidEndEditingReasonCancelled</span>  <span class="comment">// 取消编辑</span></div><div class="line">&#125; <span class="built_in">NS_ENUM_AVAILABLE_IOS</span>(<span class="number">10</span>_0);</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">// 开始编辑时发送通知</span></div><div class="line"><span class="built_in">UIKIT_EXTERN</span> <span class="built_in">NSNotificationName</span> <span class="keyword">const</span> <span class="built_in">UITextFieldTextDidBeginEditingNotification</span>;</div><div class="line"><span class="comment">// 编辑结束时发送通知</span></div><div class="line"><span class="built_in">UIKIT_EXTERN</span> <span class="built_in">NSNotificationName</span> <span class="keyword">const</span> <span class="built_in">UITextFieldTextDidEndEditingNotification</span>;</div><div class="line"><span class="comment">// 内容变化时发送通知</span></div><div class="line"><span class="built_in">UIKIT_EXTERN</span> <span class="built_in">NSNotificationName</span> <span class="keyword">const</span> <span class="built_in">UITextFieldTextDidChangeNotification</span>;</div><div class="line"></div><div class="line"><span class="built_in">UIKIT_EXTERN</span> <span class="built_in">NSString</span> *<span class="keyword">const</span> <span class="built_in">UITextFieldDidEndEditingReasonKey</span> <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">10</span>_0);</div></pre></td></tr></table></figure><p>e.g.<br><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">UITextField</span> *TF = [[<span class="built_in">UITextField</span> alloc] init];</div><div class="line">TF.placeholder = <span class="string">@"请输入用户名"</span>;</div><div class="line">TF.backgroundColor = [<span class="built_in">UIColor</span> clearColor];</div><div class="line">TF.delegate = <span class="keyword">self</span>;</div><div class="line">TF.clearButtonMode = <span class="built_in">UITextFieldViewModeWhileEditing</span>;</div><div class="line">TF.secureTextEntry = <span class="literal">YES</span>;</div><div class="line">TF.font = [<span class="built_in">UIFont</span> systemFontOfSize:<span class="number">15.0</span>];</div><div class="line">TF.textColor = <span class="built_in">UIColorFromRGB</span>(<span class="number">0x1a2220</span>);</div><div class="line">TF.tintColor = <span class="built_in">UIColorFromRGB</span>(<span class="number">0x25cfa6</span>); <span class="comment">// 光标颜色</span></div><div class="line">TF.keyboardType = <span class="built_in">UIKeyboardTypeNumberPad</span>;</div><div class="line">TF.returnKeyType = <span class="built_in">UIReturnKeyNext</span>;</div><div class="line">TF.text = <span class="string">@"18888888888"</span>;</div><div class="line">[<span class="keyword">self</span>.view addSubview:TF];</div></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;UITextField对象是一个显示可编辑的文字和动作消息发送到目标对象，当用户按下返回按钮控制。通常可以使用这个类从用户收集少量的文字，并执行一些立即采取行动，如搜索操作，根据该文本。&lt;br&gt;
    
    </summary>
    
      <category term="iOS" scheme="https://wynter.wang/categories/iOS/"/>
    
    
      <category term="API" scheme="https://wynter.wang/tags/API/"/>
    
      <category term="iOS" scheme="https://wynter.wang/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>iOS-UIKit框架学习—UISegmentedControl</title>
    <link href="https://wynter.wang/2017/04/14/iOS-UIKit%E6%A1%86%E6%9E%B6%E5%AD%A6%E4%B9%A0%E2%80%94UISegmentedControl/"/>
    <id>https://wynter.wang/2017/04/14/iOS-UIKit框架学习—UISegmentedControl/</id>
    <published>2017-04-14T09:10:14.000Z</published>
    <updated>2017-04-14T09:17:28.000Z</updated>
    
    <content type="html"><![CDATA[<p>一个UISegmentedControl对象是横向控制多个段，每个段作为一个独立的按钮运作。分段控制提供一个紧凑的手段，组合到一起的控制。<br><a id="more"></a></p><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">NS_CLASS_AVAILABLE_IOS</span>(<span class="number">2</span>_0) <span class="class"><span class="keyword">@interface</span> <span class="title">UISegmentedControl</span> : <span class="title">UIControl</span> &lt;<span class="title">NSCoding</span>&gt;</span></div><div class="line"></div><div class="line"><span class="comment">// 初始化方法：传入的数组可以是字符串也可以是UIImage对象的图片数组</span></div><div class="line">- (<span class="keyword">instancetype</span>)initWithItems:(<span class="keyword">nullable</span> <span class="built_in">NSArray</span> *)items;</div><div class="line"><span class="comment">// 设置是否保持选中状态</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>,<span class="keyword">getter</span>=isMomentary) <span class="built_in">BOOL</span> momentary;</div><div class="line"><span class="comment">// 获取标签个数</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>,<span class="keyword">readonly</span>) <span class="built_in">NSUInteger</span> numberOfSegments;</div><div class="line"><span class="comment">// 设置标签宽度是否随内容自适应 默认是 NO.</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>) <span class="built_in">BOOL</span> apportionsSegmentWidthsByContent <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">5</span>_0);</div><div class="line"><span class="comment">// 插入文字标签在index位置</span></div><div class="line">- (<span class="keyword">void</span>)insertSegmentWithTitle:(<span class="keyword">nullable</span> <span class="built_in">NSString</span> *)title atIndex:(<span class="built_in">NSUInteger</span>)segment animated:(<span class="built_in">BOOL</span>)animated;</div><div class="line"><span class="comment">// 插入图片标签在index位置</span></div><div class="line">- (<span class="keyword">void</span>)insertSegmentWithImage:(<span class="keyword">nullable</span> <span class="built_in">UIImage</span> *)image  atIndex:(<span class="built_in">NSUInteger</span>)segment animated:(<span class="built_in">BOOL</span>)animated;</div><div class="line"><span class="comment">// 根据索引删除标签</span></div><div class="line">- (<span class="keyword">void</span>)removeSegmentAtIndex:(<span class="built_in">NSUInteger</span>)segment animated:(<span class="built_in">BOOL</span>)animated;</div><div class="line"><span class="comment">// 删除所有标签</span></div><div class="line">- (<span class="keyword">void</span>)removeAllSegments;</div><div class="line"><span class="comment">// 重设标签标题</span></div><div class="line">- (<span class="keyword">void</span>)setTitle:(<span class="keyword">nullable</span> <span class="built_in">NSString</span> *)title forSegmentAtIndex:(<span class="built_in">NSUInteger</span>)segment;</div><div class="line"><span class="comment">// 获取标签标题</span></div><div class="line">- (<span class="keyword">nullable</span> <span class="built_in">NSString</span> *)titleForSegmentAtIndex:(<span class="built_in">NSUInteger</span>)segment;</div><div class="line"><span class="comment">// 设置标签图片</span></div><div class="line">- (<span class="keyword">void</span>)setImage:(<span class="keyword">nullable</span> <span class="built_in">UIImage</span> *)image forSegmentAtIndex:(<span class="built_in">NSUInteger</span>)segment;</div><div class="line"><span class="comment">// 获取标签图片</span></div><div class="line">- (<span class="keyword">nullable</span> <span class="built_in">UIImage</span> *)imageForSegmentAtIndex:(<span class="built_in">NSUInteger</span>)segment;</div><div class="line"><span class="comment">// 根据索引设置相应标签宽度 设置为0则自动获取，默认值0</span></div><div class="line">- (<span class="keyword">void</span>)setWidth:(<span class="built_in">CGFloat</span>)width forSegmentAtIndex:(<span class="built_in">NSUInteger</span>)segment;</div><div class="line"><span class="comment">// 根据索引获取标签宽度</span></div><div class="line">- (<span class="built_in">CGFloat</span>)widthForSegmentAtIndex:(<span class="built_in">NSUInteger</span>)segment;</div><div class="line"><span class="comment">// 设置标签内容的偏移量 默认值0</span></div><div class="line">- (<span class="keyword">void</span>)setContentOffset:(<span class="built_in">CGSize</span>)offset forSegmentAtIndex:(<span class="built_in">NSUInteger</span>)segment;</div><div class="line"><span class="comment">// 根据索引获取变标签内容的偏移量</span></div><div class="line">- (<span class="built_in">CGSize</span>)contentOffsetForSegmentAtIndex:(<span class="built_in">NSUInteger</span>)segment;</div><div class="line"><span class="comment">// 根据所以设置标签是否有效(默认有效)</span></div><div class="line">- (<span class="keyword">void</span>)setEnabled:(<span class="built_in">BOOL</span>)enabled forSegmentAtIndex:(<span class="built_in">NSUInteger</span>)segment;</div><div class="line"><span class="comment">// 根据索引获取当前标签是否有效</span></div><div class="line">- (<span class="built_in">BOOL</span>)isEnabledForSegmentAtIndex:(<span class="built_in">NSUInteger</span>)segment;</div><div class="line"><span class="comment">// 设置和获取当前选中的标签索引</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>) <span class="built_in">NSInteger</span> selectedSegmentIndex;</div><div class="line"><span class="comment">// 设置标签风格颜色</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">null_resettable</span>,<span class="keyword">nonatomic</span>,<span class="keyword">strong</span>) <span class="built_in">UIColor</span> *tintColor;</div><div class="line"><span class="comment">// 置特定状态下segment的背景图案</span></div><div class="line">- (<span class="keyword">void</span>)setBackgroundImage:(<span class="keyword">nullable</span> <span class="built_in">UIImage</span> *)backgroundImage forState:(<span class="built_in">UIControlState</span>)state barMetrics:(<span class="built_in">UIBarMetrics</span>)barMetrics <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">5</span>_0) <span class="built_in">UI_APPEARANCE_SELECTOR</span>;</div><div class="line"><span class="comment">// 获取背景图案</span></div><div class="line">- (<span class="keyword">nullable</span> <span class="built_in">UIImage</span> *)backgroundImageForState:(<span class="built_in">UIControlState</span>)state barMetrics:(<span class="built_in">UIBarMetrics</span>)barMetrics <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">5</span>_0) <span class="built_in">UI_APPEARANCE_SELECTOR</span>;</div><div class="line"><span class="comment">// 设置标签之间分割线的图案</span></div><div class="line">- (<span class="keyword">void</span>)setDividerImage:(<span class="keyword">nullable</span> <span class="built_in">UIImage</span> *)dividerImage forLeftSegmentState:(<span class="built_in">UIControlState</span>)leftState rightSegmentState:(<span class="built_in">UIControlState</span>)rightState barMetrics:(<span class="built_in">UIBarMetrics</span>)barMetrics <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">5</span>_0) <span class="built_in">UI_APPEARANCE_SELECTOR</span>;</div><div class="line"><span class="comment">// 获取标签之间分割线的图案</span></div><div class="line">- (<span class="keyword">nullable</span> <span class="built_in">UIImage</span> *)dividerImageForLeftSegmentState:(<span class="built_in">UIControlState</span>)leftState rightSegmentState:(<span class="built_in">UIControlState</span>)rightState barMetrics:(<span class="built_in">UIBarMetrics</span>)barMetrics  <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">5</span>_0) <span class="built_in">UI_APPEARANCE_SELECTOR</span>;</div><div class="line"><span class="comment">// 通过Attribute字符串属性字典设置标签标题</span></div><div class="line">- (<span class="keyword">void</span>)setTitleTextAttributes:(<span class="keyword">nullable</span> <span class="built_in">NSDictionary</span> *)attributes forState:(<span class="built_in">UIControlState</span>)state <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">5</span>_0) <span class="built_in">UI_APPEARANCE_SELECTOR</span>;</div><div class="line">- (<span class="keyword">nullable</span> <span class="built_in">NSDictionary</span> *)titleTextAttributesForState:(<span class="built_in">UIControlState</span>)state <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">5</span>_0) <span class="built_in">UI_APPEARANCE_SELECTOR</span>;</div><div class="line"><span class="comment">// 获取Attribute字符串属性字典</span></div><div class="line">- (<span class="keyword">void</span>)setContentPositionAdjustment:(<span class="built_in">UIOffset</span>)adjustment forSegmentType:(<span class="built_in">UISegmentedControlSegment</span>)leftCenterRightOrAlone barMetrics:(<span class="built_in">UIBarMetrics</span>)barMetrics <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">5</span>_0) <span class="built_in">UI_APPEARANCE_SELECTOR</span>;</div><div class="line"><span class="comment">// 自行设置标签内容的偏移量</span></div><div class="line">- (<span class="built_in">UIOffset</span>)contentPositionAdjustmentForSegmentType:(<span class="built_in">UISegmentedControlSegment</span>)leftCenterRightOrAlone barMetrics:(<span class="built_in">UIBarMetrics</span>)barMetrics <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">5</span>_0) <span class="built_in">UI_APPEARANCE_SELECTOR</span>;</div><div class="line"></div><div class="line"><span class="keyword">@end</span></div></pre></td></tr></table></figure><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">enum</span> &#123;</div><div class="line">    <span class="built_in">UISegmentedControlNoSegment</span> = <span class="number">-1</span>   <span class="comment">// 没有选定分段的下标</span></div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="comment">// 分段类型</span></div><div class="line"><span class="keyword">typedef</span> <span class="built_in">NS_ENUM</span>(<span class="built_in">NSInteger</span>, <span class="built_in">UISegmentedControlSegment</span>) &#123;</div><div class="line">    <span class="built_in">UISegmentedControlSegmentAny</span> = <span class="number">0</span>,<span class="comment">// 所有标签都受影响</span></div><div class="line">    <span class="built_in">UISegmentedControlSegmentLeft</span> = <span class="number">1</span>,  <span class="comment">// 只有左边部分受到影响</span></div><div class="line">    <span class="built_in">UISegmentedControlSegmentCenter</span> = <span class="number">2</span>, <span class="comment">// 只有中间部分受到影响</span></div><div class="line">    <span class="built_in">UISegmentedControlSegmentRight</span> = <span class="number">3</span>,  <span class="comment">// 只有右边部分受到影响</span></div><div class="line">    <span class="built_in">UISegmentedControlSegmentAlone</span> = <span class="number">4</span>,  <span class="comment">// 在只有一个标签的时候生效</span></div><div class="line">&#125;;</div></pre></td></tr></table></figure><p>e.g.<br><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">UISegmentedControl</span> *segmentedControl = [[<span class="built_in">UISegmentedControl</span> alloc]initWithItems:@[<span class="string">@"1"</span>,<span class="string">@"2"</span>,<span class="string">@"3"</span>]];</div><div class="line">segmentedControl.frame =  <span class="built_in">CGRectMake</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">150</span>, <span class="number">44</span>);</div><div class="line">segmentedControl.tintColor = [<span class="built_in">UIColor</span> redColor];</div><div class="line">segmentedControl.apportionsSegmentWidthsByContent = <span class="literal">YES</span>;</div><div class="line">segmentedControl.selectedSegmentIndex = <span class="number">2</span>;</div><div class="line">[segmentedControl addTarget:<span class="keyword">self</span> action:<span class="keyword">@selector</span>(clickItem:) forControlEvents:<span class="built_in">UIControlEventTouchUpInside</span>];</div><div class="line"><span class="keyword">self</span>.navigationItem.titleView = segmentedControl;</div></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;一个UISegmentedControl对象是横向控制多个段，每个段作为一个独立的按钮运作。分段控制提供一个紧凑的手段，组合到一起的控制。&lt;br&gt;
    
    </summary>
    
      <category term="iOS" scheme="https://wynter.wang/categories/iOS/"/>
    
    
      <category term="API" scheme="https://wynter.wang/tags/API/"/>
    
      <category term="iOS" scheme="https://wynter.wang/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>iOS-UIKit框架学习—UIPageControl</title>
    <link href="https://wynter.wang/2017/03/08/iOS-UIKit%E6%A1%86%E6%9E%B6%E5%AD%A6%E4%B9%A0%E2%80%94UIPageControl/"/>
    <id>https://wynter.wang/2017/03/08/iOS-UIKit框架学习—UIPageControl/</id>
    <published>2017-03-08T08:22:19.000Z</published>
    <updated>2017-03-08T08:38:47.000Z</updated>
    
    <content type="html"><![CDATA[<p>您可以使用UIPageControl类来创建和管理页面控制。一个页面控制是在控制中心的点继承。每个点对应一个应用程序的文档（或其他实体的数据模型）页面，白色圆点表示当前浏览的网页。<br><a id="more"></a></p><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">NS_CLASS_AVAILABLE_IOS</span>(<span class="number">2</span>_0) <span class="class"><span class="keyword">@interface</span> <span class="title">UIPageControl</span> : <span class="title">UIControl</span></span></div><div class="line"></div><div class="line"><span class="comment">// 页面总数 默认值0</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>) <span class="built_in">NSInteger</span> numberOfPages;</div><div class="line"><span class="comment">// 当前第几页 默认值0</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>) <span class="built_in">NSInteger</span> currentPage;</div><div class="line"><span class="comment">// 如果只有一页是否隐藏指示器 默认值NO</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>) <span class="built_in">BOOL</span> hidesForSinglePage;</div><div class="line"><span class="comment">// 点击到新的一页不会更新当前的值，直到调用 -updateCurrentPageDisplay ，默认值NO</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>) <span class="built_in">BOOL</span> defersCurrentPageDisplay;</div><div class="line"><span class="comment">// 更新当前控件显示的值</span></div><div class="line">- (<span class="keyword">void</span>)updateCurrentPageDisplay;</div><div class="line"><span class="comment">// 返回显示为点所需的最小大小给出页计数</span></div><div class="line">- (<span class="built_in">CGSize</span>)sizeForNumberOfPages:(<span class="built_in">NSInteger</span>)pageCount;</div><div class="line"></div><div class="line"><span class="comment">// 底层指示器颜色</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nullable</span>, <span class="keyword">nonatomic</span>,<span class="keyword">strong</span>) <span class="built_in">UIColor</span> *pageIndicatorTintColor <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">6</span>_0) <span class="built_in">UI_APPEARANCE_SELECTOR</span>;</div><div class="line"><span class="comment">// 当前指示器颜色</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nullable</span>, <span class="keyword">nonatomic</span>,<span class="keyword">strong</span>) <span class="built_in">UIColor</span> *currentPageIndicatorTintColor <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">6</span>_0) <span class="built_in">UI_APPEARANCE_SELECTOR</span>;</div><div class="line"></div><div class="line"><span class="keyword">@end</span></div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;您可以使用UIPageControl类来创建和管理页面控制。一个页面控制是在控制中心的点继承。每个点对应一个应用程序的文档（或其他实体的数据模型）页面，白色圆点表示当前浏览的网页。&lt;br&gt;
    
    </summary>
    
      <category term="iOS" scheme="https://wynter.wang/categories/iOS/"/>
    
    
      <category term="API" scheme="https://wynter.wang/tags/API/"/>
    
      <category term="iOS" scheme="https://wynter.wang/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>iOS-UIKit框架学习—UIDatePicker</title>
    <link href="https://wynter.wang/2017/03/08/iOS-UIKit%E6%A1%86%E6%9E%B6%E5%AD%A6%E4%B9%A0%E2%80%94UIDatePicker/"/>
    <id>https://wynter.wang/2017/03/08/iOS-UIKit框架学习—UIDatePicker/</id>
    <published>2017-03-08T08:22:03.000Z</published>
    <updated>2017-03-08T08:38:54.000Z</updated>
    
    <content type="html"><![CDATA[<p>UIDatePicker类实现了一个对象，它使用多个旋转的车轮，以允许用户选择日期和时间。iPhone的例子是一个日期选择器，定时器和闹钟设置闹钟的时钟应用程序中的窗格。您也可以使用日期选择器作为一个倒数计时器。<br><a id="more"></a></p><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">NS_CLASS_AVAILABLE_IOS</span>(<span class="number">2</span>_0) __TVOS_PROHIBITED <span class="class"><span class="keyword">@interface</span> <span class="title">UIDatePicker</span> : <span class="title">UIControl</span> &lt;<span class="title">NSCoding</span>&gt;</span></div><div class="line"></div><div class="line"><span class="comment">// DatePicker模式 默认值UIDatePickerModeDateAndTime</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>) <span class="built_in">UIDatePickerMode</span> datePickerMode;</div><div class="line"><span class="comment">// 设置日期选择器的范围 默认值 [NSLocale currentLocale]</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nullable</span>, <span class="keyword">nonatomic</span>, <span class="keyword">strong</span>) <span class="built_in">NSLocale</span>   *locale;</div><div class="line"><span class="comment">// 要使用日期选择器的日历 默认值 [NSCalendar currentCalendar]</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">null_resettable</span>, <span class="keyword">nonatomic</span>, <span class="keyword">copy</span>)   <span class="built_in">NSCalendar</span> *calendar;</div><div class="line"><span class="comment">// 使用当前时区或时区从日历</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nullable</span>, <span class="keyword">nonatomic</span>, <span class="keyword">strong</span>) <span class="built_in">NSTimeZone</span> *timeZone;</div><div class="line"><span class="comment">// 日期选取器所显示的日期</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>) <span class="built_in">NSDate</span> *date;</div><div class="line"><span class="comment">// 日期选择器可以选择的最小日期</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nullable</span>, <span class="keyword">nonatomic</span>, <span class="keyword">strong</span>) <span class="built_in">NSDate</span> *minimumDate;</div><div class="line"><span class="comment">// 日期选择器可以选择的最大日期</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nullable</span>, <span class="keyword">nonatomic</span>, <span class="keyword">strong</span>) <span class="built_in">NSDate</span> *maximumDate;</div><div class="line"><span class="comment">// 当属性设置为UIDatePickerModeCountDownTimer模式是时间选择器上的值</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>) <span class="built_in">NSTimeInterval</span> countDownDuration;</div><div class="line"><span class="comment">// 设置时间间隔的选择器，应为显示为分钟。最小1 最大30</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>) <span class="built_in">NSInteger</span>      minuteInterval;</div><div class="line"><span class="comment">// 设置带动画时间选择的的值</span></div><div class="line">- (<span class="keyword">void</span>)setDate:(<span class="built_in">NSDate</span> *)date animated:(<span class="built_in">BOOL</span>)animated;</div><div class="line"><span class="keyword">@end</span></div></pre></td></tr></table></figure><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// DatePicker模式</span></div><div class="line"><span class="keyword">typedef</span> <span class="built_in">NS_ENUM</span>(<span class="built_in">NSInteger</span>, <span class="built_in">UIDatePickerMode</span>) &#123;</div><div class="line">    <span class="built_in">UIDatePickerModeTime</span>,           <span class="comment">// 显示设置时分上、下午 (e.g. 6 | 53 | PM)</span></div><div class="line">    <span class="built_in">UIDatePickerModeDate</span>,           <span class="comment">// 显示年月日 (e.g. November | 15 | 2007)</span></div><div class="line">    <span class="built_in">UIDatePickerModeDateAndTime</span>,    <span class="comment">// 显示年月日时上、下午 (e.g. Wed Nov 15 | 6 | 53 | PM)</span></div><div class="line">    <span class="built_in">UIDatePickerModeCountDownTimer</span>, <span class="comment">// 显示时分 (e.g. 1 | 53)</span></div><div class="line">&#125; __TVOS_PROHIBITED;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;UIDatePicker类实现了一个对象，它使用多个旋转的车轮，以允许用户选择日期和时间。iPhone的例子是一个日期选择器，定时器和闹钟设置闹钟的时钟应用程序中的窗格。您也可以使用日期选择器作为一个倒数计时器。&lt;br&gt;
    
    </summary>
    
      <category term="iOS" scheme="https://wynter.wang/categories/iOS/"/>
    
    
      <category term="API" scheme="https://wynter.wang/tags/API/"/>
    
      <category term="iOS" scheme="https://wynter.wang/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>iOS-UIKit框架学习—UIButton</title>
    <link href="https://wynter.wang/2017/03/08/iOS-UIKit%E6%A1%86%E6%9E%B6%E5%AD%A6%E4%B9%A0%E2%80%94UIButton/"/>
    <id>https://wynter.wang/2017/03/08/iOS-UIKit框架学习—UIButton/</id>
    <published>2017-03-08T08:21:40.000Z</published>
    <updated>2017-03-08T08:39:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>UIButton的类的一个实例，实现了在触摸屏上的按钮。触摸一个按钮拦截事件和动作消息发送到目标对象时。设定的目<br>和行动方法都继承自UIControl。这个类提供了方法来设置标题，图像，按钮等外观属性。通过这些访问，您可以为每个按钮状态指定一个不同的外观。</p><a id="more"></a><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">NS_CLASS_AVAILABLE_IOS</span>(<span class="number">2</span>_0) <span class="class"><span class="keyword">@interface</span> <span class="title">UIButton</span> : <span class="title">UIControl</span> &lt;<span class="title">NSCoding</span>&gt;</span></div><div class="line"></div><div class="line"><span class="comment">// 设置按钮类型</span></div><div class="line">+ (<span class="keyword">instancetype</span>)buttonWithType:(<span class="built_in">UIButtonType</span>)buttonType;</div><div class="line"><span class="comment">// 按钮内容与边缘的距离</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>)          <span class="built_in">UIEdgeInsets</span> contentEdgeInsets <span class="built_in">UI_APPEARANCE_SELECTOR</span>;</div><div class="line"><span class="comment">// 设置标题与边缘或插图的距离</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>)          <span class="built_in">UIEdgeInsets</span> titleEdgeInsets;</div><div class="line"><span class="comment">// 当按钮Highlighted状态时是否标题阴影更加突出</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>)          <span class="built_in">BOOL</span>         reversesTitleShadowWhenHighlighted;</div><div class="line"><span class="comment">// 图片与边缘的距离</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>)          <span class="built_in">UIEdgeInsets</span> imageEdgeInsets;</div><div class="line"><span class="comment">// 当按钮Highlighted状态时是否图片突出 默认值YES</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>)          <span class="built_in">BOOL</span>         adjustsImageWhenHighlighted;</div><div class="line"><span class="comment">// 当按钮Disabled状态时是否改变图片</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>)          <span class="built_in">BOOL</span>         adjustsImageWhenDisabled;</div><div class="line"><span class="comment">// 点击按钮是否有高亮效果 默认值NO</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>)          <span class="built_in">BOOL</span>         showsTouchWhenHighlighted __TVOS_PROHIBITED;</div><div class="line"><span class="comment">// 要应用到的按钮标题和图像的色调颜色</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">null_resettable</span>, <span class="keyword">nonatomic</span>,<span class="keyword">strong</span>)   <span class="built_in">UIColor</span>     *tintColor <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">5</span>_0);</div><div class="line"><span class="comment">// 按钮类型</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>,<span class="keyword">readonly</span>) <span class="built_in">UIButtonType</span> buttonType;</div><div class="line"><span class="comment">// 设置指定状态下的按钮标题</span></div><div class="line">- (<span class="keyword">void</span>)setTitle:(<span class="keyword">nullable</span> <span class="built_in">NSString</span> *)title forState:(<span class="built_in">UIControlState</span>)state;</div><div class="line"><span class="comment">// 设置指定状态下按钮标题的颜色</span></div><div class="line">- (<span class="keyword">void</span>)setTitleColor:(<span class="keyword">nullable</span> <span class="built_in">UIColor</span> *)color forState:(<span class="built_in">UIControlState</span>)state <span class="built_in">UI_APPEARANCE_SELECTOR</span>;</div><div class="line"><span class="comment">// 设置指定状态下按钮阴影的颜色</span></div><div class="line">- (<span class="keyword">void</span>)setTitleShadowColor:(<span class="keyword">nullable</span> <span class="built_in">UIColor</span> *)color forState:(<span class="built_in">UIControlState</span>)state <span class="built_in">UI_APPEARANCE_SELECTOR</span>;</div><div class="line"><span class="comment">// 设置指定状态下按钮的图片</span></div><div class="line">- (<span class="keyword">void</span>)setImage:(<span class="keyword">nullable</span> <span class="built_in">UIImage</span> *)image forState:(<span class="built_in">UIControlState</span>)state;</div><div class="line"><span class="comment">// 设置指定状态下按钮的背景图片</span></div><div class="line">- (<span class="keyword">void</span>)setBackgroundImage:(<span class="keyword">nullable</span> <span class="built_in">UIImage</span> *)image forState:(<span class="built_in">UIControlState</span>)state <span class="built_in">UI_APPEARANCE_SELECTOR</span>;</div><div class="line"><span class="comment">// 设置指定状态下按钮的属性标题</span></div><div class="line">- (<span class="keyword">void</span>)setAttributedTitle:(<span class="keyword">nullable</span> <span class="built_in">NSAttributedString</span> *)title forState:(<span class="built_in">UIControlState</span>)state <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">6</span>_0);</div><div class="line"><span class="comment">// 获取指定状态下按钮标题</span></div><div class="line">- (<span class="keyword">nullable</span> <span class="built_in">NSString</span> *)titleForState:(<span class="built_in">UIControlState</span>)state;</div><div class="line"><span class="comment">// 获取指定状态下按钮标题颜色</span></div><div class="line">- (<span class="keyword">nullable</span> <span class="built_in">UIColor</span> *)titleColorForState:(<span class="built_in">UIControlState</span>)state;</div><div class="line"><span class="comment">// 获取指定状态下按钮阴影颜色</span></div><div class="line">- (<span class="keyword">nullable</span> <span class="built_in">UIColor</span> *)titleShadowColorForState:(<span class="built_in">UIControlState</span>)state;</div><div class="line"><span class="comment">// 获取指定状态下按钮图片</span></div><div class="line">- (<span class="keyword">nullable</span> <span class="built_in">UIImage</span> *)imageForState:(<span class="built_in">UIControlState</span>)state;</div><div class="line"><span class="comment">// 获取指定状态下按钮背景图片</span></div><div class="line">- (<span class="keyword">nullable</span> <span class="built_in">UIImage</span> *)backgroundImageForState:(<span class="built_in">UIControlState</span>)state;</div><div class="line"><span class="comment">// 获取指定状态下按钮标题属性</span></div><div class="line">- (<span class="keyword">nullable</span> <span class="built_in">NSAttributedString</span> *)attributedTitleForState:(<span class="built_in">UIControlState</span>)state <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">6</span>_0);</div><div class="line"><span class="comment">// 获取当前按钮的标题</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nullable</span>, <span class="keyword">nonatomic</span>,<span class="keyword">readonly</span>,<span class="keyword">strong</span>) <span class="built_in">NSString</span> *currentTitle;</div><div class="line"><span class="comment">// 获取当前按钮标题颜色</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>,<span class="keyword">readonly</span>,<span class="keyword">strong</span>) <span class="built_in">UIColor</span>  *currentTitleColor;</div><div class="line"><span class="comment">// 获取当前按钮阴影边框的颜色</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nullable</span>, <span class="keyword">nonatomic</span>,<span class="keyword">readonly</span>,<span class="keyword">strong</span>) <span class="built_in">UIColor</span>  *currentTitleShadowColor;</div><div class="line"><span class="comment">// 获取当前按钮的图片</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nullable</span>, <span class="keyword">nonatomic</span>,<span class="keyword">readonly</span>,<span class="keyword">strong</span>) <span class="built_in">UIImage</span>  *currentImage;</div><div class="line"><span class="comment">// 获取当前按钮背景图片</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nullable</span>, <span class="keyword">nonatomic</span>,<span class="keyword">readonly</span>,<span class="keyword">strong</span>) <span class="built_in">UIImage</span>  *currentBackgroundImage;</div><div class="line"><span class="comment">// 获取当前按钮标题属性</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nullable</span>, <span class="keyword">nonatomic</span>,<span class="keyword">readonly</span>,<span class="keyword">strong</span>) <span class="built_in">NSAttributedString</span> *currentAttributedTitle <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">6</span>_0);</div><div class="line"></div><div class="line"><span class="comment">// 获取当前按钮标题Label</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nullable</span>, <span class="keyword">nonatomic</span>,<span class="keyword">readonly</span>,<span class="keyword">strong</span>) <span class="built_in">UILabel</span>     *titleLabel <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">3</span>_0);</div><div class="line"><span class="comment">// 获取当前按钮的imageView</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nullable</span>, <span class="keyword">nonatomic</span>,<span class="keyword">readonly</span>,<span class="keyword">strong</span>) <span class="built_in">UIImageView</span> *imageView  <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">3</span>_0);</div><div class="line"><span class="comment">// 返回按钮的背景的CGRect</span></div><div class="line">- (<span class="built_in">CGRect</span>)backgroundRectForBounds:(<span class="built_in">CGRect</span>)bounds;</div><div class="line"><span class="comment">// 返回按钮内容的CGRect</span></div><div class="line">- (<span class="built_in">CGRect</span>)contentRectForBounds:(<span class="built_in">CGRect</span>)bounds;</div><div class="line"><span class="comment">// 返回按钮标题内容的CGRect</span></div><div class="line">- (<span class="built_in">CGRect</span>)titleRectForContentRect:(<span class="built_in">CGRect</span>)contentRect;</div><div class="line"><span class="comment">// 返回按钮image的CGRect</span></div><div class="line">- (<span class="built_in">CGRect</span>)imageRectForContentRect:(<span class="built_in">CGRect</span>)contentRect;</div><div class="line"><span class="keyword">@end</span></div></pre></td></tr></table></figure><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 按钮风格类型</span></div><div class="line"><span class="keyword">typedef</span> <span class="built_in">NS_ENUM</span>(<span class="built_in">NSInteger</span>, <span class="built_in">UIButtonType</span>) &#123;</div><div class="line">    <span class="built_in">UIButtonTypeCustom</span> = <span class="number">0</span>,                         <span class="comment">// 自定义类型无样式</span></div><div class="line">    <span class="built_in">UIButtonTypeSystem</span> <span class="built_in">NS_ENUM_AVAILABLE_IOS</span>(<span class="number">7</span>_0),  <span class="comment">// 系统类型</span></div><div class="line">    <span class="built_in">UIButtonTypeDetailDisclosure</span>, <span class="comment">// 蓝色小箭头按钮，主要做详细说明用</span></div><div class="line">    <span class="built_in">UIButtonTypeInfoLight</span>,  <span class="comment">// 亮色感叹号</span></div><div class="line">    <span class="built_in">UIButtonTypeInfoDark</span>,   <span class="comment">// 暗色感叹号</span></div><div class="line">    <span class="built_in">UIButtonTypeContactAdd</span>, <span class="comment">//  十字加号按钮</span></div><div class="line">    <span class="built_in">UIButtonTypeRoundedRect</span> = <span class="built_in">UIButtonTypeSystem</span>,   <span class="comment">// 圆角矩形</span></div><div class="line">&#125;;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;UIButton的类的一个实例，实现了在触摸屏上的按钮。触摸一个按钮拦截事件和动作消息发送到目标对象时。设定的目&lt;br&gt;和行动方法都继承自UIControl。这个类提供了方法来设置标题，图像，按钮等外观属性。通过这些访问，您可以为每个按钮状态指定一个不同的外观。&lt;/p&gt;
    
    </summary>
    
      <category term="iOS" scheme="https://wynter.wang/categories/iOS/"/>
    
    
      <category term="API" scheme="https://wynter.wang/tags/API/"/>
    
      <category term="iOS" scheme="https://wynter.wang/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>iOS-UIKit框架学习—UIControl</title>
    <link href="https://wynter.wang/2017/03/08/iOS-UIKit%E6%A1%86%E6%9E%B6%E5%AD%A6%E4%B9%A0%E2%80%94UIControl/"/>
    <id>https://wynter.wang/2017/03/08/iOS-UIKit框架学习—UIControl/</id>
    <published>2017-03-08T08:21:13.000Z</published>
    <updated>2017-03-08T08:38:58.000Z</updated>
    
    <content type="html"><![CDATA[<p>UIControl是为控制对象，如用户的意图传达到应用程序的按钮和滑块的基类。你不能直接使用UIControl类实例化控制。相反，它定义了共同的界面和它的所有子类的行为结构。<br><a id="more"></a></p><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">NS_CLASS_AVAILABLE_IOS</span>(<span class="number">2</span>_0) <span class="class"><span class="keyword">@interface</span> <span class="title">UIControl</span> : <span class="title">UIView</span></span></div><div class="line"></div><div class="line"><span class="comment">// 触摸事件是否可用 默认值YES</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>,<span class="keyword">getter</span>=isEnabled) <span class="built_in">BOOL</span> enabled;</div><div class="line"><span class="comment">// 是否选中 默认值NO</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>,<span class="keyword">getter</span>=isSelected) <span class="built_in">BOOL</span> selected;</div><div class="line"><span class="comment">// 是否高亮 默认值NO</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>,<span class="keyword">getter</span>=isHighlighted) <span class="built_in">BOOL</span> highlighted;</div><div class="line"><span class="comment">// 内容垂直对齐方式 默认值中心对齐</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>) <span class="built_in">UIControlContentVerticalAlignment</span> contentVerticalAlignment;</div><div class="line"><span class="comment">// 内容水平对齐方式 默认值中心对齐</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>) <span class="built_in">UIControlContentHorizontalAlignment</span> contentHorizontalAlignment;</div><div class="line"><span class="comment">// 状态</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>,<span class="keyword">readonly</span>) <span class="built_in">UIControlState</span> state;</div><div class="line"><span class="comment">// 是否跟踪当前触摸事件</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>,<span class="keyword">readonly</span>,<span class="keyword">getter</span>=isTracking) <span class="built_in">BOOL</span> tracking;</div><div class="line"><span class="comment">// 跟踪是否在当前触摸范围内</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>,<span class="keyword">readonly</span>,<span class="keyword">getter</span>=isTouchInside) <span class="built_in">BOOL</span> touchInside;</div><div class="line"><span class="comment">// 开始跟踪触摸事件</span></div><div class="line">- (<span class="built_in">BOOL</span>)beginTrackingWithTouch:(<span class="built_in">UITouch</span> *)touch withEvent:(<span class="keyword">nullable</span> <span class="built_in">UIEvent</span> *)event;</div><div class="line"><span class="comment">// 当触摸事件关联控件时调用更新</span></div><div class="line">- (<span class="built_in">BOOL</span>)continueTrackingWithTouch:(<span class="built_in">UITouch</span> *)touch withEvent:(<span class="keyword">nullable</span> <span class="built_in">UIEvent</span> *)event;</div><div class="line"><span class="comment">// 结束跟踪触摸事件</span></div><div class="line">- (<span class="keyword">void</span>)endTrackingWithTouch:(<span class="keyword">nullable</span> <span class="built_in">UITouch</span> *)touch withEvent:(<span class="keyword">nullable</span> <span class="built_in">UIEvent</span> *)event;</div><div class="line"><span class="comment">// 取消触摸事件</span></div><div class="line">- (<span class="keyword">void</span>)cancelTrackingWithEvent:(<span class="keyword">nullable</span> <span class="built_in">UIEvent</span> *)event;</div><div class="line"><span class="comment">// 将目标控件和操作方法与该控件相关联</span></div><div class="line">- (<span class="keyword">void</span>)addTarget:(<span class="keyword">nullable</span> <span class="keyword">id</span>)target action:(SEL)action forControlEvents:(<span class="built_in">UIControlEvents</span>)controlEvents;</div><div class="line"><span class="comment">// 移除目标控件和操作方法</span></div><div class="line">- (<span class="keyword">void</span>)removeTarget:(<span class="keyword">nullable</span> <span class="keyword">id</span>)target action:(<span class="keyword">nullable</span> SEL)action forControlEvents:(<span class="built_in">UIControlEvents</span>)controlEvents;</div><div class="line"></div><div class="line"><span class="comment">// 返回全部与该控件相关的对象</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>,<span class="keyword">readonly</span>) <span class="built_in">NSSet</span> *allTargets;</div><div class="line"><span class="comment">// 返回与控件相关的操作事件</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>,<span class="keyword">readonly</span>) <span class="built_in">UIControlEvents</span> allControlEvents;</div><div class="line"></div><div class="line"><span class="comment">// 返回指定对象发生操作时的字符串名称数组</span></div><div class="line">- (<span class="keyword">nullable</span> <span class="built_in">NSArray</span>&lt;<span class="built_in">NSString</span> *&gt; *)actionsForTarget:(<span class="keyword">nullable</span> <span class="keyword">id</span>)target forControlEvent:(<span class="built_in">UIControlEvents</span>)controlEvent;</div><div class="line"><span class="comment">// 调用指定的操作事件</span></div><div class="line">- (<span class="keyword">void</span>)sendAction:(SEL)action to:(<span class="keyword">nullable</span> <span class="keyword">id</span>)target forEvent:(<span class="keyword">nullable</span> <span class="built_in">UIEvent</span> *)event;</div><div class="line"><span class="comment">// 发送与控件相关的全部事件</span></div><div class="line">- (<span class="keyword">void</span>)sendActionsForControlEvents:(<span class="built_in">UIControlEvents</span>)controlEvents;</div><div class="line"></div><div class="line"><span class="keyword">@end</span></div></pre></td></tr></table></figure><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">typedef</span> <span class="built_in">NS_OPTIONS</span>(<span class="built_in">NSUInteger</span>, <span class="built_in">UIControlEvents</span>) &#123;</div><div class="line">    <span class="built_in">UIControlEventTouchDown</span>                                         = <span class="number">1</span> &lt;&lt;  <span class="number">0</span>,      <span class="comment">// 单点触摸按下事件</span></div><div class="line">    <span class="built_in">UIControlEventTouchDownRepeat</span>                                   = <span class="number">1</span> &lt;&lt;  <span class="number">1</span>,      <span class="comment">// 多点触摸按下事件 (触摸数 &gt; 1)</span></div><div class="line">    <span class="built_in">UIControlEventTouchDragInside</span>                                   = <span class="number">1</span> &lt;&lt;  <span class="number">2</span>, <span class="comment">// 触摸在控件窗口内拖动</span></div><div class="line">    <span class="built_in">UIControlEventTouchDragOutside</span>                                  = <span class="number">1</span> &lt;&lt;  <span class="number">3</span>, <span class="comment">// 触摸在控件窗口之外拖动</span></div><div class="line">    <span class="built_in">UIControlEventTouchDragEnter</span>                                    = <span class="number">1</span> &lt;&lt;  <span class="number">4</span>, <span class="comment">// 触摸从控件窗口之外拖动到内部</span></div><div class="line">    <span class="built_in">UIControlEventTouchDragExit</span>                                     = <span class="number">1</span> &lt;&lt;  <span class="number">5</span>, <span class="comment">// 触摸从控件窗口内部拖动到外部</span></div><div class="line">    <span class="built_in">UIControlEventTouchUpInside</span>                                     = <span class="number">1</span> &lt;&lt;  <span class="number">6</span>, <span class="comment">// 所有在控件之内触摸抬起事件</span></div><div class="line">    <span class="built_in">UIControlEventTouchUpOutside</span>                                    = <span class="number">1</span> &lt;&lt;  <span class="number">7</span>, <span class="comment">// 所有在控件之外触摸抬起事件</span></div><div class="line">    <span class="built_in">UIControlEventTouchCancel</span>                                       = <span class="number">1</span> &lt;&lt;  <span class="number">8</span>, <span class="comment">// 所有触摸取消事件</span></div><div class="line">    <span class="built_in">UIControlEventValueChanged</span>                                      = <span class="number">1</span> &lt;&lt; <span class="number">12</span>,     <span class="comment">// 当控件的值发生改变时，发送通知</span></div><div class="line">    <span class="built_in">UIControlEventPrimaryActionTriggered</span> <span class="built_in">NS_ENUM_AVAILABLE_IOS</span>(<span class="number">9</span>_0) = <span class="number">1</span> &lt;&lt; <span class="number">13</span>,     <span class="comment">// semantic action: for buttons, etc.</span></div><div class="line">    </div><div class="line">    <span class="built_in">UIControlEventEditingDidBegin</span>                                   = <span class="number">1</span> &lt;&lt; <span class="number">16</span>,     <span class="comment">// 当文本控件中开始编辑时发送通知</span></div><div class="line">    <span class="built_in">UIControlEventEditingChanged</span>                                    = <span class="number">1</span> &lt;&lt; <span class="number">17</span>, <span class="comment">// 当文本控件中的文本被改变时发送通知</span></div><div class="line">    <span class="built_in">UIControlEventEditingDidEnd</span>                                     = <span class="number">1</span> &lt;&lt; <span class="number">18</span>, <span class="comment">// 当文本控件中编辑结束时发送通知</span></div><div class="line">    <span class="built_in">UIControlEventEditingDidEndOnExit</span>                               = <span class="number">1</span> &lt;&lt; <span class="number">19</span>,     <span class="comment">// 当文本控件内通过按下回车键（或等价行为）结束编辑时，发送通知</span></div><div class="line">    </div><div class="line">    <span class="built_in">UIControlEventAllTouchEvents</span>                                    = <span class="number">0x00000FFF</span>,  <span class="comment">// 通知所有触摸事件</span></div><div class="line">    <span class="built_in">UIControlEventAllEditingEvents</span>                                  = <span class="number">0x000F0000</span>,  <span class="comment">// 通知所有关于文本编辑的事件</span></div><div class="line">    <span class="built_in">UIControlEventApplicationReserved</span>                               = <span class="number">0x0F000000</span>,  <span class="comment">// 通知应用内所有可用的事件</span></div><div class="line">    <span class="built_in">UIControlEventSystemReserved</span>                                    = <span class="number">0xF0000000</span>,  <span class="comment">// 通知系统内可用的事件</span></div><div class="line">    <span class="built_in">UIControlEventAllEvents</span>                                         = <span class="number">0xFFFFFFFF</span> <span class="comment">// 通知所有事件</span></div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="comment">// 内容垂直对齐方式</span></div><div class="line"><span class="keyword">typedef</span> <span class="built_in">NS_ENUM</span>(<span class="built_in">NSInteger</span>, <span class="built_in">UIControlContentVerticalAlignment</span>) &#123;</div><div class="line">    <span class="built_in">UIControlContentVerticalAlignmentCenter</span>  = <span class="number">0</span>,</div><div class="line">    <span class="built_in">UIControlContentVerticalAlignmentTop</span>     = <span class="number">1</span>,</div><div class="line">    <span class="built_in">UIControlContentVerticalAlignmentBottom</span>  = <span class="number">2</span>,</div><div class="line">    <span class="built_in">UIControlContentVerticalAlignmentFill</span>    = <span class="number">3</span>,</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="comment">// 内容水平对齐方式</span></div><div class="line"><span class="keyword">typedef</span> <span class="built_in">NS_ENUM</span>(<span class="built_in">NSInteger</span>, <span class="built_in">UIControlContentHorizontalAlignment</span>) &#123;</div><div class="line">    <span class="built_in">UIControlContentHorizontalAlignmentCenter</span> = <span class="number">0</span>,</div><div class="line">    <span class="built_in">UIControlContentHorizontalAlignmentLeft</span>   = <span class="number">1</span>,</div><div class="line">    <span class="built_in">UIControlContentHorizontalAlignmentRight</span>  = <span class="number">2</span>,</div><div class="line">    <span class="built_in">UIControlContentHorizontalAlignmentFill</span>   = <span class="number">3</span>,</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="comment">// UIControl状态</span></div><div class="line"><span class="keyword">typedef</span> <span class="built_in">NS_OPTIONS</span>(<span class="built_in">NSUInteger</span>, <span class="built_in">UIControlState</span>) &#123;</div><div class="line">    <span class="built_in">UIControlStateNormal</span>       = <span class="number">0</span>,</div><div class="line">    <span class="built_in">UIControlStateHighlighted</span>  = <span class="number">1</span> &lt;&lt; <span class="number">0</span>,                  <span class="comment">// 高亮状态</span></div><div class="line">    <span class="built_in">UIControlStateDisabled</span>     = <span class="number">1</span> &lt;&lt; <span class="number">1</span>,                  <span class="comment">// 禁用</span></div><div class="line">    <span class="built_in">UIControlStateSelected</span>     = <span class="number">1</span> &lt;&lt; <span class="number">2</span>,                  <span class="comment">// 选中</span></div><div class="line">    <span class="built_in">UIControlStateFocused</span> <span class="built_in">NS_ENUM_AVAILABLE_IOS</span>(<span class="number">9</span>_0) = <span class="number">1</span> &lt;&lt; <span class="number">3</span>, <span class="comment">// 长按聚焦</span></div><div class="line">    <span class="built_in">UIControlStateApplication</span>  = <span class="number">0x00FF0000</span>,              <span class="comment">// 应用状态可用</span></div><div class="line">    <span class="built_in">UIControlStateReserved</span>     = <span class="number">0xFF000000</span>               <span class="comment">// 保留</span></div><div class="line">&#125;;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;UIControl是为控制对象，如用户的意图传达到应用程序的按钮和滑块的基类。你不能直接使用UIControl类实例化控制。相反，它定义了共同的界面和它的所有子类的行为结构。&lt;br&gt;
    
    </summary>
    
      <category term="iOS" scheme="https://wynter.wang/categories/iOS/"/>
    
    
      <category term="API" scheme="https://wynter.wang/tags/API/"/>
    
      <category term="iOS" scheme="https://wynter.wang/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>iOS-UIKit框架学习—UIWebView</title>
    <link href="https://wynter.wang/2017/02/28/iOS-UIKit%E6%A1%86%E6%9E%B6%E5%AD%A6%E4%B9%A0%E2%80%94UIWebView/"/>
    <id>https://wynter.wang/2017/02/28/iOS-UIKit框架学习—UIWebView/</id>
    <published>2017-02-28T06:44:03.000Z</published>
    <updated>2017-03-08T08:39:02.000Z</updated>
    
    <content type="html"><![CDATA[<p>您使用了UIWebView类，在您的应用程序中嵌入网页内容。要做到这一点，你只需创建一个UIWebView对象，将它附加到一个窗口，它发送一个请求加载网页内容。您也可以使用这个类在网页的历史向前和向后移动，你甚至可以设置一些网页内容属性的编程。<br><a id="more"></a></p><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">@class</span> <span class="title">UIWebViewInternal</span>;</span></div><div class="line"><span class="class"><span class="keyword">@protocol</span> <span class="title">UIWebViewDelegate</span>;</span></div><div class="line"></div><div class="line"><span class="built_in">NS_CLASS_AVAILABLE_IOS</span>(<span class="number">2</span>_0) __TVOS_PROHIBITED <span class="class"><span class="keyword">@interface</span> <span class="title">UIWebView</span> : <span class="title">UIView</span> &lt;<span class="title">NSCoding</span>, <span class="title">UIScrollViewDelegate</span>&gt;</span></div><div class="line"><span class="comment">// 代理</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nullable</span>, <span class="keyword">nonatomic</span>, <span class="keyword">assign</span>) <span class="keyword">id</span> &lt;<span class="built_in">UIWebViewDelegate</span>&gt; delegate;</div><div class="line"><span class="comment">// scrollView属性</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">readonly</span>, <span class="keyword">strong</span>) <span class="built_in">UIScrollView</span> *scrollView <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">5</span>_0);</div><div class="line"><span class="comment">// 加载URL请求链接</span></div><div class="line">- (<span class="keyword">void</span>)loadRequest:(<span class="built_in">NSURLRequest</span> *)request;</div><div class="line"><span class="comment">// 加载本地html字符串网页</span></div><div class="line">- (<span class="keyword">void</span>)loadHTMLString:(<span class="built_in">NSString</span> *)string baseURL:(<span class="keyword">nullable</span> <span class="built_in">NSURL</span> *)baseURL;</div><div class="line"><span class="comment">// 加载本地NSData数据网页</span></div><div class="line">- (<span class="keyword">void</span>)loadData:(<span class="built_in">NSData</span> *)data MIMEType:(<span class="built_in">NSString</span> *)MIMEType textEncodingName:(<span class="built_in">NSString</span> *)textEncodingName baseURL:(<span class="built_in">NSURL</span> *)baseURL;</div><div class="line"><span class="comment">// URL请求</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nullable</span>, <span class="keyword">nonatomic</span>, <span class="keyword">readonly</span>, <span class="keyword">strong</span>) <span class="built_in">NSURLRequest</span> *request;</div><div class="line"><span class="comment">// 重载</span></div><div class="line">- (<span class="keyword">void</span>)reload;</div><div class="line"><span class="comment">// 停止加载</span></div><div class="line">- (<span class="keyword">void</span>)stopLoading;</div><div class="line"><span class="comment">// 后退到上一个界面</span></div><div class="line">- (<span class="keyword">void</span>)goBack;</div><div class="line"><span class="comment">// 前进到一个之前到过页面</span></div><div class="line">- (<span class="keyword">void</span>)goForward;</div><div class="line"><span class="comment">// 是否可以后退</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">readonly</span>, <span class="keyword">getter</span>=canGoBack) <span class="built_in">BOOL</span> canGoBack;</div><div class="line"><span class="comment">// 是否可以前进</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">readonly</span>, <span class="keyword">getter</span>=canGoForward) <span class="built_in">BOOL</span> canGoForward;</div><div class="line"><span class="comment">// 是否正在加载</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">readonly</span>, <span class="keyword">getter</span>=isLoading) <span class="built_in">BOOL</span> loading;</div><div class="line"><span class="comment">// 加载完成后调动，通过它可以很方便的操作UIWebView中的页面元素。参数script用来传进当前页面文件元素字符串，对传进来的字符串进行相应的操作</span></div><div class="line">- (<span class="keyword">nullable</span> <span class="built_in">NSString</span> *)stringByEvaluatingJavaScriptFromString:(<span class="built_in">NSString</span> *)script;</div><div class="line"><span class="comment">// 是否将页面内容缩放到当前屏幕适合的尺寸</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>) <span class="built_in">BOOL</span> scalesPageToFit;</div><div class="line"><span class="comment">// 网页内容可识别类型，如邮箱、电话、网址</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>) <span class="built_in">UIDataDetectorTypes</span> dataDetectorTypes <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">3</span>_0);</div><div class="line"><span class="comment">// 是否使用网页内嵌的视频播放。为了内嵌视频播放，不仅仅需要在这个页面上设置这个属性，还需要在HTML的viedeo元素必须包含webkit-playsinline属性 iPhone默认值NO，iPad默认值是YES</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>) <span class="built_in">BOOL</span> allowsInlineMediaPlayback <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">4</span>_0);</div><div class="line"><span class="comment">// 是否自动播放视频还是用户手动播放视频 默认值是YES</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>) <span class="built_in">BOOL</span> mediaPlaybackRequiresUserAction <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">4</span>_0);</div><div class="line"><span class="comment">// 是否支持Air Play播放 默认值是YES</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>) <span class="built_in">BOOL</span> mediaPlaybackAllowsAirPlay <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">5</span>_0);</div><div class="line"><span class="comment">// 是否把网页渲染全部加载到内存中去处理 默认值是NO</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>) <span class="built_in">BOOL</span> suppressesIncrementalRendering <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">6</span>_0);</div><div class="line"><span class="comment">// 是否必须用户操作输入控件才会显示键盘 默认值是YES</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>) <span class="built_in">BOOL</span> keyboardDisplayRequiresUserAction <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">6</span>_0);</div><div class="line"><span class="comment">// 设置页面分页模型</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>) <span class="built_in">UIWebPaginationMode</span> paginationMode <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">7</span>_0);</div><div class="line"><span class="comment">// CSS采用的页面模式</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>) <span class="built_in">UIWebPaginationBreakingMode</span> paginationBreakingMode <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">7</span>_0);</div><div class="line"><span class="comment">// 页面的长度</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>) <span class="built_in">CGFloat</span> pageLength <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">7</span>_0);</div><div class="line"><span class="comment">// 分页之间的差距</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>) <span class="built_in">CGFloat</span> gapBetweenPages <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">7</span>_0);</div><div class="line"><span class="comment">// 页面个数</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">readonly</span>) <span class="built_in">NSUInteger</span> pageCount <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">7</span>_0);</div><div class="line"><span class="comment">// 是否网页自带的照片浏览器</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>) <span class="built_in">BOOL</span> allowsPictureInPictureMediaPlayback <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">9</span>_0);</div><div class="line"><span class="comment">// 按下连接是否显示连接的预览 默认值为NO</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>) <span class="built_in">BOOL</span> allowsLinkPreview <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">9</span>_0);</div><div class="line"><span class="keyword">@end</span></div><div class="line"></div><div class="line">__TVOS_PROHIBITED <span class="class"><span class="keyword">@protocol</span> <span class="title">UIWebViewDelegate</span> &lt;<span class="title">NSObject</span>&gt;</span></div><div class="line"></div><div class="line"><span class="keyword">@optional</span></div><div class="line"><span class="comment">// 当开始加载网页的时候调用，可以拦截一些用户操作行为，返回YES代表允许加载，否则反之</span></div><div class="line">- (<span class="built_in">BOOL</span>)webView:(<span class="built_in">UIWebView</span> *)webView shouldStartLoadWithRequest:(<span class="built_in">NSURLRequest</span> *)request navigationType:(<span class="built_in">UIWebViewNavigationType</span>)navigationType;</div><div class="line"><span class="comment">// 开始加载网页时调用</span></div><div class="line">- (<span class="keyword">void</span>)webViewDidStartLoad:(<span class="built_in">UIWebView</span> *)webView;</div><div class="line"><span class="comment">// 加载完成时调用</span></div><div class="line">- (<span class="keyword">void</span>)webViewDidFinishLoad:(<span class="built_in">UIWebView</span> *)webView;</div><div class="line"><span class="comment">// 加载出错时调用</span></div><div class="line">- (<span class="keyword">void</span>)webView:(<span class="built_in">UIWebView</span> *)webView didFailLoadWithError:(<span class="built_in">NSError</span> *)error;</div><div class="line"></div><div class="line"><span class="keyword">@end</span></div></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">// 导航行为类型</div><div class="line">typedef NS_ENUM(NSInteger, UIWebViewNavigationType) &#123;</div><div class="line">    UIWebViewNavigationTypeLinkClicked, // 点击了链接</div><div class="line">    UIWebViewNavigationTypeFormSubmitted, // 提交表单</div><div class="line">    UIWebViewNavigationTypeBackForward, // 前进或返回</div><div class="line">    UIWebViewNavigationTypeReload, // 重载</div><div class="line">    UIWebViewNavigationTypeFormResubmitted, // 再次提交</div><div class="line">    UIWebViewNavigationTypeOther</div><div class="line">&#125; __TVOS_PROHIBITED;</div><div class="line"></div><div class="line">// 翻页效果</div><div class="line">typedef NS_ENUM(NSInteger, UIWebPaginationMode) &#123;</div><div class="line">    UIWebPaginationModeUnpaginated, // 无</div><div class="line">    UIWebPaginationModeLeftToRight, // 当内容超出View时，从左到右</div><div class="line">    UIWebPaginationModeTopToBottom, // 当内容超出View时，从顶部到底部</div><div class="line">    UIWebPaginationModeBottomToTop, // 当内容超出View时，从底部到顶部</div><div class="line">    UIWebPaginationModeRightToLeft  // 当内容超出View时，从右到左</div><div class="line">&#125; __TVOS_PROHIBITED;</div><div class="line"></div><div class="line">// 有css时页面样式类型</div><div class="line">typedef NS_ENUM(NSInteger, UIWebPaginationBreakingMode) &#123;</div><div class="line">    UIWebPaginationBreakingModePage, // 页面样式</div><div class="line">    UIWebPaginationBreakingModeColumn // 圆柱样式</div><div class="line">&#125; __TVOS_PROHIBITED;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;您使用了UIWebView类，在您的应用程序中嵌入网页内容。要做到这一点，你只需创建一个UIWebView对象，将它附加到一个窗口，它发送一个请求加载网页内容。您也可以使用这个类在网页的历史向前和向后移动，你甚至可以设置一些网页内容属性的编程。&lt;br&gt;
    
    </summary>
    
      <category term="iOS" scheme="https://wynter.wang/categories/iOS/"/>
    
    
      <category term="API" scheme="https://wynter.wang/tags/API/"/>
    
      <category term="iOS" scheme="https://wynter.wang/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>iOS-UIKit框架学习—UISearchBar</title>
    <link href="https://wynter.wang/2017/02/28/iOS-UIKit%E6%A1%86%E6%9E%B6%E5%AD%A6%E4%B9%A0%E2%80%94UISearchBar/"/>
    <id>https://wynter.wang/2017/02/28/iOS-UIKit框架学习—UISearchBar/</id>
    <published>2017-02-28T06:42:59.000Z</published>
    <updated>2017-03-08T08:39:03.000Z</updated>
    
    <content type="html"><![CDATA[<p>UISearchBar类实现一个基于文本的搜索的文本字段控制。该控件提供了一个搜索按钮，输入文字的文本字段书签“按钮，一个取消按钮。UISearchBar对象实际上并不执行任何搜索。您可以使用委托，符合UISearchBarDelegate协议的对象，实施行动时，输入文本和按钮被点击</p><a id="more"></a><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">@protocol</span> <span class="title">UISearchBarDelegate</span>;</span></div><div class="line"><span class="built_in">NS_CLASS_AVAILABLE_IOS</span>(<span class="number">2</span>_0) <span class="class"><span class="keyword">@interface</span> <span class="title">UISearchBar</span> : <span class="title">UIView</span> &lt;<span class="title">UIBarPositioning</span>, <span class="title">UITextInputTraits</span>&gt;</span></div><div class="line"><span class="comment">// 初始化</span></div><div class="line">- (<span class="keyword">instancetype</span>)init __TVOS_PROHIBITED;</div><div class="line">- (<span class="keyword">instancetype</span>)initWithFrame:(<span class="built_in">CGRect</span>)frame <span class="built_in">NS_DESIGNATED_INITIALIZER</span> __TVOS_PROHIBITED;</div><div class="line">- (<span class="keyword">nullable</span> <span class="keyword">instancetype</span>)initWithCoder:(<span class="built_in">NSCoder</span> *)aDecoder <span class="built_in">NS_DESIGNATED_INITIALIZER</span> __TVOS_PROHIBITED;</div><div class="line"></div><div class="line"><span class="comment">// 搜索框的风格 默认蓝色</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>)        <span class="built_in">UIBarStyle</span>              barStyle __TVOS_PROHIBITED;</div><div class="line"><span class="comment">// 代理</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nullable</span>,<span class="keyword">nonatomic</span>,<span class="keyword">weak</span>) <span class="keyword">id</span>&lt;<span class="built_in">UISearchBarDelegate</span>&gt; delegate;</div><div class="line"><span class="comment">// 当前搜索的文本</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nullable</span>,<span class="keyword">nonatomic</span>,<span class="keyword">copy</span>)   <span class="built_in">NSString</span>               *text;</div><div class="line"><span class="comment">// 搜索栏顶部显示的单行文本</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nullable</span>,<span class="keyword">nonatomic</span>,<span class="keyword">copy</span>)   <span class="built_in">NSString</span>               *prompt;</div><div class="line"><span class="comment">// 占位符文本</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nullable</span>,<span class="keyword">nonatomic</span>,<span class="keyword">copy</span>)   <span class="built_in">NSString</span>               *placeholder;</div><div class="line"><span class="comment">// 是否展示标签按钮 默认为NO</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>)        <span class="built_in">BOOL</span>                    showsBookmarkButton __TVOS_PROHIBITED;</div><div class="line"><span class="comment">// 是否显示取消按钮 默认为NO</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>)        <span class="built_in">BOOL</span>                    showsCancelButton __TVOS_PROHIBITED;</div><div class="line"><span class="comment">// 是否显示搜索结果的按钮 默认为NO</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>)        <span class="built_in">BOOL</span>                    showsSearchResultsButton <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">3</span>_2) __TVOS_PROHIBITED;</div><div class="line"><span class="comment">// 是否选择搜索结果按钮</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>, <span class="keyword">getter</span>=isSearchResultsButtonSelected) <span class="built_in">BOOL</span> searchResultsButtonSelected <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">3</span>_2) __TVOS_PROHIBITED;</div><div class="line"><span class="comment">// 用动画设置取消按钮的显示</span></div><div class="line">- (<span class="keyword">void</span>)setShowsCancelButton:(<span class="built_in">BOOL</span>)showsCancelButton animated:(<span class="built_in">BOOL</span>)animated <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">3</span>_0) __TVOS_PROHIBITED;</div><div class="line"><span class="comment">// 用于配置键盘的输入助手</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">readonly</span>, <span class="keyword">strong</span>) <span class="built_in">UITextInputAssistantItem</span> *inputAssistantItem <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">9</span>_0) __TVOS_PROHIBITED __WATCHOS_PROHIBITED;</div><div class="line"><span class="comment">// 搜索栏中关键要素的背景底色</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">null_resettable</span>, <span class="keyword">nonatomic</span>,<span class="keyword">strong</span>) <span class="built_in">UIColor</span> *tintColor;</div><div class="line"><span class="comment">// 搜索栏的背景底色</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nullable</span>, <span class="keyword">nonatomic</span>,<span class="keyword">strong</span>) <span class="built_in">UIColor</span> *barTintColor <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">7</span>_0) <span class="built_in">UI_APPEARANCE_SELECTOR</span>;</div><div class="line"><span class="comment">// 搜索栏的风格</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>) <span class="built_in">UISearchBarStyle</span> searchBarStyle <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">7</span>_0);</div><div class="line"><span class="comment">// 搜索是否半透明</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>,<span class="keyword">assign</span>,<span class="keyword">getter</span>=isTranslucent) <span class="built_in">BOOL</span> translucent <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">3</span>_0);</div><div class="line"><span class="comment">// 一个指示范围按钮标题的字符串的数组</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nullable</span>, <span class="keyword">nonatomic</span>,<span class="keyword">copy</span>) <span class="built_in">NSArray</span>&lt;<span class="built_in">NSString</span> *&gt;   *scopeButtonTitles        <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">3</span>_0);</div><div class="line"><span class="comment">// 选中指示按钮的下标</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>)      <span class="built_in">NSInteger</span>  selectedScopeButtonIndex <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">3</span>_0);</div><div class="line"><span class="comment">// 是否显示范围栏 默认值是NO</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>)      <span class="built_in">BOOL</span>       showsScopeBar            <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">3</span>_0);</div><div class="line"><span class="comment">// 自定义输入框附件视图</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nullable</span>, <span class="keyword">nonatomic</span>, <span class="keyword">readwrite</span>, <span class="keyword">strong</span>) <span class="built_in">UIView</span> *inputAccessoryView;</div><div class="line"><span class="comment">// 设置搜索栏的背景图片</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nullable</span>, <span class="keyword">nonatomic</span>,<span class="keyword">strong</span>) <span class="built_in">UIImage</span> *backgroundImage <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">5</span>_0) <span class="built_in">UI_APPEARANCE_SELECTOR</span>;</div><div class="line"><span class="comment">// 设置范围栏的背景图片</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nullable</span>, <span class="keyword">nonatomic</span>,<span class="keyword">strong</span>) <span class="built_in">UIImage</span> *scopeBarBackgroundImage <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">5</span>_0) <span class="built_in">UI_APPEARANCE_SELECTOR</span>;</div><div class="line"></div><div class="line"><span class="comment">// 设置提示栏背景图片</span></div><div class="line">- (<span class="keyword">void</span>)setBackgroundImage:(<span class="keyword">nullable</span> <span class="built_in">UIImage</span> *)backgroundImage forBarPosition:(<span class="built_in">UIBarPosition</span>)barPosition barMetrics:(<span class="built_in">UIBarMetrics</span>)barMetrics <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">7</span>_0) <span class="built_in">UI_APPEARANCE_SELECTOR</span>;</div><div class="line"><span class="comment">// 返回提示栏的背景图片</span></div><div class="line">- (<span class="keyword">nullable</span> <span class="built_in">UIImage</span> *)backgroundImageForBarPosition:(<span class="built_in">UIBarPosition</span>)barPosition barMetrics:(<span class="built_in">UIBarMetrics</span>)barMetrics <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">7</span>_0) <span class="built_in">UI_APPEARANCE_SELECTOR</span>;</div><div class="line"><span class="comment">// 设置指定搜索文本的图片</span></div><div class="line">- (<span class="keyword">void</span>)setSearchFieldBackgroundImage:(<span class="keyword">nullable</span> <span class="built_in">UIImage</span> *)backgroundImage forState:(<span class="built_in">UIControlState</span>)state <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">5</span>_0) <span class="built_in">UI_APPEARANCE_SELECTOR</span>;</div><div class="line"><span class="comment">// 返回指定搜索文本的图片</span></div><div class="line">- (<span class="keyword">nullable</span> <span class="built_in">UIImage</span> *)searchFieldBackgroundImageForState:(<span class="built_in">UIControlState</span>)state <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">5</span>_0) <span class="built_in">UI_APPEARANCE_SELECTOR</span>;</div><div class="line"><span class="comment">// 设置搜索栏图标类型和控件状态图片</span></div><div class="line">- (<span class="keyword">void</span>)setImage:(<span class="keyword">nullable</span> <span class="built_in">UIImage</span> *)iconImage forSearchBarIcon:(<span class="built_in">UISearchBarIcon</span>)icon state:(<span class="built_in">UIControlState</span>)state <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">5</span>_0) <span class="built_in">UI_APPEARANCE_SELECTOR</span>;</div><div class="line"><span class="comment">// 返回给定搜索栏图标类型和控件状态的图像</span></div><div class="line">- (<span class="keyword">nullable</span> <span class="built_in">UIImage</span> *)imageForSearchBarIcon:(<span class="built_in">UISearchBarIcon</span>)icon state:(<span class="built_in">UIControlState</span>)state <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">5</span>_0) <span class="built_in">UI_APPEARANCE_SELECTOR</span>;</div><div class="line"><span class="comment">// 设置指定范围下按钮的背景图片</span></div><div class="line">- (<span class="keyword">void</span>)setScopeBarButtonBackgroundImage:(<span class="keyword">nullable</span> <span class="built_in">UIImage</span> *)backgroundImage forState:(<span class="built_in">UIControlState</span>)state <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">5</span>_0) <span class="built_in">UI_APPEARANCE_SELECTOR</span>;</div><div class="line"><span class="comment">// 返回指定状态下按钮的背景图片</span></div><div class="line">- (<span class="keyword">nullable</span> <span class="built_in">UIImage</span> *)scopeBarButtonBackgroundImageForState:(<span class="built_in">UIControlState</span>)state <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">5</span>_0) <span class="built_in">UI_APPEARANCE_SELECTOR</span>;</div><div class="line"><span class="comment">// 设置左右分段控制控件的状态及隔离器的图片</span></div><div class="line">- (<span class="keyword">void</span>)setScopeBarButtonDividerImage:(<span class="keyword">nullable</span> <span class="built_in">UIImage</span> *)dividerImage forLeftSegmentState:(<span class="built_in">UIControlState</span>)leftState rightSegmentState:(<span class="built_in">UIControlState</span>)rightState <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">5</span>_0) <span class="built_in">UI_APPEARANCE_SELECTOR</span>;</div><div class="line"><span class="comment">// 返回左右分段控制控件的隔离器的图片</span></div><div class="line">- (<span class="keyword">nullable</span> <span class="built_in">UIImage</span> *)scopeBarButtonDividerImageForLeftSegmentState:(<span class="built_in">UIControlState</span>)leftState rightSegmentState:(<span class="built_in">UIControlState</span>)rightState <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">5</span>_0) <span class="built_in">UI_APPEARANCE_SELECTOR</span>;</div><div class="line"><span class="comment">// 为给定状态的“搜索栏”按钮的标题字符串设置文本属性</span></div><div class="line">- (<span class="keyword">void</span>)setScopeBarButtonTitleTextAttributes:(<span class="keyword">nullable</span> <span class="built_in">NSDictionary</span>&lt;<span class="built_in">NSString</span> *, <span class="keyword">id</span>&gt; *)attributes forState:(<span class="built_in">UIControlState</span>)state <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">5</span>_0) <span class="built_in">UI_APPEARANCE_SELECTOR</span>;</div><div class="line"><span class="comment">// 返回给定状态的“搜索栏”按钮的文本属性</span></div><div class="line">- (<span class="keyword">nullable</span> <span class="built_in">NSDictionary</span>&lt;<span class="built_in">NSString</span> *, <span class="keyword">id</span>&gt; *)scopeBarButtonTitleTextAttributesForState:(<span class="built_in">UIControlState</span>)state <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">5</span>_0) <span class="built_in">UI_APPEARANCE_SELECTOR</span>;</div><div class="line"><span class="comment">// 搜索栏中搜索文本字段背景的偏移量</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>) <span class="built_in">UIOffset</span> searchFieldBackgroundPositionAdjustment <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">5</span>_0) <span class="built_in">UI_APPEARANCE_SELECTOR</span>;</div><div class="line"><span class="comment">// 搜索文本字段背景中文本的偏移量</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>) <span class="built_in">UIOffset</span> searchTextPositionAdjustment <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">5</span>_0) <span class="built_in">UI_APPEARANCE_SELECTOR</span>;</div><div class="line"><span class="comment">// 返回给定图标的位置调整</span></div><div class="line">- (<span class="keyword">void</span>)setPositionAdjustment:(<span class="built_in">UIOffset</span>)adjustment forSearchBarIcon:(<span class="built_in">UISearchBarIcon</span>)icon <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">5</span>_0) <span class="built_in">UI_APPEARANCE_SELECTOR</span>;</div><div class="line">- (<span class="built_in">UIOffset</span>)positionAdjustmentForSearchBarIcon:(<span class="built_in">UISearchBarIcon</span>)icon <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">5</span>_0) <span class="built_in">UI_APPEARANCE_SELECTOR</span>;</div><div class="line"><span class="keyword">@end</span></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">@protocol</span> <span class="title">UISearchBarDelegate</span> &lt;<span class="title">UIBarPositioningDelegate</span>&gt;</span></div><div class="line"></div><div class="line"><span class="keyword">@optional</span></div><div class="line"><span class="comment">// 是否在指定的搜索栏中编辑</span></div><div class="line">- (<span class="built_in">BOOL</span>)searchBarShouldBeginEditing:(<span class="built_in">UISearchBar</span> *)searchBar;</div><div class="line"><span class="comment">// 当用户开始编辑搜索文本时调用</span></div><div class="line">- (<span class="keyword">void</span>)searchBarTextDidBeginEditing:(<span class="built_in">UISearchBar</span> *)searchBar;</div><div class="line"><span class="comment">// 是否搜索文本编辑完成</span></div><div class="line">- (<span class="built_in">BOOL</span>)searchBarShouldEndEditing:(<span class="built_in">UISearchBar</span> *)searchBar;</div><div class="line"><span class="comment">// 当用用户编辑完成时调用</span></div><div class="line">- (<span class="keyword">void</span>)searchBarTextDidEndEditing:(<span class="built_in">UISearchBar</span> *)searchBar;</div><div class="line"><span class="comment">// 当文本发生变化时调用（包括清除）</span></div><div class="line">- (<span class="keyword">void</span>)searchBar:(<span class="built_in">UISearchBar</span> *)searchBar textDidChange:(<span class="built_in">NSString</span> *)searchText;</div><div class="line"><span class="comment">// 文本发生改变前调用</span></div><div class="line">- (<span class="built_in">BOOL</span>)searchBar:(<span class="built_in">UISearchBar</span> *)searchBar shouldChangeTextInRange:(<span class="built_in">NSRange</span>)range replacementText:(<span class="built_in">NSString</span> *)text <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">3</span>_0);</div><div class="line"><span class="comment">// 当按下键盘的搜索按钮时调用</span></div><div class="line">- (<span class="keyword">void</span>)searchBarSearchButtonClicked:(<span class="built_in">UISearchBar</span> *)searchBar;</div><div class="line"><span class="comment">// 当按下书签按钮时调用</span></div><div class="line">- (<span class="keyword">void</span>)searchBarBookmarkButtonClicked:(<span class="built_in">UISearchBar</span> *)searchBar __TVOS_PROHIBITED;</div><div class="line"><span class="comment">// 当按下取消按钮时调用</span></div><div class="line">- (<span class="keyword">void</span>)searchBarCancelButtonClicked:(<span class="built_in">UISearchBar</span> *)searchBar __TVOS_PROHIBITED;</div><div class="line"><span class="comment">// 当按下搜索结果按钮时调用</span></div><div class="line">- (<span class="keyword">void</span>)searchBarResultsListButtonClicked:(<span class="built_in">UISearchBar</span> *)searchBar <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">3</span>_2) __TVOS_PROHIBITED;</div><div class="line"><span class="comment">// 当范围选择按钮改变是调用</span></div><div class="line">- (<span class="keyword">void</span>)searchBar:(<span class="built_in">UISearchBar</span> *)searchBar selectedScopeButtonIndexDidChange:(<span class="built_in">NSInteger</span>)selectedScope <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">3</span>_0);</div><div class="line"></div><div class="line"><span class="keyword">@end</span></div></pre></td></tr></table></figure><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 搜索框后的图标样式</span></div><div class="line"><span class="keyword">typedef</span> <span class="built_in">NS_ENUM</span>(<span class="built_in">NSInteger</span>, <span class="built_in">UISearchBarIcon</span>) &#123;</div><div class="line">    <span class="built_in">UISearchBarIconSearch</span>, <span class="comment">// 放大镜</span></div><div class="line">    <span class="built_in">UISearchBarIconClear</span> __TVOS_PROHIBITED, <span class="comment">// 有一个x的圆</span></div><div class="line">    <span class="built_in">UISearchBarIconBookmark</span> __TVOS_PROHIBITED, <span class="comment">// 打开书的图标</span></div><div class="line">    <span class="built_in">UISearchBarIconResultsList</span> __TVOS_PROHIBITED, <span class="comment">// 菱形图标列表</span></div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="comment">// 搜索框的风格</span></div><div class="line"><span class="keyword">typedef</span> <span class="built_in">NS_ENUM</span>(<span class="built_in">NSUInteger</span>, <span class="built_in">UISearchBarStyle</span>) &#123;</div><div class="line">    <span class="built_in">UISearchBarStyleDefault</span>,    <span class="comment">// currently UISearchBarStyleProminent</span></div><div class="line">    <span class="built_in">UISearchBarStyleProminent</span>,  <span class="comment">// 用于邮件、消息和联系人</span></div><div class="line">    <span class="built_in">UISearchBarStyleMinimal</span>     <span class="comment">// 用于日历、笔记和音乐</span></div><div class="line">&#125; <span class="built_in">NS_ENUM_AVAILABLE_IOS</span>(<span class="number">7</span>_0);</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;UISearchBar类实现一个基于文本的搜索的文本字段控制。该控件提供了一个搜索按钮，输入文字的文本字段书签“按钮，一个取消按钮。UISearchBar对象实际上并不执行任何搜索。您可以使用委托，符合UISearchBarDelegate协议的对象，实施行动时，输入文本和按钮被点击&lt;/p&gt;
    
    </summary>
    
      <category term="iOS" scheme="https://wynter.wang/categories/iOS/"/>
    
    
      <category term="API" scheme="https://wynter.wang/tags/API/"/>
    
      <category term="iOS" scheme="https://wynter.wang/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>iOS-UIKit框架学习—UITableView</title>
    <link href="https://wynter.wang/2017/02/16/iOS-UIKit%E6%A1%86%E6%9E%B6%E5%AD%A6%E4%B9%A0%E2%80%94UITableView/"/>
    <id>https://wynter.wang/2017/02/16/iOS-UIKit框架学习—UITableView/</id>
    <published>2017-02-16T02:48:40.000Z</published>
    <updated>2017-02-28T06:54:32.000Z</updated>
    
    <content type="html"><![CDATA[<p>UITableView在iOS开发中是使用最广泛的一个控件，用于展示单个项目数据的列表，同时也可以进行选择和编辑操作。<br><a id="more"></a></p><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div><div class="line">245</div><div class="line">246</div><div class="line">247</div><div class="line">248</div><div class="line">249</div><div class="line">250</div><div class="line">251</div><div class="line">252</div><div class="line">253</div><div class="line">254</div><div class="line">255</div><div class="line">256</div><div class="line">257</div><div class="line">258</div><div class="line">259</div><div class="line">260</div><div class="line">261</div><div class="line">262</div><div class="line">263</div><div class="line">264</div><div class="line">265</div><div class="line">266</div><div class="line">267</div><div class="line">268</div><div class="line">269</div><div class="line">270</div><div class="line">271</div><div class="line">272</div><div class="line">273</div><div class="line">274</div><div class="line">275</div><div class="line">276</div><div class="line">277</div><div class="line">278</div><div class="line">279</div><div class="line">280</div><div class="line">281</div><div class="line">282</div><div class="line">283</div><div class="line">284</div><div class="line">285</div><div class="line">286</div><div class="line">287</div><div class="line">288</div><div class="line">289</div><div class="line">290</div><div class="line">291</div><div class="line">292</div><div class="line">293</div><div class="line">294</div><div class="line">295</div><div class="line">296</div><div class="line">297</div><div class="line">298</div><div class="line">299</div><div class="line">300</div><div class="line">301</div><div class="line">302</div><div class="line">303</div><div class="line">304</div><div class="line">305</div><div class="line">306</div><div class="line">307</div><div class="line">308</div><div class="line">309</div><div class="line">310</div><div class="line">311</div><div class="line">312</div><div class="line">313</div><div class="line">314</div><div class="line">315</div><div class="line">316</div><div class="line">317</div><div class="line">318</div><div class="line">319</div><div class="line">320</div><div class="line">321</div><div class="line">322</div><div class="line">323</div><div class="line">324</div><div class="line">325</div><div class="line">326</div><div class="line">327</div><div class="line">328</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">@class</span> <span class="title">UITableView</span>;</span></div><div class="line"></div><div class="line"><span class="built_in">NS_CLASS_AVAILABLE_IOS</span>(<span class="number">8</span>_0) __TVOS_PROHIBITED <span class="class"><span class="keyword">@interface</span> <span class="title">UITableViewRowAction</span> : <span class="title">NSObject</span> &lt;<span class="title">NSCopying</span>&gt;</span></div><div class="line"></div><div class="line"><span class="comment">// 创建左划时显示的按钮</span></div><div class="line">+ (<span class="keyword">instancetype</span>)rowActionWithStyle:(<span class="built_in">UITableViewRowActionStyle</span>)style title:(<span class="keyword">nullable</span> <span class="built_in">NSString</span> *)title handler:(<span class="keyword">void</span> (^)(<span class="built_in">UITableViewRowAction</span> *action, <span class="built_in">NSIndexPath</span> *indexPath))handler;</div><div class="line"><span class="comment">// 滑动时cell的风格</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">readonly</span>) <span class="built_in">UITableViewRowActionStyle</span> style;</div><div class="line"><span class="comment">// 标题</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">copy</span>, <span class="keyword">nullable</span>) <span class="built_in">NSString</span> *title;</div><div class="line"><span class="comment">// 背景颜色</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">copy</span>, <span class="keyword">nullable</span>) <span class="built_in">UIColor</span> *backgroundColor;</div><div class="line"><span class="comment">// 毛玻璃效果</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">copy</span>, <span class="keyword">nullable</span>) <span class="built_in">UIVisualEffect</span>* backgroundEffect;</div><div class="line"></div><div class="line"><span class="keyword">@end</span></div><div class="line"></div><div class="line"><span class="comment">// UITableViewFocusUpdateContext ： 焦点更新的上下文</span></div><div class="line"><span class="built_in">NS_CLASS_AVAILABLE_IOS</span>(<span class="number">9</span>_0) <span class="class"><span class="keyword">@interface</span> <span class="title">UITableViewFocusUpdateContext</span> : <span class="title">UIFocusUpdateContext</span></span></div><div class="line"></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>, <span class="keyword">readonly</span>, <span class="keyword">nullable</span>) <span class="built_in">NSIndexPath</span> *previouslyFocusedIndexPath;</div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>, <span class="keyword">readonly</span>, <span class="keyword">nullable</span>) <span class="built_in">NSIndexPath</span> *nextFocusedIndexPath;</div><div class="line"></div><div class="line"><span class="keyword">@end</span></div><div class="line"></div><div class="line"><span class="comment">//_______________________________________________________________________________________________________________</span></div><div class="line"><span class="comment">// this represents the display and behaviour of the cells.</span></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">@protocol</span> <span class="title">UITableViewDelegate</span>&lt;<span class="title">NSObject</span>, <span class="title">UIScrollViewDelegate</span>&gt;</span></div><div class="line"></div><div class="line"><span class="keyword">@optional</span></div><div class="line"></div><div class="line"><span class="comment">// 即将显示tableviewcell时调用</span></div><div class="line">- (<span class="keyword">void</span>)tableView:(<span class="built_in">UITableView</span> *)tableView willDisplayCell:(<span class="built_in">UITableViewCell</span> *)cell forRowAtIndexPath:(<span class="built_in">NSIndexPath</span> *)indexPath;</div><div class="line"><span class="comment">// 即将显示header时调用，在cell之后调用</span></div><div class="line">- (<span class="keyword">void</span>)tableView:(<span class="built_in">UITableView</span> *)tableView willDisplayHeaderView:(<span class="built_in">UIView</span> *)view forSection:(<span class="built_in">NSInteger</span>)section <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">6</span>_0);</div><div class="line"><span class="comment">// 即将显示footer时调用，在header之后调用</span></div><div class="line">- (<span class="keyword">void</span>)tableView:(<span class="built_in">UITableView</span> *)tableView willDisplayFooterView:(<span class="built_in">UIView</span> *)view forSection:(<span class="built_in">NSInteger</span>)section <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">6</span>_0);</div><div class="line"><span class="comment">// 在删除cell之后调用，停止显示cell的时候调用,界面不显示cell时。</span></div><div class="line">- (<span class="keyword">void</span>)tableView:(<span class="built_in">UITableView</span> *)tableView didEndDisplayingCell:(<span class="built_in">UITableViewCell</span> *)cell forRowAtIndexPath:(<span class="built_in">NSIndexPath</span>*)indexPath <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">6</span>_0);</div><div class="line"><span class="comment">// 停止显示header的时候调用</span></div><div class="line">- (<span class="keyword">void</span>)tableView:(<span class="built_in">UITableView</span> *)tableView didEndDisplayingHeaderView:(<span class="built_in">UIView</span> *)view forSection:(<span class="built_in">NSInteger</span>)section <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">6</span>_0);</div><div class="line"><span class="comment">// 停止显示footer的时候调用</span></div><div class="line">- (<span class="keyword">void</span>)tableView:(<span class="built_in">UITableView</span> *)tableView didEndDisplayingFooterView:(<span class="built_in">UIView</span> *)view forSection:(<span class="built_in">NSInteger</span>)section <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">6</span>_0);</div><div class="line"></div><div class="line"><span class="comment">// 设置某行cell高度</span></div><div class="line">- (<span class="built_in">CGFloat</span>)tableView:(<span class="built_in">UITableView</span> *)tableView heightForRowAtIndexPath:(<span class="built_in">NSIndexPath</span> *)indexPath;</div><div class="line"><span class="comment">// 设置header高度</span></div><div class="line">- (<span class="built_in">CGFloat</span>)tableView:(<span class="built_in">UITableView</span> *)tableView heightForHeaderInSection:(<span class="built_in">NSInteger</span>)section;</div><div class="line"><span class="comment">// 设置footer高度</span></div><div class="line">- (<span class="built_in">CGFloat</span>)tableView:(<span class="built_in">UITableView</span> *)tableView heightForFooterInSection:(<span class="built_in">NSInteger</span>)section;</div><div class="line"></div><div class="line"><span class="comment">// 设置每行cell的估算高度</span></div><div class="line">- (<span class="built_in">CGFloat</span>)tableView:(<span class="built_in">UITableView</span> *)tableView estimatedHeightForRowAtIndexPath:(<span class="built_in">NSIndexPath</span> *)indexPath <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">7</span>_0);</div><div class="line"><span class="comment">// 对可变的header 高度的估算</span></div><div class="line">- (<span class="built_in">CGFloat</span>)tableView:(<span class="built_in">UITableView</span> *)tableView estimatedHeightForHeaderInSection:(<span class="built_in">NSInteger</span>)section <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">7</span>_0);</div><div class="line"><span class="comment">// 对可变的footer 高度的估算</span></div><div class="line">- (<span class="built_in">CGFloat</span>)tableView:(<span class="built_in">UITableView</span> *)tableView estimatedHeightForFooterInSection:(<span class="built_in">NSInteger</span>)section <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">7</span>_0);</div><div class="line"></div><div class="line"><span class="comment">// 设置第section分组的headers自定义视图</span></div><div class="line">- (<span class="keyword">nullable</span> <span class="built_in">UIView</span> *)tableView:(<span class="built_in">UITableView</span> *)tableView viewForHeaderInSection:(<span class="built_in">NSInteger</span>)section;</div><div class="line"><span class="comment">// 设置第section分组的footer自定义视图</span></div><div class="line">- (<span class="keyword">nullable</span> <span class="built_in">UIView</span> *)tableView:(<span class="built_in">UITableView</span> *)tableView viewForFooterInSection:(<span class="built_in">NSInteger</span>)section;</div><div class="line"></div><div class="line"><span class="comment">// 可手动调用,在其他的触发事件中 传入tableview 以及indexPath参数，进行操作</span></div><div class="line">- (<span class="keyword">void</span>)tableView:(<span class="built_in">UITableView</span> *)tableView accessoryButtonTappedForRowWithIndexPath:(<span class="built_in">NSIndexPath</span> *)indexPath;</div><div class="line"></div><div class="line"><span class="comment">// Selection</span></div><div class="line"><span class="comment">// 设置是否允许cell高亮状态</span></div><div class="line">- (<span class="built_in">BOOL</span>)tableView:(<span class="built_in">UITableView</span> *)tableView shouldHighlightRowAtIndexPath:(<span class="built_in">NSIndexPath</span> *)indexPath <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">6</span>_0);</div><div class="line"><span class="comment">// 按下cell未弹起时调用，即即将高亮时调用,如果return no 则点击的时候没有反应，但是还是会执行此方法</span></div><div class="line">- (<span class="keyword">void</span>)tableView:(<span class="built_in">UITableView</span> *)tableView didHighlightRowAtIndexPath:(<span class="built_in">NSIndexPath</span> *)indexPath <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">6</span>_0);</div><div class="line"><span class="comment">// 按下cell弹起时调用</span></div><div class="line">- (<span class="keyword">void</span>)tableView:(<span class="built_in">UITableView</span> *)tableView didUnhighlightRowAtIndexPath:(<span class="built_in">NSIndexPath</span> *)indexPath <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">6</span>_0);</div><div class="line"></div><div class="line"><span class="comment">// 将要选定指定的cell时调用</span></div><div class="line">- (<span class="keyword">nullable</span> <span class="built_in">NSIndexPath</span> *)tableView:(<span class="built_in">UITableView</span> *)tableView willSelectRowAtIndexPath:(<span class="built_in">NSIndexPath</span> *)indexPath;</div><div class="line"><span class="comment">// 将要取消选定的cell时调用</span></div><div class="line">- (<span class="keyword">nullable</span> <span class="built_in">NSIndexPath</span> *)tableView:(<span class="built_in">UITableView</span> *)tableView willDeselectRowAtIndexPath:(<span class="built_in">NSIndexPath</span> *)indexPath <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">3</span>_0);</div><div class="line"><span class="comment">// 选择指定的cell时调用</span></div><div class="line">- (<span class="keyword">void</span>)tableView:(<span class="built_in">UITableView</span> *)tableView didSelectRowAtIndexPath:(<span class="built_in">NSIndexPath</span> *)indexPath;</div><div class="line"><span class="comment">// 取消选择指定cell时调用</span></div><div class="line">- (<span class="keyword">void</span>)tableView:(<span class="built_in">UITableView</span> *)tableView didDeselectRowAtIndexPath:(<span class="built_in">NSIndexPath</span> *)indexPath <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">3</span>_0);</div><div class="line"></div><div class="line"><span class="comment">// 编辑</span></div><div class="line"><span class="comment">// 返回每一行cell的编辑模式， 可以再次设置add或者删除操作</span></div><div class="line">- (<span class="built_in">UITableViewCellEditingStyle</span>)tableView:(<span class="built_in">UITableView</span> *)tableView editingStyleForRowAtIndexPath:(<span class="built_in">NSIndexPath</span> *)indexPath;</div><div class="line"><span class="comment">// cell左滑删除时，删除按钮的标题</span></div><div class="line">- (<span class="keyword">nullable</span> <span class="built_in">NSString</span> *)tableView:(<span class="built_in">UITableView</span> *)tableView titleForDeleteConfirmationButtonForRowAtIndexPath:(<span class="built_in">NSIndexPath</span> *)indexPath <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">3</span>_0) __TVOS_PROHIBITED;</div><div class="line"><span class="comment">// 自定义编辑左滑后出现的界面</span></div><div class="line">- (<span class="keyword">nullable</span> <span class="built_in">NSArray</span>&lt;<span class="built_in">UITableViewRowAction</span> *&gt; *)tableView:(<span class="built_in">UITableView</span> *)tableView editActionsForRowAtIndexPath:(<span class="built_in">NSIndexPath</span> *)indexPath <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">8</span>_0) __TVOS_PROHIBITED;</div><div class="line"></div><div class="line"><span class="comment">// 编辑模式下是否缩进指定行背景</span></div><div class="line">- (<span class="built_in">BOOL</span>)tableView:(<span class="built_in">UITableView</span> *)tableView shouldIndentWhileEditingRowAtIndexPath:(<span class="built_in">NSIndexPath</span> *)indexPath;</div><div class="line"></div><div class="line"><span class="comment">// 进入编辑模式时调用</span></div><div class="line">- (<span class="keyword">void</span>)tableView:(<span class="built_in">UITableView</span> *)tableView willBeginEditingRowAtIndexPath:(<span class="built_in">NSIndexPath</span> *)indexPath __TVOS_PROHIBITED;</div><div class="line"><span class="comment">// 编辑结束时调用</span></div><div class="line">- (<span class="keyword">void</span>)tableView:(<span class="built_in">UITableView</span> *)tableView didEndEditingRowAtIndexPath:(<span class="keyword">nullable</span> <span class="built_in">NSIndexPath</span> *)indexPath __TVOS_PROHIBITED;</div><div class="line"></div><div class="line"><span class="comment">// 移动</span></div><div class="line"><span class="comment">// 在编辑状态下，返回可以进行移动重新排序的indexpath</span></div><div class="line">- (<span class="built_in">NSIndexPath</span> *)tableView:(<span class="built_in">UITableView</span> *)tableView targetIndexPathForMoveFromRowAtIndexPath:(<span class="built_in">NSIndexPath</span> *)sourceIndexPath toProposedIndexPath:(<span class="built_in">NSIndexPath</span> *)proposedDestinationIndexPath;</div><div class="line"></div><div class="line"><span class="comment">// 缩进</span></div><div class="line"><span class="comment">// 设置cell的缩进</span></div><div class="line">- (<span class="built_in">NSInteger</span>)tableView:(<span class="built_in">UITableView</span> *)tableView indentationLevelForRowAtIndexPath:(<span class="built_in">NSIndexPath</span> *)indexPath;</div><div class="line"></div><div class="line"><span class="comment">// 复制/粘贴</span></div><div class="line"><span class="comment">// 是否在指定行显示菜单，返回值为YES时，长按显示菜单</span></div><div class="line">- (<span class="built_in">BOOL</span>)tableView:(<span class="built_in">UITableView</span> *)tableView shouldShowMenuForRowAtIndexPath:(<span class="built_in">NSIndexPath</span> *)indexPath <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">5</span>_0);</div><div class="line"><span class="comment">// 弹出菜单后回调用此方法。</span></div><div class="line">- (<span class="built_in">BOOL</span>)tableView:(<span class="built_in">UITableView</span> *)tableView canPerformAction:(SEL)action forRowAtIndexPath:(<span class="built_in">NSIndexPath</span> *)indexPath withSender:(<span class="keyword">nullable</span> <span class="keyword">id</span>)sender <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">5</span>_0);</div><div class="line"><span class="comment">// 选择菜单完成后，调用此方法。</span></div><div class="line">- (<span class="keyword">void</span>)tableView:(<span class="built_in">UITableView</span> *)tableView performAction:(SEL)action forRowAtIndexPath:(<span class="built_in">NSIndexPath</span> *)indexPath withSender:(<span class="keyword">nullable</span> <span class="keyword">id</span>)sender <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">5</span>_0);</div><div class="line"></div><div class="line"><span class="comment">// cell是否可以获得焦点</span></div><div class="line">- (<span class="built_in">BOOL</span>)tableView:(<span class="built_in">UITableView</span> *)tableView canFocusRowAtIndexPath:(<span class="built_in">NSIndexPath</span> *)indexPath <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">9</span>_0);</div><div class="line"><span class="comment">// 是否更新聚焦范围内发生的内容</span></div><div class="line">- (<span class="built_in">BOOL</span>)tableView:(<span class="built_in">UITableView</span> *)tableView shouldUpdateFocusInContext:(<span class="built_in">UITableViewFocusUpdateContext</span> *)context <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">9</span>_0);</div><div class="line"><span class="comment">// 聚焦范围内容更新完成后调用</span></div><div class="line">- (<span class="keyword">void</span>)tableView:(<span class="built_in">UITableView</span> *)tableView didUpdateFocusInContext:(<span class="built_in">UITableViewFocusUpdateContext</span> *)context withAnimationCoordinator:(<span class="built_in">UIFocusAnimationCoordinator</span> *)coordinator <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">9</span>_0);</div><div class="line"><span class="comment">// 设置聚焦时首选视图</span></div><div class="line">- (<span class="keyword">nullable</span> <span class="built_in">NSIndexPath</span> *)indexPathForPreferredFocusedViewInTableView:(<span class="built_in">UITableView</span> *)tableView <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">9</span>_0);</div><div class="line"></div><div class="line"><span class="keyword">@end</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="built_in">NS_CLASS_AVAILABLE_IOS</span>(<span class="number">2</span>_0) <span class="class"><span class="keyword">@interface</span> <span class="title">UITableView</span> : <span class="title">UIScrollView</span> &lt;<span class="title">NSCoding</span>&gt;</span></div><div class="line"><span class="comment">// cell的构造方法,自定义cell时,如果要初始化设置cell属性时,可以重写该方法,在方法内部设置</span></div><div class="line">- (<span class="keyword">instancetype</span>)initWithFrame:(<span class="built_in">CGRect</span>)frame style:(<span class="built_in">UITableViewStyle</span>)style <span class="built_in">NS_DESIGNATED_INITIALIZER</span>;</div><div class="line">- (<span class="keyword">nullable</span> <span class="keyword">instancetype</span>)initWithCoder:(<span class="built_in">NSCoder</span> *)aDecoder <span class="built_in">NS_DESIGNATED_INITIALIZER</span>;</div><div class="line"><span class="comment">// UITableView的类型: plain类型和group分组类型</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">readonly</span>) <span class="built_in">UITableViewStyle</span> style;</div><div class="line"><span class="comment">// 数据源</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">weak</span>, <span class="keyword">nullable</span>) <span class="keyword">id</span> &lt;<span class="built_in">UITableViewDataSource</span>&gt; dataSource;</div><div class="line"><span class="comment">// 代理</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">weak</span>, <span class="keyword">nullable</span>) <span class="keyword">id</span> &lt;<span class="built_in">UITableViewDelegate</span>&gt; delegate;</div><div class="line"><span class="comment">// 预读取数据</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">weak</span>) <span class="keyword">id</span>&lt;<span class="built_in">UITableViewDataSourcePrefetching</span>&gt; prefetchDataSource <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">10</span>_0);</div><div class="line"><span class="comment">// 行高</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>) <span class="built_in">CGFloat</span> rowHeight;</div><div class="line"><span class="comment">// 分组Header的高度</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>) <span class="built_in">CGFloat</span> sectionHeaderHeight;</div><div class="line"><span class="comment">// 分组Footer的高度</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>) <span class="built_in">CGFloat</span> sectionFooterHeight;   <span class="comment">// will return the default</span></div><div class="line"><span class="comment">// 估计行高</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>) <span class="built_in">CGFloat</span> estimatedRowHeight <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">7</span>_0); <span class="comment">//</span></div><div class="line"><span class="comment">// 分组Header估计高度</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>) <span class="built_in">CGFloat</span> estimatedSectionHeaderHeight <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">7</span>_0);</div><div class="line"><span class="comment">// 分组Footer估计高度</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>) <span class="built_in">CGFloat</span> estimatedSectionFooterHeight <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">7</span>_0);</div><div class="line"><span class="comment">// 分割线内边距</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>) <span class="built_in">UIEdgeInsets</span> separatorInset <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">7</span>_0) <span class="built_in">UI_APPEARANCE_SELECTOR</span>;</div><div class="line"><span class="comment">// 背景view</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>, <span class="keyword">nullable</span>) <span class="built_in">UIView</span> *backgroundView <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">3</span>_2);</div><div class="line"><span class="comment">// 重新载入tableview所有cell  一般是在数据源有改变的时候</span></div><div class="line">- (<span class="keyword">void</span>)reloadData;</div><div class="line"><span class="comment">// 重新载入，section的索引标题。</span></div><div class="line">- (<span class="keyword">void</span>)reloadSectionIndexTitles <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">3</span>_0);</div><div class="line"><span class="comment">// 获取TableView共有多少组</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">readonly</span>) <span class="built_in">NSInteger</span> numberOfSections;</div><div class="line"><span class="comment">// 获取第section组共有多少行</span></div><div class="line">- (<span class="built_in">NSInteger</span>)numberOfRowsInSection:(<span class="built_in">NSInteger</span>)section;</div><div class="line"><span class="comment">// 获取某一组的frame,头部frame,尾部frame,cell的frame</span></div><div class="line">- (<span class="built_in">CGRect</span>)rectForSection:(<span class="built_in">NSInteger</span>)section;</div><div class="line">- (<span class="built_in">CGRect</span>)rectForHeaderInSection:(<span class="built_in">NSInteger</span>)section;</div><div class="line">- (<span class="built_in">CGRect</span>)rectForFooterInSection:(<span class="built_in">NSInteger</span>)section;</div><div class="line">- (<span class="built_in">CGRect</span>)rectForRowAtIndexPath:(<span class="built_in">NSIndexPath</span> *)indexPath;</div><div class="line"><span class="comment">// 返回指定坐标点的indexPath</span></div><div class="line">- (<span class="keyword">nullable</span> <span class="built_in">NSIndexPath</span> *)indexPathForRowAtPoint:(<span class="built_in">CGPoint</span>)point;</div><div class="line"><span class="comment">// 返回指定cell所在的indexPath</span></div><div class="line">- (<span class="keyword">nullable</span> <span class="built_in">NSIndexPath</span> *)indexPathForCell:(<span class="built_in">UITableViewCell</span> *)cell;</div><div class="line"><span class="comment">// 返回指定范围内的所有indexPath的数组</span></div><div class="line">- (<span class="keyword">nullable</span> <span class="built_in">NSArray</span>&lt;<span class="built_in">NSIndexPath</span> *&gt; *)indexPathsForRowsInRect:(<span class="built_in">CGRect</span>)rect;</div><div class="line"><span class="comment">// 返回indexPath所指向的cell</span></div><div class="line">- (<span class="keyword">nullable</span> __kindof <span class="built_in">UITableViewCell</span> *)cellForRowAtIndexPath:(<span class="built_in">NSIndexPath</span> *)indexPath;</div><div class="line"><span class="comment">// 当前可以看到的cell数组</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">readonly</span>) <span class="built_in">NSArray</span>&lt;__kindof <span class="built_in">UITableViewCell</span> *&gt; *visibleCells;</div><div class="line"><span class="comment">// 返回tableView中标识的可见的indexPath数组</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">readonly</span>, <span class="keyword">nullable</span>) <span class="built_in">NSArray</span>&lt;<span class="built_in">NSIndexPath</span> *&gt; *indexPathsForVisibleRows;</div><div class="line"><span class="comment">// 设置tableView的headerView</span></div><div class="line">- (<span class="keyword">nullable</span> <span class="built_in">UITableViewHeaderFooterView</span> *)headerViewForSection:(<span class="built_in">NSInteger</span>)section <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">6</span>_0);</div><div class="line">indexPathsForVisibleRows;</div><div class="line"><span class="comment">// 设置tableView的footerView</span></div><div class="line">- (<span class="keyword">nullable</span> <span class="built_in">UITableViewHeaderFooterView</span> *)footerViewForSection:(<span class="built_in">NSInteger</span>)section <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">6</span>_0);</div><div class="line"><span class="comment">// 根据传入的indexPath，滚动到相对应的位置，第二个参数是控制对应的cell再滚动后处于tableview的顶部/底部/中部等</span></div><div class="line">- (<span class="keyword">void</span>)scrollToRowAtIndexPath:(<span class="built_in">NSIndexPath</span> *)indexPath atScrollPosition:(<span class="built_in">UITableViewScrollPosition</span>)scrollPosition animated:(<span class="built_in">BOOL</span>)animated;</div><div class="line"><span class="comment">// 滚动到被选中项。滚动后处于tableview的顶部/底部/中部等</span></div><div class="line">- (<span class="keyword">void</span>)scrollToNearestSelectedRowAtScrollPosition:(<span class="built_in">UITableViewScrollPosition</span>)scrollPosition animated:(<span class="built_in">BOOL</span>)animated;</div><div class="line"></div><div class="line"><span class="comment">// 开始一系列的增删改移操作</span></div><div class="line">- (<span class="keyword">void</span>)beginUpdates;</div><div class="line"><span class="comment">// 操作结束更新数据</span></div><div class="line">- (<span class="keyword">void</span>)endUpdates;</div><div class="line"><span class="comment">// 对section进行插入,删除,刷新,移动操作</span></div><div class="line">- (<span class="keyword">void</span>)insertSections:(<span class="built_in">NSIndexSet</span> *)sections withRowAnimation:(<span class="built_in">UITableViewRowAnimation</span>)animation;</div><div class="line">- (<span class="keyword">void</span>)deleteSections:(<span class="built_in">NSIndexSet</span> *)sections withRowAnimation:(<span class="built_in">UITableViewRowAnimation</span>)animation;</div><div class="line">- (<span class="keyword">void</span>)reloadSections:(<span class="built_in">NSIndexSet</span> *)sections withRowAnimation:(<span class="built_in">UITableViewRowAnimation</span>)animation <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">3</span>_0);</div><div class="line">- (<span class="keyword">void</span>)moveSection:(<span class="built_in">NSInteger</span>)section toSection:(<span class="built_in">NSInteger</span>)newSection <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">5</span>_0);</div><div class="line"></div><div class="line"><span class="comment">// 对行进行插入,删除,刷新,移动批量操作</span></div><div class="line">- (<span class="keyword">void</span>)insertRowsAtIndexPaths:(<span class="built_in">NSArray</span>&lt;<span class="built_in">NSIndexPath</span> *&gt; *)indexPaths withRowAnimation:(<span class="built_in">UITableViewRowAnimation</span>)animation;</div><div class="line">- (<span class="keyword">void</span>)deleteRowsAtIndexPaths:(<span class="built_in">NSArray</span>&lt;<span class="built_in">NSIndexPath</span> *&gt; *)indexPaths withRowAnimation:(<span class="built_in">UITableViewRowAnimation</span>)animation;</div><div class="line">- (<span class="keyword">void</span>)reloadRowsAtIndexPaths:(<span class="built_in">NSArray</span>&lt;<span class="built_in">NSIndexPath</span> *&gt; *)indexPaths withRowAnimation:(<span class="built_in">UITableViewRowAnimation</span>)animation <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">3</span>_0);</div><div class="line">- (<span class="keyword">void</span>)moveRowAtIndexPath:(<span class="built_in">NSIndexPath</span> *)indexPath toIndexPath:(<span class="built_in">NSIndexPath</span> *)newIndexPath <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">5</span>_0);</div><div class="line"></div><div class="line"><span class="comment">// 编辑状态 默认为NO</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">getter</span>=isEditing) <span class="built_in">BOOL</span> editing;</div><div class="line"><span class="comment">// 设置编辑状态动画显示</span></div><div class="line">- (<span class="keyword">void</span>)setEditing:(<span class="built_in">BOOL</span>)editing animated:(<span class="built_in">BOOL</span>)animated;</div><div class="line"><span class="comment">// cell 是否可以选择 默认为YES</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>) <span class="built_in">BOOL</span> allowsSelection <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">3</span>_0);</div><div class="line"><span class="comment">// 编辑模式是否可以选择 默认为NO</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>) <span class="built_in">BOOL</span> allowsSelectionDuringEditing;</div><div class="line"><span class="comment">// 是否可以多选 默认为NO</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>) <span class="built_in">BOOL</span> allowsMultipleSelection <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">5</span>_0);</div><div class="line"><span class="comment">// 编辑模式是否可以多选 默认为NO</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>) <span class="built_in">BOOL</span> allowsMultipleSelectionDuringEditing <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">5</span>_0);</div><div class="line"></div><div class="line"><span class="comment">// 获取选中行的indexPath</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">readonly</span>, <span class="keyword">nullable</span>) <span class="built_in">NSIndexPath</span> *indexPathForSelectedRow;</div><div class="line"><span class="comment">// 返回一个多行选中的indexpath数组</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">readonly</span>, <span class="keyword">nullable</span>) <span class="built_in">NSArray</span>&lt;<span class="built_in">NSIndexPath</span> *&gt; *indexPathsForSelectedRows <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">5</span>_0);</div><div class="line"></div><div class="line"><span class="comment">// 调用此方法，此indexpath的cell被选中，若此cell不再可视范围内，自动按照最后一个参数的方式进行滚动</span></div><div class="line">- (<span class="keyword">void</span>)selectRowAtIndexPath:(<span class="keyword">nullable</span> <span class="built_in">NSIndexPath</span> *)indexPath animated:(<span class="built_in">BOOL</span>)animated scrollPosition:(<span class="built_in">UITableViewScrollPosition</span>)scrollPosition;</div><div class="line"><span class="comment">// 取消此indexpath的选中状态</span></div><div class="line">- (<span class="keyword">void</span>)deselectRowAtIndexPath:(<span class="built_in">NSIndexPath</span> *)indexPath animated:(<span class="built_in">BOOL</span>)animated;</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">// 索引条设置</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>) <span class="built_in">NSInteger</span> sectionIndexMinimumDisplayRowCount;</div><div class="line"><span class="comment">// 索引条字体颜色</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>, <span class="keyword">nullable</span>) <span class="built_in">UIColor</span> *sectionIndexColor <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">6</span>_0) <span class="built_in">UI_APPEARANCE_SELECTOR</span>;</div><div class="line"><span class="comment">// 索引条背景颜色</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>, <span class="keyword">nullable</span>) <span class="built_in">UIColor</span> *sectionIndexBackgroundColor <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">7</span>_0) <span class="built_in">UI_APPEARANCE_SELECTOR</span>;</div><div class="line"><span class="comment">// 按住时,索引条显示的背景颜色</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>, <span class="keyword">nullable</span>) <span class="built_in">UIColor</span> *sectionIndexTrackingBackgroundColor <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">6</span>_0) <span class="built_in">UI_APPEARANCE_SELECTOR</span>;</div><div class="line"><span class="comment">// 分割线的样式</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>) <span class="built_in">UITableViewCellSeparatorStyle</span> separatorStyle __TVOS_PROHIBITED;</div><div class="line"><span class="comment">// 分割线的颜色</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>, <span class="keyword">nullable</span>) <span class="built_in">UIColor</span> *separatorColor <span class="built_in">UI_APPEARANCE_SELECTOR</span> __TVOS_PROHIBITED;</div><div class="line"><span class="comment">// 分割线的玻璃效果</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">copy</span>, <span class="keyword">nullable</span>) <span class="built_in">UIVisualEffect</span> *separatorEffect <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">8</span>_0) <span class="built_in">UI_APPEARANCE_SELECTOR</span> __TVOS_PROHIBITED;</div><div class="line"><span class="comment">// 判断是否需要根据内容留有空白</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>) <span class="built_in">BOOL</span> cellLayoutMarginsFollowReadableWidth <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">9</span>_0);</div><div class="line"></div><div class="line"><span class="comment">// tableView的头部视图，不要和section header混淆</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>, <span class="keyword">nullable</span>) <span class="built_in">UIView</span> *tableHeaderView;</div><div class="line"><span class="comment">// tableView的底部视图，不要和section footer混淆</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>, <span class="keyword">nullable</span>) <span class="built_in">UIView</span> *tableFooterView;</div><div class="line"><span class="comment">// 从缓冲池获取cell</span></div><div class="line">- (<span class="keyword">nullable</span> __kindof <span class="built_in">UITableViewCell</span> *)dequeueReusableCellWithIdentifier:(<span class="built_in">NSString</span> *)identifier;</div><div class="line"><span class="comment">// 从缓冲池获取指定下标的cell</span></div><div class="line">- (__kindof <span class="built_in">UITableViewCell</span> *)dequeueReusableCellWithIdentifier:(<span class="built_in">NSString</span> *)identifier forIndexPath:(<span class="built_in">NSIndexPath</span> *)indexPath <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">6</span>_0);</div><div class="line"><span class="comment">// 从缓冲池获取header,footer</span></div><div class="line">- (<span class="keyword">nullable</span> __kindof <span class="built_in">UITableViewHeaderFooterView</span> *)dequeueReusableHeaderFooterViewWithIdentifier:(<span class="built_in">NSString</span> *)identifier <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">6</span>_0);</div><div class="line"></div><div class="line"><span class="comment">// 注册xib创建的cell</span></div><div class="line">- (<span class="keyword">void</span>)registerNib:(<span class="keyword">nullable</span> <span class="built_in">UINib</span> *)nib forCellReuseIdentifier:(<span class="built_in">NSString</span> *)identifier <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">5</span>_0);</div><div class="line"><span class="comment">// 注册cell</span></div><div class="line">- (<span class="keyword">void</span>)registerClass:(<span class="keyword">nullable</span> Class)cellClass forCellReuseIdentifier:(<span class="built_in">NSString</span> *)identifier <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">6</span>_0);</div><div class="line"><span class="comment">// 注册xib创建的header,footer</span></div><div class="line">- (<span class="keyword">void</span>)registerNib:(<span class="keyword">nullable</span> <span class="built_in">UINib</span> *)nib forHeaderFooterViewReuseIdentifier:(<span class="built_in">NSString</span> *)identifier <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">6</span>_0);</div><div class="line"><span class="comment">// 注册header,footer</span></div><div class="line">- (<span class="keyword">void</span>)registerClass:(<span class="keyword">nullable</span> Class)aClass forHeaderFooterViewReuseIdentifier:(<span class="built_in">NSString</span> *)identifier <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">6</span>_0);</div><div class="line"><span class="comment">// 是否自动将焦点上次集中索引的路径的单元格上 默认值为NO</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>) <span class="built_in">BOOL</span> remembersLastFocusedIndexPath <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">9</span>_0); .</div><div class="line"></div><div class="line"><span class="keyword">@end</span></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">@protocol</span> <span class="title">UITableViewDataSource</span>&lt;<span class="title">NSObject</span>&gt;</span></div><div class="line"></div><div class="line"><span class="keyword">@required</span></div><div class="line"></div><div class="line"><span class="comment">// 每组有多少行</span></div><div class="line">- (<span class="built_in">NSInteger</span>)tableView:(<span class="built_in">UITableView</span> *)tableView numberOfRowsInSection:(<span class="built_in">NSInteger</span>)section;</div><div class="line"><span class="comment">// 返回显示的cell</span></div><div class="line">- (<span class="built_in">UITableViewCell</span> *)tableView:(<span class="built_in">UITableView</span> *)tableView cellForRowAtIndexPath:(<span class="built_in">NSIndexPath</span> *)indexPath;</div><div class="line"></div><div class="line"><span class="keyword">@optional</span></div><div class="line"><span class="comment">// tablaView上有多少组</span></div><div class="line">- (<span class="built_in">NSInteger</span>)numberOfSectionsInTableView:(<span class="built_in">UITableView</span> *)tableView;</div><div class="line"><span class="comment">// 返回某个section对应的header标题</span></div><div class="line">- (<span class="keyword">nullable</span> <span class="built_in">NSString</span> *)tableView:(<span class="built_in">UITableView</span> *)tableView titleForHeaderInSection:(<span class="built_in">NSInteger</span>)section;</div><div class="line"><span class="comment">// 返回某个section对应的footer标题</span></div><div class="line">- (<span class="keyword">nullable</span> <span class="built_in">NSString</span> *)tableView:(<span class="built_in">UITableView</span> *)tableView titleForFooterInSection:(<span class="built_in">NSInteger</span>)section;</div><div class="line"><span class="comment">// 设置cell为可编辑模式</span></div><div class="line">- (<span class="built_in">BOOL</span>)tableView:(<span class="built_in">UITableView</span> *)tableView canEditRowAtIndexPath:(<span class="built_in">NSIndexPath</span> *)indexPath;</div><div class="line"><span class="comment">// 设置cell为可移动模式</span></div><div class="line">- (<span class="built_in">BOOL</span>)tableView:(<span class="built_in">UITableView</span> *)tableView canMoveRowAtIndexPath:(<span class="built_in">NSIndexPath</span> *)indexPath;</div><div class="line"><span class="comment">// 设置右边栏的索引目录数组 e.g. "ABCD...Z#"</span></div><div class="line">- (<span class="keyword">nullable</span> <span class="built_in">NSArray</span>&lt;<span class="built_in">NSString</span> *&gt; *)sectionIndexTitlesForTableView:(<span class="built_in">UITableView</span> *)tableView __TVOS_PROHIBITED;</div><div class="line"><span class="comment">// 点击右侧索引表项时调用 e.g. "B",1</span></div><div class="line">- (<span class="built_in">NSInteger</span>)tableView:(<span class="built_in">UITableView</span> *)tableView sectionForSectionIndexTitle:(<span class="built_in">NSString</span> *)title atIndex:(<span class="built_in">NSInteger</span>)index __TVOS_PROHIBITED;</div><div class="line"><span class="comment">// 提交编辑</span></div><div class="line">- (<span class="keyword">void</span>)tableView:(<span class="built_in">UITableView</span> *)tableView commitEditingStyle:(<span class="built_in">UITableViewCellEditingStyle</span>)editingStyle forRowAtIndexPath:(<span class="built_in">NSIndexPath</span> *)indexPath;</div><div class="line"><span class="comment">// 移动时使用</span></div><div class="line">- (<span class="keyword">void</span>)tableView:(<span class="built_in">UITableView</span> *)tableView moveRowAtIndexPath:(<span class="built_in">NSIndexPath</span> *)sourceIndexPath toIndexPath:(<span class="built_in">NSIndexPath</span> *)destinationIndexPath;</div><div class="line"></div><div class="line"><span class="keyword">@end</span></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">@protocol</span> <span class="title">UITableViewDataSourcePrefetching</span> &lt;<span class="title">NSObject</span>&gt;</span></div><div class="line"></div><div class="line"><span class="keyword">@required</span></div><div class="line"></div><div class="line"><span class="comment">// 设置预读取的优先排序数组</span></div><div class="line">- (<span class="keyword">void</span>)tableView:(<span class="built_in">UITableView</span> *)tableView prefetchRowsAtIndexPaths:(<span class="built_in">NSArray</span>&lt;<span class="built_in">NSIndexPath</span> *&gt; *)indexPaths;</div><div class="line"></div><div class="line"><span class="keyword">@optional</span></div><div class="line"></div><div class="line"><span class="comment">// 预读取indexPath数组</span></div><div class="line">- (<span class="keyword">void</span>)tableView:(<span class="built_in">UITableView</span> *)tableView cancelPrefetchingForRowsAtIndexPaths:(<span class="built_in">NSArray</span>&lt;<span class="built_in">NSIndexPath</span> *&gt; *)indexPaths;</div><div class="line"></div><div class="line"><span class="keyword">@end</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">NSIndexPath</span> (<span class="title">UITableView</span>)</span></div><div class="line"></div><div class="line"><span class="comment">// 获取indexPath</span></div><div class="line">+ (<span class="keyword">instancetype</span>)indexPathForRow:(<span class="built_in">NSInteger</span>)row inSection:(<span class="built_in">NSInteger</span>)section;</div><div class="line"><span class="comment">// 获取第几组</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">readonly</span>) <span class="built_in">NSInteger</span> section;</div><div class="line"><span class="comment">// 获取第几行</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">readonly</span>) <span class="built_in">NSInteger</span> row;</div><div class="line"></div><div class="line"><span class="keyword">@end</span></div></pre></td></tr></table></figure><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// UITableView风格样式</span></div><div class="line"><span class="keyword">typedef</span> <span class="built_in">NS_ENUM</span>(<span class="built_in">NSInteger</span>, <span class="built_in">UITableViewStyle</span>) &#123;</div><div class="line">    <span class="built_in">UITableViewStylePlain</span>,          <span class="comment">// 平铺式(补充：有section时，自动悬浮在顶部)</span></div><div class="line">    <span class="built_in">UITableViewStyleGrouped</span>         <span class="comment">// 分段式</span></div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="comment">// 选中某一行滚动到tableView顶、中、下的位置</span></div><div class="line"><span class="keyword">typedef</span> <span class="built_in">NS_ENUM</span>(<span class="built_in">NSInteger</span>, <span class="built_in">UITableViewScrollPosition</span>) &#123;</div><div class="line">    <span class="built_in">UITableViewScrollPositionNone</span>,</div><div class="line">    <span class="built_in">UITableViewScrollPositionTop</span>, <span class="comment">// 滚动到顶部</span></div><div class="line">    <span class="built_in">UITableViewScrollPositionMiddle</span>, <span class="comment">// 滚动到中部</span></div><div class="line">    <span class="built_in">UITableViewScrollPositionBottom</span> <span class="comment">// 滚到到底部</span></div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="comment">// 删除/添加时，cell过渡动画效果</span></div><div class="line"><span class="keyword">typedef</span> <span class="built_in">NS_ENUM</span>(<span class="built_in">NSInteger</span>, <span class="built_in">UITableViewRowAnimation</span>) &#123;</div><div class="line">    <span class="built_in">UITableViewRowAnimationFade</span>,       <span class="comment">// 褪去</span></div><div class="line">    <span class="built_in">UITableViewRowAnimationRight</span>,      <span class="comment">// 从右边滑入（或滑出）</span></div><div class="line">    <span class="built_in">UITableViewRowAnimationLeft</span>,       <span class="comment">// 从左边滑入（或滑出）</span></div><div class="line">    <span class="built_in">UITableViewRowAnimationTop</span>,        <span class="comment">// 从顶部插入（或删除）</span></div><div class="line">    <span class="built_in">UITableViewRowAnimationBottom</span>,     <span class="comment">// 从底部插入（或删除）</span></div><div class="line">    <span class="built_in">UITableViewRowAnimationNone</span>,       <span class="comment">// 无效果</span></div><div class="line">    <span class="built_in">UITableViewRowAnimationMiddle</span>,     <span class="comment">//</span></div><div class="line">    <span class="built_in">UITableViewRowAnimationAutomatic</span> = <span class="number">100</span></div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="comment">// 在编辑状态下左划cell时,cell右侧显示的按钮类型</span></div><div class="line"><span class="keyword">typedef</span> <span class="built_in">NS_ENUM</span>(<span class="built_in">NSInteger</span>, <span class="built_in">UITableViewRowActionStyle</span>) &#123;</div><div class="line">    <span class="built_in">UITableViewRowActionStyleDefault</span> = <span class="number">0</span>, <span class="comment">// 红色</span></div><div class="line">    <span class="built_in">UITableViewRowActionStyleDestructive</span> = <span class="built_in">UITableViewRowActionStyleDefault</span>,</div><div class="line">    <span class="built_in">UITableViewRowActionStyleNormal</span></div><div class="line">&#125; <span class="built_in">NS_ENUM_AVAILABLE_IOS</span>(<span class="number">8</span>_0) __TVOS_PROHIBITED;</div><div class="line"></div><div class="line"><span class="comment">// 设置索引的标题为搜索.</span></div><div class="line"><span class="built_in">UIKIT_EXTERN</span> <span class="built_in">NSString</span> *<span class="keyword">const</span> <span class="built_in">UITableViewIndexSearch</span> <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">3</span>_0) __TVOS_PROHIBITED;</div><div class="line"><span class="comment">// 选择发生改变后发送通知的key</span></div><div class="line"><span class="built_in">UIKIT_EXTERN</span> <span class="built_in">NSNotificationName</span> <span class="keyword">const</span> <span class="built_in">UITableViewSelectionDidChangeNotification</span>;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;UITableView在iOS开发中是使用最广泛的一个控件，用于展示单个项目数据的列表，同时也可以进行选择和编辑操作。&lt;br&gt;
    
    </summary>
    
      <category term="iOS" scheme="https://wynter.wang/categories/iOS/"/>
    
    
      <category term="API" scheme="https://wynter.wang/tags/API/"/>
    
      <category term="iOS" scheme="https://wynter.wang/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>iOS-UIKit框架学习—UIScrollView</title>
    <link href="https://wynter.wang/2017/02/10/iOS-UIKit%E6%A1%86%E6%9E%B6%E5%AD%A6%E4%B9%A0%E2%80%94UIScrollView/"/>
    <id>https://wynter.wang/2017/02/10/iOS-UIKit框架学习—UIScrollView/</id>
    <published>2017-02-10T11:35:45.000Z</published>
    <updated>2017-02-10T06:05:18.000Z</updated>
    
    <content type="html"><![CDATA[<p>UIScrollView的类提供支持显示的内容是大于应用程序的窗口大小。它可以使用户内滚动的内容，通过刷卡手势，和捏的手势放大和部分内容。</p><a id="more"></a><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">@class</span> <span class="title">UIEvent</span>, <span class="title">UIImageView</span>, <span class="title">UIPanGestureRecognizer</span>, <span class="title">UIPinchGestureRecognizer</span>;</span></div><div class="line"><span class="class"><span class="keyword">@protocol</span> <span class="title">UIScrollViewDelegate</span>;</span></div><div class="line"></div><div class="line"><span class="built_in">NS_CLASS_AVAILABLE_IOS</span>(<span class="number">2</span>_0) <span class="class"><span class="keyword">@interface</span> <span class="title">UIScrollView</span> : <span class="title">UIView</span> &lt;<span class="title">NSCoding</span>&gt;</span></div><div class="line"></div><div class="line"><span class="comment">// 内容视图原点与滚动视图原点的偏移值，默认值为0</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>)         <span class="built_in">CGPoint</span>                      contentOffset;</div><div class="line"><span class="comment">// 内容视图的大小，默认值为0</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>)         <span class="built_in">CGSize</span>                       contentSize;</div><div class="line"><span class="comment">// 内容视图额外的滚动范围，默认值为UIEdgeInsetsZero</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>)         <span class="built_in">UIEdgeInsets</span>                 contentInset;</div><div class="line"><span class="comment">// 代理</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nullable</span>,<span class="keyword">nonatomic</span>,<span class="keyword">weak</span>) <span class="keyword">id</span>&lt;<span class="built_in">UIScrollViewDelegate</span>&gt;        delegate;</div><div class="line"><span class="comment">// 是否锁定视图垂直或水平方向滚动，默认为NO</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>,<span class="keyword">getter</span>=isDirectionalLockEnabled) <span class="built_in">BOOL</span> directionalLockEnabled;</div><div class="line"><span class="comment">// 拖动到屏幕的边缘是否弹跳效果，默认值为YES</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>)         <span class="built_in">BOOL</span>                         bounces;</div><div class="line"><span class="comment">// 是否总是允许垂直方向拉伸拖动，默认值为YES</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>)         <span class="built_in">BOOL</span>                         alwaysBounceVertical;</div><div class="line"><span class="comment">// 是否总是允许水平方向拉伸拖动，默认值为YES</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>)         <span class="built_in">BOOL</span>                         alwaysBounceHorizontal;</div><div class="line"><span class="comment">// 是否支持翻页，默认值为NO</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>,<span class="keyword">getter</span>=isPagingEnabled) <span class="built_in">BOOL</span>          pagingEnabled;</div><div class="line"><span class="comment">// 是否开启拖动效果，默认值是YES</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>,<span class="keyword">getter</span>=isScrollEnabled) <span class="built_in">BOOL</span>          scrollEnabled;</div><div class="line"><span class="comment">// 水平方向滚动指示器是否可见，默认值为YES</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>)         <span class="built_in">BOOL</span>            showsHorizontalScrollIndicator;</div><div class="line"><span class="comment">// 垂直方向滚动指示器是否可见，默认值为YES</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>)         <span class="built_in">BOOL</span>            showsVerticalScrollIndicator;</div><div class="line"><span class="comment">// 滚动指示器的间距范围，默认值为UIEdgeInsetsZero</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>)         <span class="built_in">UIEdgeInsets</span>               scrollIndicatorInsets;</div><div class="line"><span class="comment">// 滚动指示器的风格</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>)         <span class="built_in">UIScrollViewIndicatorStyle</span>   indicatorStyle;</div><div class="line"><span class="comment">// 当手指离开屏幕滚动的减速率</span></div><div class="line"><span class="comment">// UIScrollViewDecelerationRateNormal and UIScrollViewDecelerationRateFast</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>)         <span class="built_in">CGFloat</span>               decelerationRate;</div><div class="line"><span class="comment">// 设置内容的偏移量。与contentOffset属性设置有区别，如：关闭动画效果没有抖动</span></div><div class="line">- (<span class="keyword">void</span>)setContentOffset:(<span class="built_in">CGPoint</span>)contentOffset animated:(<span class="built_in">BOOL</span>)animated;</div><div class="line"><span class="comment">// 设置在指定滚动区域可见</span></div><div class="line">- (<span class="keyword">void</span>)scrollRectToVisible:(<span class="built_in">CGRect</span>)rect animated:(<span class="built_in">BOOL</span>)animated;</div><div class="line"><span class="comment">// 短暂的显示滚动指示器</span></div><div class="line">- (<span class="keyword">void</span>)flashScrollIndicators;</div><div class="line"><span class="comment">// 获取用户是否触摸了滚动视图</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>,<span class="keyword">readonly</span>,<span class="keyword">getter</span>=isTracking)     <span class="built_in">BOOL</span> tracking;</div><div class="line"><span class="comment">// 获取用户是否应经滚动视图</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>,<span class="keyword">readonly</span>,<span class="keyword">getter</span>=isDragging)     <span class="built_in">BOOL</span> dragging;</div><div class="line"><span class="comment">// 获取用户手指离开视图后是否在滚动</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>,<span class="keyword">readonly</span>,<span class="keyword">getter</span>=isDecelerating) <span class="built_in">BOOL</span> decelerating;</div><div class="line"><span class="comment">// 是否延迟处理触摸手势，默认值为YES</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>) <span class="built_in">BOOL</span> delaysContentTouches;</div><div class="line"><span class="comment">// 是否总是监听滚动视图中触摸事件，默认值为YES</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>) <span class="built_in">BOOL</span> canCancelContentTouches;</div><div class="line"></div><div class="line"><span class="comment">// 由子类重写自定义默认的行为，当手指触摸到显示的内容。默认值为YES</span></div><div class="line">- (<span class="built_in">BOOL</span>)touchesShouldBegin:(<span class="built_in">NSSet</span>&lt;<span class="built_in">UITouch</span> *&gt; *)touches withEvent:(<span class="keyword">nullable</span> <span class="built_in">UIEvent</span> *)event inContentView:(<span class="built_in">UIView</span> *)view;</div><div class="line"><span class="comment">// 返回是否取消涉及相关内容的子视图并开始拖放</span></div><div class="line">- (<span class="built_in">BOOL</span>)touchesShouldCancelInContentView:(<span class="built_in">UIView</span> *)view;</div><div class="line"></div><div class="line"><span class="comment">// 滚动视图内容可拖放的最大比例，默认值为1</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>) <span class="built_in">CGFloat</span> minimumZoomScale;</div><div class="line"><span class="comment">// 滚动视图内容可拖放的最小比例，默认值为1</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>) <span class="built_in">CGFloat</span> maximumZoomScale;</div><div class="line"><span class="comment">// 指定当前公洞视图的拖放比例，默认值为1</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>) <span class="built_in">CGFloat</span> zoomScale <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">3</span>_0);</div><div class="line"><span class="comment">// 新的值应该在是minimumZoomScale和maximumZoomScale之间</span></div><div class="line">- (<span class="keyword">void</span>)setZoomScale:(<span class="built_in">CGFloat</span>)scale animated:(<span class="built_in">BOOL</span>)animated <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">3</span>_0);</div><div class="line"><span class="comment">// 设定特定区域内的视图可见</span></div><div class="line">- (<span class="keyword">void</span>)zoomToRect:(<span class="built_in">CGRect</span>)rect animated:(<span class="built_in">BOOL</span>)animated <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">3</span>_0);</div><div class="line"><span class="comment">// 确定视图动画的缩放大小是否超过最大或最小缩放限制，默认值为YES</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>) <span class="built_in">BOOL</span>  bouncesZoom;</div><div class="line"><span class="comment">// 是否在使用缩放手势</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>,<span class="keyword">readonly</span>,<span class="keyword">getter</span>=isZooming)       <span class="built_in">BOOL</span> zooming;</div><div class="line"><span class="comment">// 是否正在缩放回最大或最小值</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>,<span class="keyword">readonly</span>,<span class="keyword">getter</span>=isZoomBouncing)  <span class="built_in">BOOL</span> zoomBouncing;</div><div class="line"><span class="comment">// 是否启用滚动到顶部的手势，默认值为YES</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>) <span class="built_in">BOOL</span>  scrollsToTop __TVOS_PROHIBITED;</div><div class="line"></div><div class="line"><span class="comment">// 点击手势</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>, <span class="keyword">readonly</span>) <span class="built_in">UIPanGestureRecognizer</span> *panGestureRecognizer <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">5</span>_0);</div><div class="line"><span class="comment">// 捏合手势</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nullable</span>, <span class="keyword">nonatomic</span>, <span class="keyword">readonly</span>) <span class="built_in">UIPinchGestureRecognizer</span> *pinchGestureRecognizer <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">5</span>_0);</div><div class="line"><span class="comment">// 按压手势</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>, <span class="keyword">readonly</span>) <span class="built_in">UIGestureRecognizer</span> *directionalPressGestureRecognizer <span class="built_in">UIKIT_AVAILABLE_TVOS_ONLY</span>(<span class="number">9</span>_0);</div><div class="line"><span class="comment">// 键盘显示方式</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>) <span class="built_in">UIScrollViewKeyboardDismissMode</span> keyboardDismissMode <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">7</span>_0); <span class="comment">// default is UIScrollViewKeyboardDismissModeNone</span></div><div class="line"><span class="comment">// 属性控制器</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>, <span class="keyword">nullable</span>) <span class="built_in">UIRefreshControl</span> *refreshControl <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">10</span>_0) __TVOS_PROHIBITED;</div><div class="line"></div><div class="line"><span class="keyword">@end</span></div></pre></td></tr></table></figure><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">@protocol</span> <span class="title">UIScrollViewDelegate</span>&lt;<span class="title">NSObject</span>&gt;</span></div><div class="line"></div><div class="line"><span class="keyword">@optional</span></div><div class="line"></div><div class="line"><span class="comment">// 当用户滚动内容视图事调用</span></div><div class="line">- (<span class="keyword">void</span>)scrollViewDidScroll:(<span class="built_in">UIScrollView</span> *)scrollView;</div><div class="line"><span class="comment">// 滚动视图的缩放比例发生改变时调用</span></div><div class="line">- (<span class="keyword">void</span>)scrollViewDidZoom:(<span class="built_in">UIScrollView</span> *)scrollView <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">3</span>_2);</div><div class="line"><span class="comment">// 开始拖动视图时调用</span></div><div class="line">- (<span class="keyword">void</span>)scrollViewWillBeginDragging:(<span class="built_in">UIScrollView</span> *)scrollView;</div><div class="line"><span class="comment">// 当拖动内容滚动视图将要完成时调用</span></div><div class="line">- (<span class="keyword">void</span>)scrollViewWillEndDragging:(<span class="built_in">UIScrollView</span> *)scrollView withVelocity:(<span class="built_in">CGPoint</span>)velocity targetContentOffset:(<span class="keyword">inout</span> <span class="built_in">CGPoint</span> *)targetContentOffset <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">5</span>_0);</div><div class="line"><span class="comment">// 告诉代理拖动内容滚动视图结束</span></div><div class="line">- (<span class="keyword">void</span>)scrollViewDidEndDragging:(<span class="built_in">UIScrollView</span> *)scrollView willDecelerate:(<span class="built_in">BOOL</span>)decelerate;</div><div class="line"><span class="comment">// 到拖动结束滚动视图正在减速时调用</span></div><div class="line">- (<span class="keyword">void</span>)scrollViewWillBeginDecelerating:(<span class="built_in">UIScrollView</span> *)scrollView;</div><div class="line"><span class="comment">// 减速效果结束调用</span></div><div class="line">- (<span class="keyword">void</span>)scrollViewDidEndDecelerating:(<span class="built_in">UIScrollView</span> *)scrollView;</div><div class="line"><span class="comment">// 当滚动视图的滚动动画结束时调用</span></div><div class="line">- (<span class="keyword">void</span>)scrollViewDidEndScrollingAnimation:(<span class="built_in">UIScrollView</span> *)scrollView;</div><div class="line"><span class="comment">// 返回按比例缩放视图，当缩放将要发生时调用</span></div><div class="line">- (<span class="keyword">nullable</span> <span class="built_in">UIView</span> *)viewForZoomingInScrollView:(<span class="built_in">UIScrollView</span> *)scrollView;</div><div class="line"><span class="comment">// 当缩放滚动视图的内容即将展开时调用</span></div><div class="line">- (<span class="keyword">void</span>)scrollViewWillBeginZooming:(<span class="built_in">UIScrollView</span> *)scrollView withView:(<span class="keyword">nullable</span> <span class="built_in">UIView</span> *)view <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">3</span>_2);</div><div class="line"><span class="comment">// 滚动视图的缩放完成</span></div><div class="line">- (<span class="keyword">void</span>)scrollViewDidEndZooming:(<span class="built_in">UIScrollView</span> *)scrollView withView:(<span class="keyword">nullable</span> <span class="built_in">UIView</span> *)view atScale:(<span class="built_in">CGFloat</span>)scale;</div><div class="line"><span class="comment">// 询问是否将要返回到视图顶部时调用</span></div><div class="line">- (<span class="built_in">BOOL</span>)scrollViewShouldScrollToTop:(<span class="built_in">UIScrollView</span> *)scrollView;</div><div class="line"><span class="comment">// 返回到视图顶部时滚动动画完成后调用</span></div><div class="line">- (<span class="keyword">void</span>)scrollViewDidScrollToTop:(<span class="built_in">UIScrollView</span> *)scrollView;</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">@end</span></div></pre></td></tr></table></figure><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 滚动指示器的风格</span></div><div class="line"><span class="keyword">typedef</span> <span class="built_in">NS_ENUM</span>(<span class="built_in">NSInteger</span>, <span class="built_in">UIScrollViewIndicatorStyle</span>) &#123;</div><div class="line">    <span class="built_in">UIScrollViewIndicatorStyleDefault</span>,     <span class="comment">// 默认风格、适用任何背景</span></div><div class="line">    <span class="built_in">UIScrollViewIndicatorStyleBlack</span>,       <span class="comment">// 黑色， 适用白色背景</span></div><div class="line">    <span class="built_in">UIScrollViewIndicatorStyleWhite</span>        <span class="comment">// 白色</span></div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="comment">// 当开始拖动scroll view时，键盘的消失方式</span></div><div class="line"><span class="keyword">typedef</span> <span class="built_in">NS_ENUM</span>(<span class="built_in">NSInteger</span>, <span class="built_in">UIScrollViewKeyboardDismissMode</span>) &#123;</div><div class="line">    <span class="built_in">UIScrollViewKeyboardDismissModeNone</span>,        <span class="comment">// 无</span></div><div class="line">    <span class="built_in">UIScrollViewKeyboardDismissModeOnDrag</span>,      <span class="comment">// 拖动时，关闭键盘</span></div><div class="line">    <span class="built_in">UIScrollViewKeyboardDismissModeInteractive</span>, <span class="comment">// 随着scroll view向下滚动，键盘随着一起消失</span></div><div class="line">&#125; <span class="built_in">NS_ENUM_AVAILABLE_IOS</span>(<span class="number">7</span>_0);</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;UIScrollView的类提供支持显示的内容是大于应用程序的窗口大小。它可以使用户内滚动的内容，通过刷卡手势，和捏的手势放大和部分内容。&lt;/p&gt;
    
    </summary>
    
      <category term="iOS" scheme="https://wynter.wang/categories/iOS/"/>
    
    
      <category term="API" scheme="https://wynter.wang/tags/API/"/>
    
      <category term="iOS" scheme="https://wynter.wang/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>Objective-C Runtime</title>
    <link href="https://wynter.wang/2017/02/08/Objective-C%20Runtime/"/>
    <id>https://wynter.wang/2017/02/08/Objective-C Runtime/</id>
    <published>2017-02-08T03:21:13.000Z</published>
    <updated>2017-02-09T03:05:50.000Z</updated>
    
    <content type="html"><![CDATA[<p>Objective-C Runtime是提供Objective-C语言动态特性的运行时的库。</p><a id="more"></a><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div><div class="line">245</div><div class="line">246</div><div class="line">247</div><div class="line">248</div><div class="line">249</div><div class="line">250</div><div class="line">251</div><div class="line">252</div><div class="line">253</div><div class="line">254</div><div class="line">255</div><div class="line">256</div><div class="line">257</div><div class="line">258</div><div class="line">259</div><div class="line">260</div><div class="line">261</div><div class="line">262</div><div class="line">263</div><div class="line">264</div><div class="line">265</div><div class="line">266</div><div class="line">267</div><div class="line">268</div><div class="line">269</div><div class="line">270</div><div class="line">271</div><div class="line">272</div><div class="line">273</div><div class="line">274</div><div class="line">275</div><div class="line">276</div><div class="line">277</div><div class="line">278</div><div class="line">279</div><div class="line">280</div><div class="line">281</div><div class="line">282</div><div class="line">283</div><div class="line">284</div><div class="line">285</div><div class="line">286</div><div class="line">287</div><div class="line">288</div><div class="line">289</div><div class="line">290</div><div class="line">291</div><div class="line">292</div><div class="line">293</div><div class="line">294</div><div class="line">295</div><div class="line">296</div><div class="line">297</div><div class="line">298</div><div class="line">299</div><div class="line">300</div><div class="line">301</div><div class="line">302</div><div class="line">303</div><div class="line">304</div><div class="line">305</div><div class="line">306</div><div class="line">307</div><div class="line">308</div><div class="line">309</div><div class="line">310</div><div class="line">311</div><div class="line">312</div><div class="line">313</div><div class="line">314</div><div class="line">315</div><div class="line">316</div><div class="line">317</div><div class="line">318</div><div class="line">319</div><div class="line">320</div><div class="line">321</div><div class="line">322</div><div class="line">323</div><div class="line">324</div><div class="line">325</div><div class="line">326</div><div class="line">327</div><div class="line">328</div><div class="line">329</div><div class="line">330</div><div class="line">331</div><div class="line">332</div><div class="line">333</div><div class="line">334</div><div class="line">335</div><div class="line">336</div><div class="line">337</div><div class="line">338</div><div class="line">339</div><div class="line">340</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/* Types */</span></div><div class="line"><span class="meta">#if !OBJC_TYPES_DEFINED</span></div><div class="line"></div><div class="line"><span class="comment">// 类方法</span></div><div class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> objc_method *Method;</div><div class="line"><span class="comment">// 实例变量</span></div><div class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> objc_ivar *Ivar;</div><div class="line"><span class="comment">// 分类</span></div><div class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> objc_category *Category;</div><div class="line"><span class="comment">// 对象声明的属性</span></div><div class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> objc_property *objc_property_t;</div><div class="line"></div><div class="line"><span class="comment">// objc_class结构体</span></div><div class="line"><span class="keyword">struct</span> objc_class &#123;</div><div class="line">    Class isa  OBJC_ISA_AVAILABILITY;</div><div class="line">    </div><div class="line"><span class="meta">#if !__OBJC2__</span></div><div class="line">    Class super_class                       OBJC2_UNAVAILABLE;  <span class="comment">// 父类</span></div><div class="line">    <span class="keyword">const</span> <span class="keyword">char</span> *name                        OBJC2_UNAVAILABLE;  <span class="comment">// 类名</span></div><div class="line">    <span class="keyword">long</span> version                            OBJC2_UNAVAILABLE;  <span class="comment">// 类的版本信息，默认为0</span></div><div class="line">    <span class="keyword">long</span> info                               OBJC2_UNAVAILABLE;  <span class="comment">// 类信息，供运行期使用的一些位标识</span></div><div class="line">    <span class="keyword">long</span> instance_size                      OBJC2_UNAVAILABLE;  <span class="comment">// 该类的实例变量大小</span></div><div class="line">    <span class="keyword">struct</span> objc_ivar_list *ivars            OBJC2_UNAVAILABLE;  <span class="comment">// 该类的成员变量链表</span></div><div class="line">    <span class="keyword">struct</span> objc_method_list **methodLists   OBJC2_UNAVAILABLE;  <span class="comment">// 方法定义的链表</span></div><div class="line">    <span class="keyword">struct</span> objc_cache *cache                OBJC2_UNAVAILABLE;  <span class="comment">// 方法缓存</span></div><div class="line">    <span class="keyword">struct</span> objc_protocol_list *protocols    OBJC2_UNAVAILABLE;  <span class="comment">// 协议链表</span></div><div class="line"><span class="meta">#endif</span></div><div class="line">    </div><div class="line">&#125; OBJC2_UNAVAILABLE;</div><div class="line"></div><div class="line"><span class="meta">#endif</span></div><div class="line"></div><div class="line"><span class="meta">#ifdef __OBJC__</span></div><div class="line"><span class="class"><span class="keyword">@class</span> <span class="title">Protocol</span>;</span></div><div class="line"><span class="meta">#else</span></div><div class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> objc_object Protocol;</div><div class="line"><span class="meta">#endif</span></div><div class="line"></div><div class="line"><span class="comment">// 定义方法</span></div><div class="line"><span class="keyword">struct</span> objc_method_description &#123;</div><div class="line">    SEL name;               <span class="comment">// 方法的名称</span></div><div class="line">    <span class="keyword">char</span> *types;            <span class="comment">// 方法的参数类型</span></div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="comment">// 定义属性</span></div><div class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> &#123;</div><div class="line">    <span class="keyword">const</span> <span class="keyword">char</span> *name;           <span class="comment">// 属性名称</span></div><div class="line">    <span class="keyword">const</span> <span class="keyword">char</span> *value;          <span class="comment">// 属性值</span></div><div class="line">&#125; objc_property_attribute_t;</div><div class="line"></div><div class="line"><span class="comment">// 返回指定对象的一个副本</span></div><div class="line">OBJC_EXPORT <span class="keyword">id</span> object_copy(<span class="keyword">id</span> obj, size_t size);</div><div class="line"><span class="comment">// 释放指定对象内存 返回nil</span></div><div class="line">OBJC_EXPORT <span class="keyword">id</span> object_dispose(<span class="keyword">id</span> obj);</div><div class="line"><span class="comment">// 返回对象的类</span></div><div class="line">OBJC_EXPORT Class object_getClass(<span class="keyword">id</span> obj);</div><div class="line"><span class="comment">// 设置对象的类</span></div><div class="line">OBJC_EXPORT Class object_setClass(<span class="keyword">id</span> obj, Class cls);</div><div class="line"><span class="comment">// 是否是类对象</span></div><div class="line">OBJC_EXPORT <span class="built_in">BOOL</span> object_isClass(<span class="keyword">id</span> obj);</div><div class="line"><span class="comment">// 返回给定对象的类名</span></div><div class="line">OBJC_EXPORT <span class="keyword">const</span> <span class="keyword">char</span> *object_getClassName(<span class="keyword">id</span> obj);</div><div class="line"><span class="comment">// 返回指向给定对象分配的任何额外字节的指针</span></div><div class="line">OBJC_EXPORT <span class="keyword">void</span> *object_getIndexedIvars(<span class="keyword">id</span> obj);</div><div class="line"><span class="comment">// 返回对象中实例变量的值</span></div><div class="line">OBJC_EXPORT <span class="keyword">id</span> object_getIvar(<span class="keyword">id</span> obj, Ivar ivar);</div><div class="line"><span class="comment">// 设置对象中实例变量的值</span></div><div class="line">OBJC_EXPORT <span class="keyword">void</span> object_setIvar(<span class="keyword">id</span> obj, Ivar ivar, <span class="keyword">id</span> value);</div><div class="line"><span class="comment">// 在对象中设置实例变量的值 iOS 10 AVAILABLE</span></div><div class="line">OBJC_EXPORT <span class="keyword">void</span> object_setIvarWithStrongDefault(<span class="keyword">id</span> obj, Ivar ivar, <span class="keyword">id</span> value);</div><div class="line"><span class="comment">// 修改类实例的实例变量的值</span></div><div class="line">OBJC_EXPORT Ivar object_setInstanceVariable(<span class="keyword">id</span> obj, <span class="keyword">const</span> <span class="keyword">char</span> *name, <span class="keyword">void</span> *value);</div><div class="line"><span class="comment">// 更改一个实例类中实例变量的值 iOS 10 AVAILABLE</span></div><div class="line">OBJC_EXPORT Ivar object_setInstanceVariableWithStrongDefault(<span class="keyword">id</span> obj, <span class="keyword">const</span> <span class="keyword">char</span> *name, <span class="keyword">void</span> *value);</div><div class="line"><span class="comment">// 返回对象实例变量的值</span></div><div class="line">OBJC_EXPORT Ivar object_getInstanceVariable(<span class="keyword">id</span> obj, <span class="keyword">const</span> <span class="keyword">char</span> *name, <span class="keyword">void</span> **outValue);</div><div class="line"><span class="comment">// 返回指定的类</span></div><div class="line">OBJC_EXPORT Class objc_getClass(<span class="keyword">const</span> <span class="keyword">char</span> *name);</div><div class="line"><span class="comment">// 返回指定的元类</span></div><div class="line">OBJC_EXPORT Class objc_getMetaClass(<span class="keyword">const</span> <span class="keyword">char</span> *name);</div><div class="line"><span class="comment">// 返回指定的类</span></div><div class="line">OBJC_EXPORT Class objc_lookUpClass(<span class="keyword">const</span> <span class="keyword">char</span> *name);</div><div class="line"><span class="comment">// 返回指定的类</span></div><div class="line">OBJC_EXPORT Class objc_getRequiredClass(<span class="keyword">const</span> <span class="keyword">char</span> *name);</div><div class="line"><span class="comment">// 返回已注册的类定义的列表</span></div><div class="line">OBJC_EXPORT <span class="keyword">int</span> objc_getClassList(Class *buffer, <span class="keyword">int</span> bufferCount);</div><div class="line"><span class="comment">// 创建并返回一个指向所有已注册类的指针列表</span></div><div class="line">OBJC_EXPORT Class *objc_copyClassList(<span class="keyword">unsigned</span> <span class="keyword">int</span> *outCount);</div><div class="line"><span class="comment">// 返回类的类名</span></div><div class="line">OBJC_EXPORT <span class="keyword">const</span> <span class="keyword">char</span> *class_getName(Class cls);</div><div class="line"><span class="comment">// 是否是元类</span></div><div class="line">OBJC_EXPORT <span class="built_in">BOOL</span> class_isMetaClass(Class cls);</div><div class="line"><span class="comment">// 返回类的父类</span></div><div class="line">OBJC_EXPORT Class class_getSuperclass(Class cls);</div><div class="line"><span class="comment">// 给类指定一个父类</span></div><div class="line">OBJC_EXPORT Class class_setSuperclass(Class cls, Class newSuper);</div><div class="line"><span class="comment">// 返回类版本号</span></div><div class="line">OBJC_EXPORT <span class="keyword">int</span> class_getVersion(Class cls);</div><div class="line"><span class="comment">// 设置类版本号</span></div><div class="line">OBJC_EXPORT <span class="keyword">void</span> class_setVersion(Class cls, <span class="keyword">int</span> version);</div><div class="line"><span class="comment">// 返回实例类的大小</span></div><div class="line">OBJC_EXPORT size_t class_getInstanceSize(Class cls);</div><div class="line"><span class="comment">// 返回类中指定名称实例成员变量的信息</span></div><div class="line">OBJC_EXPORT Ivar class_getInstanceVariable(Class cls, <span class="keyword">const</span> <span class="keyword">char</span> *name);</div><div class="line"><span class="comment">// 返回类成员变量的信息</span></div><div class="line">OBJC_EXPORT Ivar class_getClassVariable(Class cls, <span class="keyword">const</span> <span class="keyword">char</span> *name);</div><div class="line"><span class="comment">// 返回整个成员变量列表</span></div><div class="line">OBJC_EXPORT Ivar *class_copyIvarList(Class cls, <span class="keyword">unsigned</span> <span class="keyword">int</span> *outCount);</div><div class="line"><span class="comment">// 返回实例方法</span></div><div class="line">OBJC_EXPORT Method class_getInstanceMethod(Class cls, SEL name);</div><div class="line"><span class="comment">// 返回类方法</span></div><div class="line">OBJC_EXPORT Method class_getClassMethod(Class cls, SEL name);</div><div class="line"><span class="comment">// 返回类方法实现的指针</span></div><div class="line">OBJC_EXPORT IMP class_getMethodImplementation(Class cls, SEL name);</div><div class="line"><span class="comment">// 返回类方法实现的指针</span></div><div class="line">OBJC_EXPORT IMP class_getMethodImplementation_stret(Class cls, SEL name);</div><div class="line"><span class="comment">// 类实例是否响应指定的selector</span></div><div class="line">OBJC_EXPORT <span class="built_in">BOOL</span> class_respondsToSelector(Class cls, SEL sel);</div><div class="line"><span class="comment">// 返回所有方法的数组</span></div><div class="line">OBJC_EXPORT Method *class_copyMethodList(Class cls, <span class="keyword">unsigned</span> <span class="keyword">int</span> *outCount);</div><div class="line"><span class="comment">// 返回类是否实现指定的协议</span></div><div class="line">OBJC_EXPORT <span class="built_in">BOOL</span> class_conformsToProtocol(Class cls, Protocol *protocol);</div><div class="line"><span class="comment">// 返回类实现的协议列表</span></div><div class="line">OBJC_EXPORT Protocol * __<span class="keyword">unsafe_unretained</span></div><div class="line">*class_copyProtocolList(Class cls, <span class="keyword">unsigned</span> <span class="keyword">int</span> *outCount);</div><div class="line"><span class="comment">// 返回指定的属性</span></div><div class="line">OBJC_EXPORT objc_property_t class_getProperty(Class cls, <span class="keyword">const</span> <span class="keyword">char</span> *name);</div><div class="line"><span class="comment">// 返回属性列表</span></div><div class="line">OBJC_EXPORT objc_property_t *class_copyPropertyList(Class cls, <span class="keyword">unsigned</span> <span class="keyword">int</span> *outCount);</div><div class="line"><span class="comment">// 返回指定变量布局</span></div><div class="line">OBJC_EXPORT <span class="keyword">const</span> uint8_t *class_getIvarLayout(Class cls);</div><div class="line"><span class="comment">// 返回指定弱引用的变量布局</span></div><div class="line">OBJC_EXPORT <span class="keyword">const</span> uint8_t *class_getWeakIvarLayout(Class cls);</div><div class="line"><span class="comment">// 添加方法 如果返回YES则添加成功</span></div><div class="line">OBJC_EXPORT <span class="built_in">BOOL</span> class_addMethod(Class cls, SEL name, IMP imp, <span class="keyword">const</span> <span class="keyword">char</span> *types);</div><div class="line"><span class="comment">// 替代方法的实现</span></div><div class="line">OBJC_EXPORT IMP class_replaceMethod(Class cls, SEL name, IMP imp, <span class="keyword">const</span> <span class="keyword">char</span> *types);</div><div class="line"><span class="comment">// 添加变量</span></div><div class="line">OBJC_EXPORT <span class="built_in">BOOL</span> class_addIvar(Class cls, <span class="keyword">const</span> <span class="keyword">char</span> *name, size_t size,uint8_t alignment, <span class="keyword">const</span> <span class="keyword">char</span> *types);</div><div class="line"><span class="comment">// 添加协议</span></div><div class="line">OBJC_EXPORT <span class="built_in">BOOL</span> class_addProtocol(Class cls, Protocol *protocol);</div><div class="line"><span class="comment">// 添加属性</span></div><div class="line">OBJC_EXPORT <span class="built_in">BOOL</span> class_addProperty(Class cls, <span class="keyword">const</span> <span class="keyword">char</span> *name, <span class="keyword">const</span> objc_property_attribute_t *attributes, <span class="keyword">unsigned</span> <span class="keyword">int</span> attributeCount);</div><div class="line"><span class="comment">// 替换属性</span></div><div class="line">OBJC_EXPORT <span class="keyword">void</span> class_replaceProperty(Class cls, <span class="keyword">const</span> <span class="keyword">char</span> *name, <span class="keyword">const</span> objc_property_attribute_t *attributes, <span class="keyword">unsigned</span> <span class="keyword">int</span> attributeCount);</div><div class="line"><span class="comment">// 设置变量布局</span></div><div class="line">OBJC_EXPORT <span class="keyword">void</span> class_setIvarLayout(Class cls, <span class="keyword">const</span> uint8_t *layout);</div><div class="line"><span class="comment">// 设置弱属性的变量布局</span></div><div class="line">OBJC_EXPORT <span class="keyword">void</span> class_setWeakIvarLayout(Class cls, <span class="keyword">const</span> uint8_t *layout);</div><div class="line"><span class="comment">// 通过CoreFoundation's自由连接。不能自己调用此方法</span></div><div class="line">OBJC_EXPORT Class objc_getFutureClass(<span class="keyword">const</span> <span class="keyword">char</span> *name);</div><div class="line"><span class="comment">// 创建类实例</span></div><div class="line">OBJC_EXPORT <span class="keyword">id</span> class_createInstance(Class cls, size_t extraBytes);</div><div class="line"><span class="comment">// 在指定位置创建类实例</span></div><div class="line">OBJC_EXPORT <span class="keyword">id</span> objc_constructInstance(Class cls, <span class="keyword">void</span> *bytes);</div><div class="line"><span class="comment">// 销毁类实例</span></div><div class="line">OBJC_EXPORT <span class="keyword">void</span> *objc_destructInstance(<span class="keyword">id</span> obj);</div><div class="line"><span class="comment">// 创建新的类</span></div><div class="line">OBJC_EXPORT Class objc_allocateClassPair(Class superclass, <span class="keyword">const</span> <span class="keyword">char</span> *name, size_t extraBytes);</div><div class="line"><span class="comment">// 注册创建的类</span></div><div class="line">OBJC_EXPORT <span class="keyword">void</span> objc_registerClassPair(Class cls);</div><div class="line"><span class="comment">// 用于KVO观察者模式。 不能自己调用此方法</span></div><div class="line">OBJC_EXPORT Class objc_duplicateClass(Class original, <span class="keyword">const</span> <span class="keyword">char</span> *name, size_t extraBytes);</div><div class="line"><span class="comment">// 销毁一个类及其相关联的类</span></div><div class="line">OBJC_EXPORT <span class="keyword">void</span> objc_disposeClassPair(Class cls);</div><div class="line"><span class="comment">// 返回方法的名称</span></div><div class="line">OBJC_EXPORT SEL method_getName(Method m);</div><div class="line"><span class="comment">// 返回一个方法指针</span></div><div class="line">OBJC_EXPORT IMP method_getImplementation(Method m);</div><div class="line"><span class="comment">// 返回描述方法的字符串</span></div><div class="line">OBJC_EXPORT <span class="keyword">const</span> <span class="keyword">char</span> *method_getTypeEncoding(Method m);</div><div class="line"><span class="comment">// 返回方法接收参数的个数</span></div><div class="line">OBJC_EXPORT <span class="keyword">unsigned</span> <span class="keyword">int</span> method_getNumberOfArguments(Method m);</div><div class="line"><span class="comment">// 返回描述方法返回类型的字符串</span></div><div class="line">OBJC_EXPORT <span class="keyword">char</span> *method_copyReturnType(Method m);</div><div class="line"><span class="comment">// 返回描述方法单个参数类型的字符串</span></div><div class="line">OBJC_EXPORT <span class="keyword">char</span> *method_copyArgumentType(Method m, <span class="keyword">unsigned</span> <span class="keyword">int</span> index);</div><div class="line"><span class="comment">// 返回一个描述方法返回类型</span></div><div class="line">OBJC_EXPORT <span class="keyword">void</span> method_getReturnType(Method m, <span class="keyword">char</span> *dst, size_t dst_len);</div><div class="line"><span class="comment">// 返回描述方法单个参数类型</span></div><div class="line">OBJC_EXPORT <span class="keyword">void</span> method_getArgumentType(Method m, <span class="keyword">unsigned</span> <span class="keyword">int</span> index, <span class="keyword">char</span> *dst, size_t dst_len);</div><div class="line"><span class="comment">// 返回指定方法的结构描述</span></div><div class="line">OBJC_EXPORT <span class="keyword">struct</span> objc_method_description *method_getDescription(Method m);</div><div class="line"><span class="comment">// 设置方法的指针地址</span></div><div class="line">OBJC_EXPORT IMP method_setImplementation(Method m, IMP imp);</div><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * 交换两个方法指针地址</span></div><div class="line"><span class="comment"> * @note 交换原理如下:</span></div><div class="line"><span class="comment"> *  \code</span></div><div class="line"><span class="comment"> *  IMP imp1 = method_getImplementation(m1);</span></div><div class="line"><span class="comment"> *  IMP imp2 = method_getImplementation(m2);</span></div><div class="line"><span class="comment"> *  method_setImplementation(m1, imp2);</span></div><div class="line"><span class="comment"> *  method_setImplementation(m2, imp1);</span></div><div class="line"><span class="comment"> *  \endcode</span></div><div class="line"><span class="comment"> */</span></div><div class="line">OBJC_EXPORT <span class="keyword">void</span> method_exchangeImplementations(Method m1, Method m2);</div><div class="line"><span class="comment">// 返回实例变量的名称</span></div><div class="line">OBJC_EXPORT <span class="keyword">const</span> <span class="keyword">char</span> *ivar_getName(Ivar v);</div><div class="line"><span class="comment">// 返回实例变量类型的字符串</span></div><div class="line">OBJC_EXPORT <span class="keyword">const</span> <span class="keyword">char</span> *ivar_getTypeEncoding(Ivar v);</div><div class="line"><span class="comment">// 返回实例变量的偏移量</span></div><div class="line">OBJC_EXPORT ptrdiff_t ivar_getOffset(Ivar v);</div><div class="line"><span class="comment">// 返回</span></div><div class="line">OBJC_EXPORT <span class="keyword">const</span> <span class="keyword">char</span> *property_getName(objc_property_t property);</div><div class="line"><span class="comment">// 返回属性的属性字符串</span></div><div class="line">OBJC_EXPORT <span class="keyword">const</span> <span class="keyword">char</span> *property_getAttributes(objc_property_t property);</div><div class="line"><span class="comment">// 返回属性的属性数组</span></div><div class="line">OBJC_EXPORT objc_property_attribute_t *property_copyAttributeList(objc_property_t property, <span class="keyword">unsigned</span> <span class="keyword">int</span> *outCount);</div><div class="line"><span class="comment">// 返回指定属性名称的属性的值</span></div><div class="line">OBJC_EXPORT <span class="keyword">char</span> *property_copyAttributeValue(objc_property_t property, <span class="keyword">const</span> <span class="keyword">char</span> *attributeName);</div><div class="line"><span class="comment">// 返回协议的名称</span></div><div class="line">OBJC_EXPORT Protocol *objc_getProtocol(<span class="keyword">const</span> <span class="keyword">char</span> *name);</div><div class="line"><span class="comment">// 返回runtime已知的所有协议的数组</span></div><div class="line">OBJC_EXPORT Protocol * __<span class="keyword">unsafe_unretained</span> *objc_copyProtocolList(<span class="keyword">unsigned</span> <span class="keyword">int</span> *outCount);</div><div class="line"><span class="comment">// 判断一个协议是否遵循了另一个协议</span></div><div class="line">OBJC_EXPORT <span class="built_in">BOOL</span> protocol_conformsToProtocol(Protocol *proto, Protocol *other);</div><div class="line"><span class="comment">// 判断两个协议是否相等</span></div><div class="line">OBJC_EXPORT <span class="built_in">BOOL</span> protocol_isEqual(Protocol *proto, Protocol *other);</div><div class="line"><span class="comment">// 返回协议的名称</span></div><div class="line">OBJC_EXPORT <span class="keyword">const</span> <span class="keyword">char</span> *protocol_getName(Protocol *p);</div><div class="line"><span class="comment">// 返回执行协议指定方法结构的描述</span></div><div class="line">OBJC_EXPORT <span class="keyword">struct</span> objc_method_description protocol_getMethodDescription(Protocol *p, SEL aSel, <span class="built_in">BOOL</span> isRequiredMethod, <span class="built_in">BOOL</span> isInstanceMethod);</div><div class="line"><span class="comment">// 返回满足指定协议方法描述的数组</span></div><div class="line">OBJC_EXPORT <span class="keyword">struct</span> objc_method_description *protocol_copyMethodDescriptionList(Protocol *p, <span class="built_in">BOOL</span> isRequiredMethod, <span class="built_in">BOOL</span> isInstanceMethod, <span class="keyword">unsigned</span> <span class="keyword">int</span> *outCount);</div><div class="line"><span class="comment">// 返回指定协议的属性</span></div><div class="line">OBJC_EXPORT objc_property_t protocol_getProperty(Protocol *proto, <span class="keyword">const</span> <span class="keyword">char</span> *name, <span class="built_in">BOOL</span> isRequiredProperty, <span class="built_in">BOOL</span> isInstanceProperty);</div><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * 返回声明协议所需要的属性的数组.</span></div><div class="line"><span class="comment"> * @note Identical to</span></div><div class="line"><span class="comment"> * \code</span></div><div class="line"><span class="comment"> * protocol_copyPropertyList2(proto, outCount, YES, YES);</span></div><div class="line"><span class="comment"> * \endcode</span></div><div class="line"><span class="comment"> */</span></div><div class="line">OBJC_EXPORT objc_property_t *protocol_copyPropertyList(Protocol *proto, <span class="keyword">unsigned</span> <span class="keyword">int</span> *outCount);</div><div class="line">OBJC_EXPORT objc_property_t *protocol_copyPropertyList2(Protocol *proto, <span class="keyword">unsigned</span> <span class="keyword">int</span> *outCount, <span class="built_in">BOOL</span> isRequiredProperty, <span class="built_in">BOOL</span> isInstanceProperty)</div><div class="line">OBJC_AVAILABLE(<span class="number">10.12</span>, <span class="number">10.0</span>, <span class="number">10.0</span>, <span class="number">3.0</span>);</div><div class="line"><span class="comment">// 返回协议所采用的协议的数组</span></div><div class="line">OBJC_EXPORT Protocol * __<span class="keyword">unsafe_unretained</span> *protocol_copyProtocolList(Protocol *proto, <span class="keyword">unsigned</span> <span class="keyword">int</span> *outCount);</div><div class="line"><span class="comment">// 创建一个新的协议，添加到objc_registerProtocol方法中</span></div><div class="line">OBJC_EXPORT Protocol *objc_allocateProtocol(<span class="keyword">const</span> <span class="keyword">char</span> *name);</div><div class="line"><span class="comment">// 注册新协议</span></div><div class="line">OBJC_EXPORT <span class="keyword">void</span> objc_registerProtocol(Protocol *proto);</div><div class="line"><span class="comment">// 添加一个方法到协议中，此协议必须正在建设中</span></div><div class="line">OBJC_EXPORT <span class="keyword">void</span> protocol_addMethodDescription(Protocol *proto, SEL name, <span class="keyword">const</span> <span class="keyword">char</span> *types, <span class="built_in">BOOL</span> isRequiredMethod, <span class="built_in">BOOL</span> isInstanceMethod);</div><div class="line"><span class="comment">// 把已经建设的协议添加到正在建设的协议中去</span></div><div class="line">OBJC_EXPORT <span class="keyword">void</span> protocol_addProtocol(Protocol *proto, Protocol *addition);</div><div class="line"><span class="comment">// 添加一个属性到协议中去，此协议必须正在建设中</span></div><div class="line">OBJC_EXPORT <span class="keyword">void</span> protocol_addProperty(Protocol *proto, <span class="keyword">const</span> <span class="keyword">char</span> *name, <span class="keyword">const</span> objc_property_attribute_t *attributes, <span class="keyword">unsigned</span> <span class="keyword">int</span> attributeCount, <span class="built_in">BOOL</span> isRequiredProperty, <span class="built_in">BOOL</span> isInstanceProperty);</div><div class="line"><span class="comment">// 返回所有加载在Objective-C框架和动态库上的名称</span></div><div class="line">OBJC_EXPORT <span class="keyword">const</span> <span class="keyword">char</span> **objc_copyImageNames(<span class="keyword">unsigned</span> <span class="keyword">int</span> *outCount);</div><div class="line"><span class="comment">// 返回一个来自类动态库的名称</span></div><div class="line">OBJC_EXPORT <span class="keyword">const</span> <span class="keyword">char</span> *class_getImageName(Class cls);</div><div class="line"><span class="comment">// 返回库中所有类的名称</span></div><div class="line">OBJC_EXPORT <span class="keyword">const</span> <span class="keyword">char</span> **objc_copyClassNamesForImage(<span class="keyword">const</span> <span class="keyword">char</span> *image,<span class="keyword">unsigned</span> <span class="keyword">int</span> *outCount);</div><div class="line"><span class="comment">// 返回指定sel的方法的名称</span></div><div class="line">OBJC_EXPORT <span class="keyword">const</span> <span class="keyword">char</span> *sel_getName(SEL sel);</div><div class="line"><span class="comment">// 注册一个Objective-C运行时系统的方法名称</span></div><div class="line">OBJC_EXPORT SEL sel_getUid(<span class="keyword">const</span> <span class="keyword">char</span> *str);</div><div class="line"><span class="comment">// 注册一个sel方法，并映方法名称到sel中并返回sel值</span></div><div class="line">OBJC_EXPORT SEL sel_registerName(<span class="keyword">const</span> <span class="keyword">char</span> *str);</div><div class="line"><span class="comment">// 判断两个sel是否相同</span></div><div class="line">OBJC_EXPORT <span class="built_in">BOOL</span> sel_isEqual(SEL lhs, SEL rhs);</div><div class="line"><span class="comment">// 当发现突变的foreach迭代过程中时插入编译器</span></div><div class="line">OBJC_EXPORT <span class="keyword">void</span> objc_enumerationMutation(<span class="keyword">id</span> obj);</div><div class="line"><span class="comment">// 设置当前突变的处理程序</span></div><div class="line">OBJC_EXPORT <span class="keyword">void</span> objc_setEnumerationMutationHandler(<span class="keyword">void</span> (*handler)(<span class="keyword">id</span>));</div><div class="line"><span class="comment">// 设置函数调用objc_msgForward</span></div><div class="line">OBJC_EXPORT <span class="keyword">void</span> objc_setForwardHandler(<span class="keyword">void</span> *fwd, <span class="keyword">void</span> *fwd_stret);</div><div class="line"><span class="comment">// 创建一个当调用此方法时调用指定块的函数指针</span></div><div class="line">OBJC_EXPORT IMP imp_implementationWithBlock(<span class="keyword">id</span> block);</div><div class="line"><span class="comment">// 返回一个使用imp_implementationWithBlock创建的与块相关的函数指针</span></div><div class="line">OBJC_EXPORT <span class="keyword">id</span> imp_getBlock(IMP anImp);</div><div class="line"><span class="comment">// 移除与函数指针相关联的块</span></div><div class="line">OBJC_EXPORT <span class="built_in">BOOL</span> imp_removeBlock(IMP anImp);</div><div class="line"><span class="comment">// 加载弱指针引用的对象并返回它</span></div><div class="line">OBJC_EXPORT <span class="keyword">id</span> objc_loadWeak(<span class="keyword">id</span> *location);</div><div class="line"><span class="comment">// 存储_weak变量的新值</span></div><div class="line">OBJC_EXPORT <span class="keyword">id</span> objc_storeWeak(<span class="keyword">id</span> *location, <span class="keyword">id</span> obj);</div><div class="line"><span class="comment">// 设置关联</span></div><div class="line">OBJC_EXPORT <span class="keyword">void</span> objc_setAssociatedObject(<span class="keyword">id</span> object, <span class="keyword">const</span> <span class="keyword">void</span> *key, <span class="keyword">id</span> value, objc_AssociationPolicy policy);</div><div class="line"><span class="comment">// 获取关联值</span></div><div class="line">OBJC_EXPORT <span class="keyword">id</span> objc_getAssociatedObject(<span class="keyword">id</span> object, <span class="keyword">const</span> <span class="keyword">void</span> *key);</div><div class="line"><span class="comment">// 移除关联对象</span></div><div class="line">OBJC_EXPORT <span class="keyword">void</span> objc_removeAssociatedObjects(<span class="keyword">id</span> object);</div><div class="line"><span class="comment">// 发送一个具有简单返回值的消息到一个实例类上</span></div><div class="line">OBJC_EXPORT <span class="keyword">void</span> objc_msgSend(<span class="keyword">void</span> <span class="comment">/* id self, SEL op, ... */</span> );</div><div class="line"><span class="comment">// 发送一个具有结构返回值的消息到一个实例类上</span></div><div class="line">OBJC_EXPORT <span class="keyword">void</span> objc_msgSendSuper(<span class="keyword">void</span> <span class="comment">/* struct objc_super *super, SEL op, ... */</span> );</div><div class="line"><span class="comment">// 发送一个具有返回数据结构值的消息到一个实例类上</span></div><div class="line">OBJC_EXPORT <span class="keyword">void</span> objc_msgSend_stret(<span class="keyword">void</span> <span class="comment">/* id self, SEL op, ... */</span> );</div><div class="line"><span class="comment">// 发送一个具有返回数据结构值的消息到一个实例父类上</span></div><div class="line">OBJC_EXPORT <span class="keyword">void</span> objc_msgSendSuper_stret(<span class="keyword">void</span> <span class="comment">/* struct objc_super *super, SEL op, ... */</span> );</div><div class="line"><span class="comment">// 发送一个具有返回浮点类型值的消息到一个实例类上</span></div><div class="line">OBJC_EXPORT <span class="keyword">void</span> objc_msgSend_fpret(<span class="keyword">void</span> <span class="comment">/* id self, SEL op, ... */</span> );</div><div class="line">OBJC_EXPORT <span class="keyword">void</span> objc_msgSend_fp2ret(<span class="keyword">void</span> <span class="comment">/* id self, SEL op, ... */</span> );</div><div class="line"><span class="comment">// 调用指定方法的实现</span></div><div class="line">OBJC_EXPORT <span class="keyword">void</span> method_invoke(<span class="keyword">void</span> <span class="comment">/* id receiver, Method m, ... */</span> );</div><div class="line"><span class="comment">// 调用返回数据结构的指定方法的实现</span></div><div class="line">OBJC_EXPORT <span class="keyword">void</span> method_invoke_stret(<span class="keyword">void</span> <span class="comment">/* id receiver, Method m, ... */</span> );</div><div class="line"></div><div class="line"><span class="comment">// 关联策略</span></div><div class="line"><span class="keyword">typedef</span> OBJC_ENUM(uintptr_t, objc_AssociationPolicy) &#123;</div><div class="line">    OBJC_ASSOCIATION_ASSIGN = <span class="number">0</span>,           <span class="comment">// 表示弱引用关联，非线程安全,通常是数据类型</span></div><div class="line">    OBJC_ASSOCIATION_RETAIN_NONATOMIC = <span class="number">1</span>, <span class="comment">// 表示强（strong）引用关联对象，非线程安全</span></div><div class="line">    OBJC_ASSOCIATION_COPY_NONATOMIC = <span class="number">3</span>,   <span class="comment">// 表示关联对象copy，非线程安全</span></div><div class="line">    OBJC_ASSOCIATION_RETAIN = <span class="number">01401</span>,       <span class="comment">// 表示强（strong）引用关联对象，是线程安全的</span></div><div class="line">    OBJC_ASSOCIATION_COPY = <span class="number">01403</span>          <span class="comment">// 表示关联对象copy，是线程安全的</span></div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="comment">// 编码类型</span></div><div class="line"><span class="meta">#define _C_ID       '@' // 代表对象类型</span></div><div class="line"><span class="meta">#define _C_CLASS    '#' // 代表类对象 (Class)</span></div><div class="line"><span class="meta">#define _C_SEL      ':' // 代表方法selector (SEL)</span></div><div class="line"><span class="meta">#define _C_CHR      'c' // 代表char类型</span></div><div class="line"><span class="meta">#define _C_UCHR     'C' // 代表unsigned char类型</span></div><div class="line"><span class="meta">#define _C_SHT      's' // 代表short类型</span></div><div class="line"><span class="meta">#define _C_USHT     'S' // 代表unsigned short类型</span></div><div class="line"><span class="meta">#define _C_INT      'i' // 代表int类型</span></div><div class="line"><span class="meta">#define _C_UINT     'I' // 代表unsigned int类型</span></div><div class="line"><span class="meta">#define _C_LNG      'l' // 代表long类型，在64位处理器上也是按照32位处理</span></div><div class="line"><span class="meta">#define _C_ULNG     'L' // 代表unsigned long类型</span></div><div class="line"><span class="meta">#define _C_LNG_LNG  'q' // 代表long long类型</span></div><div class="line"><span class="meta">#define _C_ULNG_LNG 'Q' // 代表unsigned long long类型</span></div><div class="line"><span class="meta">#define _C_FLT      'f' // 代表float类型</span></div><div class="line"><span class="meta">#define _C_DBL      'd' // 代表double类型</span></div><div class="line"><span class="meta">#define _C_BFLD     'b' //</span></div><div class="line"><span class="meta">#define _C_BOOL     'B' // 代表C++中的bool或者C99中的_Bool</span></div><div class="line"><span class="meta">#define _C_VOID     'v' // 代表void类型</span></div><div class="line"><span class="meta">#define _C_UNDEF    '?' // 代表未知类型</span></div><div class="line"><span class="meta">#define _C_PTR      '^' // 代表指针类型</span></div><div class="line"><span class="meta">#define _C_CHARPTR  '*' // 代表字符串类型 (char *)</span></div><div class="line"><span class="meta">#define _C_ATOM     '%' //</span></div><div class="line"><span class="meta">#define _C_ARY_B    '[' // 代表array</span></div><div class="line"><span class="meta">#define _C_ARY_E    ']'</span></div><div class="line"><span class="meta">#define _C_UNION_B  '(' // 代表UNION</span></div><div class="line"><span class="meta">#define _C_UNION_E  ')'</span></div><div class="line"><span class="meta">#define _C_STRUCT_B '&#123;' // 代表结构体</span></div><div class="line"><span class="meta">#define _C_STRUCT_E '&#125;'</span></div><div class="line"><span class="meta">#define _C_VECTOR   '!' // 代表矢量类型</span></div><div class="line"><span class="meta">#define _C_CONST    'r' // 代表常量类型</span></div></pre></td></tr></table></figure><p>例子1 Runtime<br><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 获取属性列表&amp;&amp;获取属性名称</span></div><div class="line"><span class="keyword">unsigned</span> <span class="keyword">int</span> count;</div><div class="line">objc_property_t *propertyList = class_copyPropertyList([<span class="keyword">self</span> <span class="keyword">class</span>], &amp;count);</div><div class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; count ; i++) &#123;</div><div class="line">    <span class="keyword">const</span> <span class="keyword">char</span> *propertyName = property_getName(propertyList[i]);</div><div class="line">    <span class="built_in">NSString</span> *str = [<span class="built_in">NSString</span> stringWithUTF8String:propertyName];</div><div class="line">    <span class="built_in">NSLog</span>(<span class="string">@"property_getName==%@"</span>,str);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// 获取方法列表&amp;&amp;获取方法名称</span></div><div class="line">Method *methodList = class_copyMethodList([<span class="keyword">self</span> <span class="keyword">class</span>], &amp;count);</div><div class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; count; i++) &#123;</div><div class="line">    Method method = methodList[i];</div><div class="line">    <span class="comment">//获取方法的参数列表</span></div><div class="line">    <span class="keyword">int</span> arguments = method_getNumberOfArguments(method);</div><div class="line">    <span class="built_in">NSLog</span>(<span class="string">@"method_getNumberOfArguments===%d"</span>,arguments);</div><div class="line">    <span class="built_in">NSLog</span>(<span class="string">@"method_getName===%@"</span>,<span class="built_in">NSStringFromSelector</span>(method_getName(method)));</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// 获取类成员变量列表&amp;&amp;获取成员变量名称</span></div><div class="line">Ivar *ivarList = class_copyIvarList([<span class="keyword">self</span> <span class="keyword">class</span>], &amp;count);</div><div class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; count; i++) &#123;</div><div class="line">    Ivar ivar = ivarList[i];</div><div class="line">    <span class="built_in">NSString</span> *ivarName = [<span class="built_in">NSString</span> stringWithUTF8String:ivar_getName(ivar)];</div><div class="line">    <span class="built_in">NSLog</span>(<span class="string">@"ivar_getName===%@"</span>,ivarName);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// 获取类协议列表&amp;&amp;获取协议名称</span></div><div class="line">__<span class="keyword">unsafe_unretained</span> Protocol **protocolList = class_copyProtocolList([<span class="keyword">self</span> <span class="keyword">class</span>], &amp;count);</div><div class="line"><span class="keyword">for</span> (<span class="keyword">unsigned</span> <span class="keyword">int</span> i = <span class="number">0</span>; i &lt; count; i++) &#123;</div><div class="line">    Protocol *protocol = protocolList[i];</div><div class="line">    <span class="built_in">NSString</span> *protocolStr = [<span class="built_in">NSString</span> stringWithUTF8String:protocol_getName(protocol)];</div><div class="line">    <span class="built_in">NSLog</span>(<span class="string">@"protocol_getName===%@"</span>,protocolStr);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// 是不是元类</span></div><div class="line"><span class="built_in">BOOL</span> isMetaClass = class_isMetaClass(<span class="keyword">self</span>.class);</div><div class="line"><span class="built_in">NSLog</span>(<span class="string">@"ViewController is the meta class? %d"</span>, isMetaClass);</div><div class="line"></div><div class="line"><span class="comment">// 是不是类对象</span></div><div class="line">ViewController *obj = [ViewController new];</div><div class="line"><span class="built_in">BOOL</span> isClass = object_isClass(obj);</div><div class="line"><span class="built_in">NSLog</span>(<span class="string">@"ViewController is the class? %d"</span>, isClass);</div><div class="line"></div><div class="line"><span class="comment">// 获取类名称</span></div><div class="line"><span class="keyword">const</span> <span class="keyword">char</span> *name = class_getName(<span class="keyword">self</span>.class);</div><div class="line"><span class="built_in">NSLog</span>(<span class="string">@"class_getName===%@"</span>,[<span class="built_in">NSString</span> stringWithCString:name encoding:<span class="built_in">NSUTF8StringEncoding</span>]);</div><div class="line"></div><div class="line"><span class="comment">// 设置关联&amp;&amp;获取关联</span></div><div class="line"><span class="keyword">static</span> <span class="keyword">char</span> *key = <span class="string">"key"</span>;</div><div class="line">objc_setAssociatedObject(<span class="keyword">self</span>, &amp;key, <span class="string">@"hello world"</span>, OBJC_ASSOCIATION_COPY_NONATOMIC);</div><div class="line"><span class="built_in">NSString</span> *associated = objc_getAssociatedObject(<span class="keyword">self</span>, &amp;key);</div><div class="line"><span class="built_in">NSLog</span>(<span class="string">@"objc_getAssociatedObject===%@"</span>,associated);</div><div class="line"></div><div class="line"><span class="comment">/*----------------------Method Swizzling------------------------*/</span></div><div class="line"><span class="comment">// 获取实例方法</span></div><div class="line">Method originalMethod = class_getInstanceMethod([<span class="keyword">self</span> <span class="keyword">class</span>], <span class="keyword">@selector</span>(original:));</div><div class="line">Method exchangeMethod = class_getInstanceMethod([<span class="keyword">self</span> <span class="keyword">class</span>], <span class="keyword">@selector</span>(exchange:));</div><div class="line"></div><div class="line"><span class="comment">// 获取方法指针</span></div><div class="line">IMP exchangeImp = method_getImplementation(exchangeMethod);</div><div class="line">IMP originalImp = method_getImplementation(originalMethod);</div><div class="line"></div><div class="line"><span class="comment">// 获取描述方法的参数类型</span></div><div class="line"><span class="keyword">const</span> <span class="keyword">char</span> *originalType = method_getTypeEncoding(originalMethod);</div><div class="line"><span class="keyword">const</span> <span class="keyword">char</span> *exchangeType = method_getTypeEncoding(exchangeMethod);</div><div class="line"></div><div class="line"><span class="comment">// 添加方法</span></div><div class="line"><span class="built_in">BOOL</span> didAddMethod = class_addMethod([<span class="keyword">self</span> <span class="keyword">class</span>],</div><div class="line">                                    <span class="keyword">@selector</span>(original:),</div><div class="line">                                    exchangeImp,</div><div class="line">                                    exchangeType);</div><div class="line"></div><div class="line"><span class="keyword">if</span> (didAddMethod) &#123;</div><div class="line">    <span class="comment">// 替换方法</span></div><div class="line">    class_replaceMethod([<span class="keyword">self</span> <span class="keyword">class</span>],</div><div class="line">                        <span class="keyword">@selector</span>(exchange:),</div><div class="line">                        originalImp,</div><div class="line">                        originalType);</div><div class="line">&#125;<span class="keyword">else</span>&#123;</div><div class="line">    <span class="comment">// Method Swizzling</span></div><div class="line">    method_exchangeImplementations(exchangeMethod, originalMethod);</div><div class="line">&#125;</div><div class="line"><span class="comment">/*----------------------Method Swizzling------------------------*/</span></div></pre></td></tr></table></figure></p><p>例子2 Runtime message<br><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 初始化 [[MsgSend1 alloc] init];</span></div><div class="line"> MsgSend1 *msg = ((MsgSend1 * (*)(<span class="keyword">id</span>,SEL))objc_msgSend)((<span class="keyword">id</span>)[MsgSend1 <span class="keyword">class</span>], <span class="keyword">@selector</span>(alloc));</div><div class="line"> msg = ((MsgSend1 * (*)(<span class="keyword">id</span>,SEL))objc_msgSend)((<span class="keyword">id</span>)msg, <span class="keyword">@selector</span>(init));</div><div class="line"> </div><div class="line"> <span class="comment">// 发送无参无返回值消息</span></div><div class="line"> ((<span class="keyword">void</span> (*)(<span class="keyword">id</span>,SEL))objc_msgSend)((<span class="keyword">id</span>)msg, <span class="keyword">@selector</span>(noArgumentsAndNoReturnValue));</div><div class="line"> </div><div class="line"> <span class="comment">// 发送有参数无返回值得消息</span></div><div class="line"> ((<span class="keyword">void</span> (*)(<span class="keyword">id</span>,SEL,<span class="built_in">NSString</span> *))objc_msgSend)((<span class="keyword">id</span>)msg, <span class="keyword">@selector</span>(hasArguments:),<span class="string">@"带参数但是无返回值"</span>);</div><div class="line"> </div><div class="line"> <span class="comment">// 带返回值不带参数消息</span></div><div class="line"> <span class="built_in">NSString</span> *retValue = ((<span class="built_in">NSString</span> * (*)(<span class="keyword">id</span>,SEL))objc_msgSend)((<span class="keyword">id</span>)msg,<span class="keyword">@selector</span>(noArgumentsButReturnValue));</div><div class="line"> <span class="built_in">NSLog</span>(<span class="string">@"%@"</span>,retValue);</div><div class="line"> </div><div class="line"> <span class="comment">// 带参数带返回值消息</span></div><div class="line"> <span class="keyword">int</span> returnValue = ((<span class="keyword">int</span> (*)(<span class="keyword">id</span>,SEL,<span class="built_in">NSString</span> *,<span class="keyword">int</span>))objc_msgSend)((<span class="keyword">id</span>)msg,<span class="keyword">@selector</span>(hasValue1:Value2:),<span class="string">@"参数"</span>,<span class="number">999</span>);</div><div class="line"> <span class="built_in">NSLog</span>(<span class="string">@"return value is %d"</span>,returnValue);</div><div class="line"> </div><div class="line"> <span class="comment">// 动态添加方法再调用  其中i代表返回类型int，@代表参数，:代表SEL</span></div><div class="line"> class_addMethod(msg.class, <span class="built_in">NSSelectorFromString</span>(<span class="string">@"cStyleFunc"</span>), (IMP)cStyleFunc,<span class="string">"i@:"</span>);</div><div class="line"> returnValue = ((<span class="keyword">int</span> (*)(<span class="keyword">id</span>,SEL,<span class="keyword">const</span> <span class="keyword">void</span> *,<span class="keyword">const</span> <span class="keyword">void</span> *))objc_msgSend)((<span class="keyword">id</span>)msg,<span class="built_in">NSSelectorFromString</span>(<span class="string">@"cStyleFunc"</span>),<span class="string">"one"</span>,<span class="string">"two"</span>);</div><div class="line"> <span class="built_in">NSLog</span>(<span class="string">@"return value is %d"</span>,returnValue);</div><div class="line"> </div><div class="line"> <span class="comment">// 带返回浮点值的消息</span></div><div class="line"> <span class="comment">//objc_msgSend</span></div><div class="line"> <span class="comment">//float returnFloatValue =  ((float (*)(id,SEL))objc_msgSend)((id)msg,@selector(returnFloatType));</span></div><div class="line"> <span class="comment">//objc_msgSend_fpret</span></div><div class="line"> <span class="keyword">float</span> returnFloatValue =  ((<span class="keyword">float</span> (*)(<span class="keyword">id</span>,SEL))objc_msgSend_fpret)((<span class="keyword">id</span>)msg,<span class="keyword">@selector</span>(returnFloatType));</div><div class="line"> <span class="built_in">NSLog</span>(<span class="string">@"return float is %f"</span>,returnFloatValue);</div><div class="line"> </div><div class="line"> <span class="comment">// 带结构体返回值的消息</span></div><div class="line"> <span class="comment">//objc_msgSend_stret</span></div><div class="line"> <span class="built_in">CGRect</span> frame = ((<span class="built_in">CGRect</span> (*)(<span class="keyword">id</span>,SEL))objc_msgSend_stret)((<span class="keyword">id</span>)<span class="keyword">self</span>,<span class="keyword">@selector</span>(returnTypeIsStruct));</div><div class="line"> <span class="built_in">NSLog</span>(<span class="string">@"return frame is %@"</span>,<span class="built_in">NSStringFromCGRect</span>(frame));</div></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Objective-C Runtime是提供Objective-C语言动态特性的运行时的库。&lt;/p&gt;
    
    </summary>
    
      <category term="iOS" scheme="https://wynter.wang/categories/iOS/"/>
    
    
      <category term="API" scheme="https://wynter.wang/tags/API/"/>
    
      <category term="iOS" scheme="https://wynter.wang/tags/iOS/"/>
    
      <category term="Runtime" scheme="https://wynter.wang/tags/Runtime/"/>
    
  </entry>
  
  <entry>
    <title>iOS-UIKit框架学习—UIAlertController</title>
    <link href="https://wynter.wang/2017/02/06/iOS-UIKit%E6%A1%86%E6%9E%B6%E5%AD%A6%E4%B9%A0%E2%80%94UIAlertController/"/>
    <id>https://wynter.wang/2017/02/06/iOS-UIKit框架学习—UIAlertController/</id>
    <published>2017-02-06T06:50:31.000Z</published>
    <updated>2017-02-06T07:10:54.000Z</updated>
    
    <content type="html"><![CDATA[<p><code>UIAlertController</code>对象向用户展示一个提示消息。这个类替换了用于显示提示 <code>UIActionSheet</code>和<code>UIAlertViewclasses</code>类。可以使用<code>presentViewController:animated:completion:</code>方法配置你想要的事件和风格。</p><a id="more"></a><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">NS_CLASS_AVAILABLE_IOS</span>(<span class="number">8</span>_0) <span class="class"><span class="keyword">@interface</span> <span class="title">UIAlertAction</span> : <span class="title">NSObject</span> &lt;<span class="title">NSCopying</span>&gt;</span></div><div class="line"></div><div class="line"><span class="comment">// 创建提示事件的标题、风格、点击事件的处理并返回提示事件</span></div><div class="line">+ (<span class="keyword">instancetype</span>)actionWithTitle:(<span class="keyword">nullable</span> <span class="built_in">NSString</span> *)title style:(<span class="built_in">UIAlertActionStyle</span>)style handler:(<span class="keyword">void</span> (^ __<span class="keyword">nullable</span>)(<span class="built_in">UIAlertAction</span> *action))handler;</div><div class="line"><span class="comment">// 标题</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nullable</span>, <span class="keyword">nonatomic</span>, <span class="keyword">readonly</span>) <span class="built_in">NSString</span> *title;</div><div class="line"><span class="comment">// 风格</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">readonly</span>) <span class="built_in">UIAlertActionStyle</span> style;</div><div class="line"><span class="comment">// 是否启用事件</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">getter</span>=isEnabled) <span class="built_in">BOOL</span> enabled;</div><div class="line"></div><div class="line"><span class="keyword">@end</span></div><div class="line"></div><div class="line"><span class="built_in">NS_CLASS_AVAILABLE_IOS</span>(<span class="number">8</span>_0) <span class="class"><span class="keyword">@interface</span> <span class="title">UIAlertController</span> : <span class="title">UIViewController</span></span></div><div class="line"><span class="comment">// 创建并返回一个用户展示提示的控制器</span></div><div class="line">+ (<span class="keyword">instancetype</span>)alertControllerWithTitle:(<span class="keyword">nullable</span> <span class="built_in">NSString</span> *)title message:(<span class="keyword">nullable</span> <span class="built_in">NSString</span> *)message preferredStyle:(<span class="built_in">UIAlertControllerStyle</span>)preferredStyle;</div><div class="line"><span class="comment">// 添加UIAlertAction到控制器中</span></div><div class="line">- (<span class="keyword">void</span>)addAction:(<span class="built_in">UIAlertAction</span> *)action;</div><div class="line"><span class="comment">// 用户可以操作的事件数组</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">readonly</span>) <span class="built_in">NSArray</span>&lt;<span class="built_in">UIAlertAction</span> *&gt; *actions;</div><div class="line"><span class="comment">// 设置首选的事件</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>, <span class="keyword">nullable</span>) <span class="built_in">UIAlertAction</span> *preferredAction <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">9</span>_0);</div><div class="line"><span class="comment">// 添加输入框</span></div><div class="line">- (<span class="keyword">void</span>)addTextFieldWithConfigurationHandler:(<span class="keyword">void</span> (^ __<span class="keyword">nullable</span>)(<span class="built_in">UITextField</span> *textField))configurationHandler;</div><div class="line"><span class="comment">// 设置输入框数组</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nullable</span>, <span class="keyword">nonatomic</span>, <span class="keyword">readonly</span>) <span class="built_in">NSArray</span>&lt;<span class="built_in">UITextField</span> *&gt; *textFields;</div><div class="line"><span class="comment">// 标题</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nullable</span>, <span class="keyword">nonatomic</span>, <span class="keyword">copy</span>) <span class="built_in">NSString</span> *title;</div><div class="line"><span class="comment">// 内容</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nullable</span>, <span class="keyword">nonatomic</span>, <span class="keyword">copy</span>) <span class="built_in">NSString</span> *message;</div><div class="line"><span class="comment">// 首选的风格</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">readonly</span>) <span class="built_in">UIAlertControllerStyle</span> preferredStyle;</div><div class="line"></div><div class="line"><span class="keyword">@end</span></div></pre></td></tr></table></figure><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 事件风格</span></div><div class="line"><span class="keyword">typedef</span> <span class="built_in">NS_ENUM</span>(<span class="built_in">NSInteger</span>, <span class="built_in">UIAlertActionStyle</span>) &#123;</div><div class="line"><span class="built_in">UIAlertActionStyleDefault</span> = <span class="number">0</span>, <span class="comment">// 默认</span></div><div class="line"><span class="built_in">UIAlertActionStyleCancel</span>, <span class="comment">// 取消</span></div><div class="line"><span class="built_in">UIAlertActionStyleDestructive</span> <span class="comment">// 红色</span></div><div class="line">&#125; <span class="built_in">NS_ENUM_AVAILABLE_IOS</span>(<span class="number">8</span>_0);</div><div class="line"></div><div class="line"><span class="comment">// 控制器风格</span></div><div class="line"><span class="keyword">typedef</span> <span class="built_in">NS_ENUM</span>(<span class="built_in">NSInteger</span>, <span class="built_in">UIAlertControllerStyle</span>) &#123;</div><div class="line"><span class="built_in">UIAlertControllerStyleActionSheet</span> = <span class="number">0</span>, <span class="comment">// ActionSheet</span></div><div class="line"><span class="built_in">UIAlertControllerStyleAlert</span> <span class="comment">// AlertView</span></div><div class="line">&#125; <span class="built_in">NS_ENUM_AVAILABLE_IOS</span>(<span class="number">8</span>_0);</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;UIAlertController&lt;/code&gt;对象向用户展示一个提示消息。这个类替换了用于显示提示 &lt;code&gt;UIActionSheet&lt;/code&gt;和&lt;code&gt;UIAlertViewclasses&lt;/code&gt;类。可以使用&lt;code&gt;presentViewController:animated:completion:&lt;/code&gt;方法配置你想要的事件和风格。&lt;/p&gt;
    
    </summary>
    
      <category term="iOS" scheme="https://wynter.wang/categories/iOS/"/>
    
    
      <category term="API" scheme="https://wynter.wang/tags/API/"/>
    
      <category term="iOS" scheme="https://wynter.wang/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>iOS-UIKit框架学习—UIAlertView</title>
    <link href="https://wynter.wang/2017/02/06/iOS-UIKit%E6%A1%86%E6%9E%B6%E5%AD%A6%E4%B9%A0%E2%80%94UIAlertView/"/>
    <id>https://wynter.wang/2017/02/06/iOS-UIKit框架学习—UIAlertView/</id>
    <published>2017-02-06T06:49:57.000Z</published>
    <updated>2017-02-06T07:10:54.000Z</updated>
    
    <content type="html"><![CDATA[<p>使用<code>UIAlertView</code>类向用户显示一条警告消息。警报视图的功能相似，但在外观上不同于一个动作表（<code>UIActionSheet</code>的一个实例）。</p><a id="more"></a><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">@protocol</span> <span class="title">UIAlertViewDelegate</span>;</span></div><div class="line"><span class="comment">// iOS 2.0 - iOS 9.0可用 使用UIAlertController顶替</span></div><div class="line"><span class="built_in">NS_CLASS_DEPRECATED_IOS</span>(<span class="number">2</span>_0, <span class="number">9</span>_0, <span class="string">"UIAlertView is deprecated. Use UIAlertController with a preferredStyle of UIAlertControllerStyleAlert instead"</span>) __TVOS_PROHIBITED</div><div class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">UIAlertView</span> : <span class="title">UIView</span></span></div><div class="line"></div><div class="line"><span class="comment">// 初始化设置标题、代理、操作按钮</span></div><div class="line">- (<span class="keyword">instancetype</span>)initWithTitle:(<span class="keyword">nullable</span> <span class="built_in">NSString</span> *)title message:(<span class="keyword">nullable</span> <span class="built_in">NSString</span> *)message delegate:(<span class="keyword">nullable</span> <span class="keyword">id</span> <span class="comment">/*&lt;UIAlertViewDelegate&gt;*/</span>)delegate cancelButtonTitle:(<span class="keyword">nullable</span> <span class="built_in">NSString</span> *)cancelButtonTitle otherButtonTitles:(<span class="keyword">nullable</span> <span class="built_in">NSString</span> *)otherButtonTitles, ... <span class="built_in">NS_REQUIRES_NIL_TERMINATION</span> <span class="built_in">NS_EXTENSION_UNAVAILABLE_IOS</span>(<span class="string">"Use UIAlertController instead."</span>);</div><div class="line"><span class="comment">// 初始化设置frame</span></div><div class="line">- (<span class="keyword">id</span>)initWithFrame:(<span class="built_in">CGRect</span>)frame <span class="built_in">NS_DESIGNATED_INITIALIZER</span>;</div><div class="line">- (<span class="keyword">nullable</span> <span class="keyword">instancetype</span>) initWithCoder:(<span class="keyword">nonnull</span> <span class="built_in">NSCoder</span> *)aDecoder <span class="built_in">NS_DESIGNATED_INITIALIZER</span>;</div><div class="line"><span class="comment">// 代理</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nullable</span>,<span class="keyword">nonatomic</span>,<span class="keyword">weak</span>) <span class="keyword">id</span> <span class="comment">/*&lt;UIAlertViewDelegate&gt;*/</span> delegate;</div><div class="line"><span class="comment">// 标题</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>,<span class="keyword">copy</span>) <span class="built_in">NSString</span> *title;</div><div class="line"><span class="comment">// 提示内容</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nullable</span>,<span class="keyword">nonatomic</span>,<span class="keyword">copy</span>) <span class="built_in">NSString</span> *message;</div><div class="line"></div><div class="line"><span class="comment">// 在提示框中添加自定义按钮</span></div><div class="line">- (<span class="built_in">NSInteger</span>)addButtonWithTitle:(<span class="keyword">nullable</span> <span class="built_in">NSString</span> *)title;</div><div class="line"><span class="comment">// 返回指定索引按钮的标题</span></div><div class="line">- (<span class="keyword">nullable</span> <span class="built_in">NSString</span> *)buttonTitleAtIndex:(<span class="built_in">NSInteger</span>)buttonIndex;</div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>,<span class="keyword">readonly</span>) <span class="built_in">NSInteger</span> numberOfButtons;</div><div class="line"><span class="comment">// 操作栏的按钮数</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>) <span class="built_in">NSInteger</span> cancelButtonIndex;</div><div class="line"><span class="comment">// 第一个更多按钮的下标</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>,<span class="keyword">readonly</span>) <span class="built_in">NSInteger</span> firstOtherButtonIndex;</div><div class="line"><span class="comment">// 接收器是否显示</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>,<span class="keyword">readonly</span>,<span class="keyword">getter</span>=isVisible) <span class="built_in">BOOL</span> visible;</div><div class="line"><span class="comment">// 显示提示框</span></div><div class="line">- (<span class="keyword">void</span>)show;</div><div class="line"><span class="comment">// 隐藏提示框</span></div><div class="line">- (<span class="keyword">void</span>)dismissWithClickedButtonIndex:(<span class="built_in">NSInteger</span>)buttonIndex animated:(<span class="built_in">BOOL</span>)animated;</div><div class="line"></div><div class="line"><span class="comment">// 提示框的风格</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>,<span class="keyword">assign</span>) <span class="built_in">UIAlertViewStyle</span> alertViewStyle <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">5</span>_0);</div><div class="line"><span class="comment">// 返回指定索引的文本框</span></div><div class="line">- (<span class="keyword">nullable</span> <span class="built_in">UITextField</span> *)textFieldAtIndex:(<span class="built_in">NSInteger</span>)textFieldIndex <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">5</span>_0);</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">@end</span></div><div class="line"></div><div class="line">__TVOS_PROHIBITED</div><div class="line"><span class="class"><span class="keyword">@protocol</span> <span class="title">UIAlertViewDelegate</span> &lt;<span class="title">NSObject</span>&gt;</span></div><div class="line"><span class="keyword">@optional</span></div><div class="line"></div><div class="line"><span class="comment">// 点击操作按钮后调用</span></div><div class="line">- (<span class="keyword">void</span>)alertView:(<span class="built_in">UIAlertView</span> *)alertView clickedButtonAtIndex:(<span class="built_in">NSInteger</span>)buttonIndex <span class="built_in">NS_DEPRECATED_IOS</span>(<span class="number">2</span>_0, <span class="number">9</span>_0);</div><div class="line"></div><div class="line"><span class="comment">// 点击取消按钮后调用</span></div><div class="line">- (<span class="keyword">void</span>)alertViewCancel:(<span class="built_in">UIAlertView</span> *)alertView <span class="built_in">NS_DEPRECATED_IOS</span>(<span class="number">2</span>_0, <span class="number">9</span>_0);</div><div class="line"><span class="comment">// 即将弹出提示框之前调用</span></div><div class="line">- (<span class="keyword">void</span>)willPresentAlertView:(<span class="built_in">UIAlertView</span> *)alertView <span class="built_in">NS_DEPRECATED_IOS</span>(<span class="number">2</span>_0, <span class="number">9</span>_0);</div><div class="line"><span class="comment">// 提示框弹出后调用</span></div><div class="line">- (<span class="keyword">void</span>)didPresentAlertView:(<span class="built_in">UIAlertView</span> *)alertView <span class="built_in">NS_DEPRECATED_IOS</span>(<span class="number">2</span>_0, <span class="number">9</span>_0);</div><div class="line"><span class="comment">// 操作后将要隐藏的提示框时调用</span></div><div class="line">- (<span class="keyword">void</span>)alertView:(<span class="built_in">UIAlertView</span> *)alertView willDismissWithButtonIndex:(<span class="built_in">NSInteger</span>)buttonIndex <span class="built_in">NS_DEPRECATED_IOS</span>(<span class="number">2</span>_0, <span class="number">9</span>_0);</div><div class="line"><span class="comment">// 提示框隐藏完成后调用</span></div><div class="line">- (<span class="keyword">void</span>)alertView:(<span class="built_in">UIAlertView</span> *)alertView didDismissWithButtonIndex:(<span class="built_in">NSInteger</span>)buttonIndex <span class="built_in">NS_DEPRECATED_IOS</span>(<span class="number">2</span>_0, <span class="number">9</span>_0);</div><div class="line"></div><div class="line"><span class="comment">// 是否启用提示框中第一个非取消按钮</span></div><div class="line">- (<span class="built_in">BOOL</span>)alertViewShouldEnableFirstOtherButton:(<span class="built_in">UIAlertView</span> *)alertView <span class="built_in">NS_DEPRECATED_IOS</span>(<span class="number">2</span>_0, <span class="number">9</span>_0);</div><div class="line"></div><div class="line"><span class="keyword">@end</span></div></pre></td></tr></table></figure><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 提示框风格</span></div><div class="line"><span class="keyword">typedef</span> <span class="built_in">NS_ENUM</span>(<span class="built_in">NSInteger</span>, <span class="built_in">UIAlertViewStyle</span>) &#123;</div><div class="line"><span class="built_in">UIAlertViewStyleDefault</span> = <span class="number">0</span>, <span class="comment">// 默认</span></div><div class="line"><span class="built_in">UIAlertViewStyleSecureTextInput</span>, <span class="comment">// 有密码输入框</span></div><div class="line"><span class="built_in">UIAlertViewStylePlainTextInput</span>, <span class="comment">// 普通文本输入框</span></div><div class="line"><span class="built_in">UIAlertViewStyleLoginAndPasswordInput</span> <span class="comment">// 登陆框</span></div><div class="line">&#125; __TVOS_PROHIBITED;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;使用&lt;code&gt;UIAlertView&lt;/code&gt;类向用户显示一条警告消息。警报视图的功能相似，但在外观上不同于一个动作表（&lt;code&gt;UIActionSheet&lt;/code&gt;的一个实例）。&lt;/p&gt;
    
    </summary>
    
      <category term="iOS" scheme="https://wynter.wang/categories/iOS/"/>
    
    
      <category term="API" scheme="https://wynter.wang/tags/API/"/>
    
      <category term="iOS" scheme="https://wynter.wang/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>iOS-UIKit框架学习—UIActionSheet</title>
    <link href="https://wynter.wang/2017/02/06/iOS-UIKit%E6%A1%86%E6%9E%B6%E5%AD%A6%E4%B9%A0%E2%80%94UIActionSheet/"/>
    <id>https://wynter.wang/2017/02/06/iOS-UIKit框架学习—UIActionSheet/</id>
    <published>2017-02-06T06:49:39.000Z</published>
    <updated>2017-02-10T03:36:28.000Z</updated>
    
    <content type="html"><![CDATA[<p>使用<code>UIActionSheet</code>类可以把一套如何继续给定任务的替代品给用户。您还可以使用行动表，以提示用户确认是否有潜在危险的行动。该行动表包含一个可选的标题和一个或多个按钮，其中每个对应采取的行动。</p><a id="more"></a><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">@protocol</span> <span class="title">UIActionSheetDelegate</span>;</span></div><div class="line"><span class="comment">// iOS 2.0 - iOS 8.3可用 使用UIAlertController顶替</span></div><div class="line"><span class="built_in">NS_CLASS_DEPRECATED_IOS</span>(<span class="number">2</span>_0, <span class="number">8</span>_3, <span class="string">"UIActionSheet is deprecated. Use UIAlertController with a preferredStyle of UIAlertControllerStyleActionSheet instead"</span>) __TVOS_PROHIBITED</div><div class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">UIActionSheet</span> : <span class="title">UIView</span></span></div><div class="line"></div><div class="line"><span class="comment">// 初始化设置标题、代理、操作按钮</span></div><div class="line">- (<span class="keyword">instancetype</span>)initWithTitle:(<span class="keyword">nullable</span> <span class="built_in">NSString</span> *)title delegate:(<span class="keyword">nullable</span> <span class="keyword">id</span>&lt;<span class="built_in">UIActionSheetDelegate</span>&gt;)delegate cancelButtonTitle:(<span class="keyword">nullable</span> <span class="built_in">NSString</span> *)cancelButtonTitle destructiveButtonTitle:(<span class="keyword">nullable</span> <span class="built_in">NSString</span> *)destructiveButtonTitle otherButtonTitles:(<span class="keyword">nullable</span> <span class="built_in">NSString</span> *)otherButtonTitles, ... <span class="built_in">NS_REQUIRES_NIL_TERMINATION</span> <span class="built_in">NS_EXTENSION_UNAVAILABLE_IOS</span>(<span class="string">"Use UIAlertController instead."</span>);</div><div class="line"><span class="comment">// 代理</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nullable</span>,<span class="keyword">nonatomic</span>,<span class="keyword">weak</span>) <span class="keyword">id</span>&lt;<span class="built_in">UIActionSheetDelegate</span>&gt; delegate;</div><div class="line"><span class="comment">// 标题属性</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>,<span class="keyword">copy</span>) <span class="built_in">NSString</span> *title;</div><div class="line"><span class="comment">// 操作栏的风格</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>) <span class="built_in">UIActionSheetStyle</span> actionSheetStyle; <span class="comment">// default is UIActionSheetStyleAutomatic.</span></div><div class="line"><span class="comment">// 在操作栏中添加自定义按钮</span></div><div class="line">- (<span class="built_in">NSInteger</span>)addButtonWithTitle:(<span class="keyword">nullable</span> <span class="built_in">NSString</span> *)title;</div><div class="line"><span class="comment">// 返回指定索引按钮的标题</span></div><div class="line">- (<span class="keyword">nullable</span> <span class="built_in">NSString</span> *)buttonTitleAtIndex:(<span class="built_in">NSInteger</span>)buttonIndex;</div><div class="line"><span class="comment">// 操作栏的按钮数</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>,<span class="keyword">readonly</span>) <span class="built_in">NSInteger</span> numberOfButtons;</div><div class="line"><span class="comment">// 取消按钮的下标</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>) <span class="built_in">NSInteger</span> cancelButtonIndex;</div><div class="line"><span class="comment">// 破坏那妞的下标</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>) <span class="built_in">NSInteger</span> destructiveButtonIndex;</div><div class="line"><span class="comment">// 第一个更多按钮的下标</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>,<span class="keyword">readonly</span>) <span class="built_in">NSInteger</span> firstOtherButtonIndex;</div><div class="line"><span class="comment">// 接收器是否显示</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>,<span class="keyword">readonly</span>,<span class="keyword">getter</span>=isVisible) <span class="built_in">BOOL</span> visible;</div><div class="line"><span class="comment">// 显示一个来自指定工具栏的操作栏</span></div><div class="line">- (<span class="keyword">void</span>)showFromToolbar:(<span class="built_in">UIToolbar</span> *)view;</div><div class="line"><span class="comment">// 显示一个来自指定标签栏的操作栏</span></div><div class="line">- (<span class="keyword">void</span>)showFromTabBar:(<span class="built_in">UITabBar</span> *)view;</div><div class="line"><span class="comment">// 显示一个来自指定BarButtonItem的操作栏</span></div><div class="line">- (<span class="keyword">void</span>)showFromBarButtonItem:(<span class="built_in">UIBarButtonItem</span> *)item animated:(<span class="built_in">BOOL</span>)animated <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">3</span>_2);</div><div class="line"><span class="comment">// 显示一个来自指定矩形的操作栏</span></div><div class="line">- (<span class="keyword">void</span>)showFromRect:(<span class="built_in">CGRect</span>)rect inView:(<span class="built_in">UIView</span> *)view animated:(<span class="built_in">BOOL</span>)animated <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">3</span>_2);</div><div class="line"><span class="comment">// 显示一个来自指定视图的操作栏</span></div><div class="line">- (<span class="keyword">void</span>)showInView:(<span class="built_in">UIView</span> *)view;</div><div class="line"></div><div class="line"><span class="comment">// 隐藏弹出框</span></div><div class="line">- (<span class="keyword">void</span>)dismissWithClickedButtonIndex:(<span class="built_in">NSInteger</span>)buttonIndex animated:(<span class="built_in">BOOL</span>)animated;</div><div class="line"></div><div class="line"><span class="keyword">@end</span></div><div class="line"></div><div class="line"></div><div class="line">__TVOS_PROHIBITED</div><div class="line"><span class="class"><span class="keyword">@protocol</span> <span class="title">UIActionSheetDelegate</span> &lt;<span class="title">NSObject</span>&gt;</span></div><div class="line"><span class="keyword">@optional</span></div><div class="line"></div><div class="line"><span class="comment">// 点击按钮操作调用</span></div><div class="line">- (<span class="keyword">void</span>)actionSheet:(<span class="built_in">UIActionSheet</span> *)actionSheet clickedButtonAtIndex:(<span class="built_in">NSInteger</span>)buttonIndex <span class="built_in">NS_DEPRECATED_IOS</span>(<span class="number">2</span>_0, <span class="number">8</span>_3) __TVOS_PROHIBITED;</div><div class="line"></div><div class="line"><span class="comment">// 点击取消操作按钮调用</span></div><div class="line">- (<span class="keyword">void</span>)actionSheetCancel:(<span class="built_in">UIActionSheet</span> *)actionSheet <span class="built_in">NS_DEPRECATED_IOS</span>(<span class="number">2</span>_0, <span class="number">8</span>_3) __TVOS_PROHIBITED;</div><div class="line"><span class="comment">// 即将弹出操作栏之前调用</span></div><div class="line">- (<span class="keyword">void</span>)willPresentActionSheet:(<span class="built_in">UIActionSheet</span> *)actionSheet <span class="built_in">NS_DEPRECATED_IOS</span>(<span class="number">2</span>_0, <span class="number">8</span>_3)__TVOS_PROHIBITED;</div><div class="line"><span class="comment">// 操作栏弹出后调用</span></div><div class="line">- (<span class="keyword">void</span>)didPresentActionSheet:(<span class="built_in">UIActionSheet</span> *)actionSheet <span class="built_in">NS_DEPRECATED_IOS</span>(<span class="number">2</span>_0, <span class="number">8</span>_3) __TVOS_PROHIBITED;</div><div class="line"><span class="comment">// 操作后将要隐藏的操作栏时调用</span></div><div class="line">- (<span class="keyword">void</span>)actionSheet:(<span class="built_in">UIActionSheet</span> *)actionSheet willDismissWithButtonIndex:(<span class="built_in">NSInteger</span>)buttonIndex <span class="built_in">NS_DEPRECATED_IOS</span>(<span class="number">2</span>_0, <span class="number">8</span>_3) __TVOS_PROHIBITED;</div><div class="line"><span class="comment">// 操作栏隐藏完成后调用</span></div><div class="line">- (<span class="keyword">void</span>)actionSheet:(<span class="built_in">UIActionSheet</span> *)actionSheet didDismissWithButtonIndex:(<span class="built_in">NSInteger</span>)buttonIndex <span class="built_in">NS_DEPRECATED_IOS</span>(<span class="number">2</span>_0, <span class="number">8</span>_3) __TVOS_PROHIBITED;  <span class="comment">// after animation</span></div><div class="line"></div><div class="line"><span class="keyword">@end</span></div></pre></td></tr></table></figure><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 操作栏风格</span></div><div class="line"><span class="keyword">typedef</span> <span class="built_in">NS_ENUM</span>(<span class="built_in">NSInteger</span>, <span class="built_in">UIActionSheetStyle</span>) &#123;</div><div class="line"><span class="built_in">UIActionSheetStyleAutomatic</span>        = <span class="number">-1</span>,       <span class="comment">// take appearance from toolbar style otherwise uses 'default'</span></div><div class="line"><span class="built_in">UIActionSheetStyleDefault</span>          = <span class="built_in">UIBarStyleDefault</span>, <span class="comment">// 默认</span></div><div class="line"><span class="built_in">UIActionSheetStyleBlackTranslucent</span> = <span class="built_in">UIBarStyleBlackTranslucent</span>, <span class="comment">// 半透明黑色</span></div><div class="line"><span class="built_in">UIActionSheetStyleBlackOpaque</span>      = <span class="built_in">UIBarStyleBlackOpaque</span> , <span class="comment">// 不透明黑色</span></div><div class="line">&#125; __TVOS_PROHIBITED;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;使用&lt;code&gt;UIActionSheet&lt;/code&gt;类可以把一套如何继续给定任务的替代品给用户。您还可以使用行动表，以提示用户确认是否有潜在危险的行动。该行动表包含一个可选的标题和一个或多个按钮，其中每个对应采取的行动。&lt;/p&gt;
    
    </summary>
    
      <category term="iOS" scheme="https://wynter.wang/categories/iOS/"/>
    
    
      <category term="API" scheme="https://wynter.wang/tags/API/"/>
    
      <category term="iOS" scheme="https://wynter.wang/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>iOS UIKit框架学习—UITableViewCell</title>
    <link href="https://wynter.wang/2017/01/25/iOS-UIKit%E6%A1%86%E6%9E%B6%E5%AD%A6%E4%B9%A0%E2%80%94UITableViewCell/"/>
    <id>https://wynter.wang/2017/01/25/iOS-UIKit框架学习—UITableViewCell/</id>
    <published>2017-01-25T03:17:56.000Z</published>
    <updated>2017-01-25T03:35:35.000Z</updated>
    
    <content type="html"><![CDATA[<p>UITableViewCell类定义了在UITableView对象出现时每个单元格的属性和行为。该类包括设置和管理单元格内容和背景（包括文本、图像和自定义视图）的属性和方法，管理单元格的选择和突出状态，管理附件视图，以及启动单元格内容的编辑。<br><a id="more"></a></p><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">NS_CLASS_AVAILABLE_IOS</span>(<span class="number">2</span>_0) <span class="class"><span class="keyword">@interface</span> <span class="title">UITableViewCell</span> : <span class="title">UIView</span> &lt;<span class="title">NSCoding</span>, <span class="title">UIGestureRecognizerDelegate</span>&gt;</span></div><div class="line"></div><div class="line"><span class="comment">// 初始化设置风格，设置重用标识符</span></div><div class="line">- (<span class="keyword">instancetype</span>)initWithStyle:(<span class="built_in">UITableViewCellStyle</span>)style reuseIdentifier:(<span class="keyword">nullable</span> <span class="built_in">NSString</span> *)reuseIdentifier <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">3</span>_0) <span class="built_in">NS_DESIGNATED_INITIALIZER</span>;</div><div class="line">- (<span class="keyword">nullable</span> <span class="keyword">instancetype</span>)initWithCoder:(<span class="built_in">NSCoder</span> *)aDecoder <span class="built_in">NS_DESIGNATED_INITIALIZER</span>;</div><div class="line"></div><div class="line"><span class="comment">// 单元格中的图像视图（根据选择的方式视图位置会不同）</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">readonly</span>, <span class="keyword">strong</span>, <span class="keyword">nullable</span>) <span class="built_in">UIImageView</span> *imageView <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">3</span>_0);</div><div class="line"><span class="comment">// 文本主要内容标签</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">readonly</span>, <span class="keyword">strong</span>, <span class="keyword">nullable</span>) <span class="built_in">UILabel</span> *textLabel <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">3</span>_0);</div><div class="line"><span class="comment">// 详细内容的标签</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">readonly</span>, <span class="keyword">strong</span>, <span class="keyword">nullable</span>) <span class="built_in">UILabel</span> *detailTextLabel <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">3</span>_0);</div><div class="line"><span class="comment">// 单元格中的内容视图，可以添加自定义视图到内容视图上</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">readonly</span>, <span class="keyword">strong</span>) <span class="built_in">UIView</span> *contentView;</div><div class="line"><span class="comment">// 背景视图</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>, <span class="keyword">nullable</span>) <span class="built_in">UIView</span> *backgroundView;</div><div class="line"><span class="comment">// 只用选中时才会显示的视图</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>, <span class="keyword">nullable</span>) <span class="built_in">UIView</span> *selectedBackgroundView;</div><div class="line"><span class="comment">// 多重选择是的视图</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>, <span class="keyword">nullable</span>) <span class="built_in">UIView</span> *multipleSelectionBackgroundView <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">5</span>_0);</div><div class="line"><span class="comment">// 重用标识符</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">readonly</span>, <span class="keyword">copy</span>, <span class="keyword">nullable</span>) <span class="built_in">NSString</span> *reuseIdentifier;</div><div class="line"><span class="comment">// 准备重用</span></div><div class="line">- (<span class="keyword">void</span>)prepareForReuse;</div><div class="line"><span class="comment">// 选中的风格</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>) <span class="built_in">UITableViewCellSelectionStyle</span>   selectionStyle;</div><div class="line"><span class="comment">// 时候可以选中</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">getter</span>=isSelected) <span class="built_in">BOOL</span> selected; <span class="comment">//default is NO.</span></div><div class="line"><span class="comment">// 是否可以高亮</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">getter</span>=isHighlighted) <span class="built_in">BOOL</span> highlighted;  <span class="comment">// default is NO.</span></div><div class="line"><span class="comment">// 是否可以选中，是否带动画效果</span></div><div class="line">- (<span class="keyword">void</span>)setSelected:(<span class="built_in">BOOL</span>)selected animated:(<span class="built_in">BOOL</span>)animated;</div><div class="line"><span class="comment">// 是否可以高亮，是否带动画效果</span></div><div class="line">- (<span class="keyword">void</span>)setHighlighted:(<span class="built_in">BOOL</span>)highlighted animated:(<span class="built_in">BOOL</span>)animated;</div><div class="line"><span class="comment">// 编辑状态下单元格的风格</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">readonly</span>) <span class="built_in">UITableViewCellEditingStyle</span> editingStyle;</div><div class="line"><span class="comment">// 是否重新排序</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>) <span class="built_in">BOOL</span> showsReorderControl;        <span class="comment">// default is NO</span></div><div class="line"><span class="comment">// 编辑状态下单元格是否缩进</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>) <span class="built_in">BOOL</span> shouldIndentWhileEditing;   <span class="comment">// default is YES.</span></div><div class="line"><span class="comment">// 单元格左侧附件样式</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>) <span class="built_in">UITableViewCellAccessoryType</span>    accessoryType;</div><div class="line"><span class="comment">// 自定义附件视图</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>, <span class="keyword">nullable</span>) <span class="built_in">UIView</span> *accessoryView;</div><div class="line"><span class="comment">// 编辑状态的附件样式</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>) <span class="built_in">UITableViewCellAccessoryType</span>   editingAccessoryType;</div><div class="line"><span class="comment">// 编辑状态的自定义附件视图</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>, <span class="keyword">nullable</span>) <span class="built_in">UIView</span>    *editingAccessoryView;</div><div class="line"><span class="comment">// 单元格内容的缩进级别</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>) <span class="built_in">NSInteger</span> indentationLevel; <span class="comment">// default is 0</span></div><div class="line"><span class="comment">// 单元格内容宽度缩进级别</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>) <span class="built_in">CGFloat</span> indentationWidth; <span class="comment">//  default is 10.0</span></div><div class="line"><span class="comment">// 设置间隔</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>) <span class="built_in">UIEdgeInsets</span> separatorInset <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">7</span>_0) <span class="built_in">UI_APPEARANCE_SELECTOR</span> __TVOS_PROHIBITED;</div><div class="line"><span class="comment">// 是否编辑状态</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">getter</span>=isEditing) <span class="built_in">BOOL</span> editing;</div><div class="line">- (<span class="keyword">void</span>)setEditing:(<span class="built_in">BOOL</span>)editing animated:(<span class="built_in">BOOL</span>)animated;</div><div class="line"><span class="comment">// 单元格是否显示删除按钮</span></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>, <span class="keyword">readonly</span>) <span class="built_in">BOOL</span> showingDeleteConfirmation;  <span class="comment">// currently showing "Delete" button</span></div><div class="line"><span class="comment">// 聚焦样式</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>) <span class="built_in">UITableViewCellFocusStyle</span>   focusStyle <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">9</span>_0) <span class="built_in">UI_APPEARANCE_SELECTOR</span>;</div><div class="line"></div><div class="line"><span class="comment">// 当单元格将要改变的时候调用</span></div><div class="line">- (<span class="keyword">void</span>)willTransitionToState:(<span class="built_in">UITableViewCellStateMask</span>)state <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">3</span>_0);</div><div class="line"><span class="comment">// 当单元格已经改变的时候调用</span></div><div class="line">- (<span class="keyword">void</span>)didTransitionToState:(<span class="built_in">UITableViewCellStateMask</span>)state <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">3</span>_0);</div><div class="line"></div><div class="line"><span class="keyword">@end</span></div></pre></td></tr></table></figure><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 单元格风格</span></div><div class="line"><span class="keyword">typedef</span> <span class="built_in">NS_ENUM</span>(<span class="built_in">NSInteger</span>, <span class="built_in">UITableViewCellStyle</span>) &#123;</div><div class="line"><span class="built_in">UITableViewCellStyleDefault</span>,<span class="comment">// 左侧显示textLabel（不显示detailTextLabel），imageView可选（显示在最左边）</span></div><div class="line"><span class="built_in">UITableViewCellStyleValue1</span>,<span class="comment">// 左侧显示textLabel、右侧显示detailTextLabel（默认蓝色），imageView可选（显示在最左边</span></div><div class="line"><span class="built_in">UITableViewCellStyleValue2</span>,<span class="comment">// 左侧依次显示textLabel(默认蓝色)和detailTextLabel，imageView可选（显示在最左边）</span></div><div class="line"><span class="built_in">UITableViewCellStyleSubtitle</span><span class="comment">// 左上方显示textLabel，左下方显示detailTextLabel（默认灰色）,imageView可选（显示在最左边）</span></div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="comment">// 单元格分割样式</span></div><div class="line"><span class="keyword">typedef</span> <span class="built_in">NS_ENUM</span>(<span class="built_in">NSInteger</span>, <span class="built_in">UITableViewCellSeparatorStyle</span>) &#123;</div><div class="line"><span class="built_in">UITableViewCellSeparatorStyleNone</span>, <span class="comment">// 无</span></div><div class="line"><span class="built_in">UITableViewCellSeparatorStyleSingleLine</span>, <span class="comment">// 有单条分割线，默认</span></div><div class="line"><span class="built_in">UITableViewCellSeparatorStyleSingleLineEtched</span>   <span class="comment">// 两条分割线</span></div><div class="line">&#125; __TVOS_PROHIBITED;</div><div class="line"></div><div class="line"><span class="comment">// 单元格选中样式</span></div><div class="line"><span class="keyword">typedef</span> <span class="built_in">NS_ENUM</span>(<span class="built_in">NSInteger</span>, <span class="built_in">UITableViewCellSelectionStyle</span>) &#123;</div><div class="line"><span class="built_in">UITableViewCellSelectionStyleNone</span>, <span class="comment">// 无</span></div><div class="line"><span class="built_in">UITableViewCellSelectionStyleBlue</span>, <span class="comment">// 默认选中样式</span></div><div class="line"><span class="built_in">UITableViewCellSelectionStyleGray</span>, <span class="comment">// 选中呈现灰色</span></div><div class="line"><span class="built_in">UITableViewCellSelectionStyleDefault</span> <span class="built_in">NS_ENUM_AVAILABLE_IOS</span>(<span class="number">7</span>_0) <span class="comment">// 表格单元格显示样式</span></div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="comment">// 聚焦样式</span></div><div class="line"><span class="keyword">typedef</span> <span class="built_in">NS_ENUM</span>(<span class="built_in">NSInteger</span>, <span class="built_in">UITableViewCellFocusStyle</span>) &#123;</div><div class="line"><span class="built_in">UITableViewCellFocusStyleDefault</span>, <span class="comment">// 当聚焦时采用系统默认样式</span></div><div class="line"><span class="built_in">UITableViewCellFocusStyleCustom</span> <span class="comment">// 当聚焦是采用自定义样式</span></div><div class="line">&#125; <span class="built_in">NS_ENUM_AVAILABLE_IOS</span>(<span class="number">9</span>_0);</div><div class="line"></div><div class="line"><span class="comment">// 编辑状态样式</span></div><div class="line"><span class="keyword">typedef</span> <span class="built_in">NS_ENUM</span>(<span class="built_in">NSInteger</span>, <span class="built_in">UITableViewCellEditingStyle</span>) &#123;</div><div class="line"><span class="built_in">UITableViewCellEditingStyleNone</span>, <span class="comment">// 无</span></div><div class="line"><span class="built_in">UITableViewCellEditingStyleDelete</span>, <span class="comment">// 删除</span></div><div class="line"><span class="built_in">UITableViewCellEditingStyleInsert</span> <span class="comment">// 插入</span></div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="comment">// 附件样式</span></div><div class="line"><span class="keyword">typedef</span> <span class="built_in">NS_ENUM</span>(<span class="built_in">NSInteger</span>, <span class="built_in">UITableViewCellAccessoryType</span>) &#123;</div><div class="line"><span class="built_in">UITableViewCellAccessoryNone</span>, <span class="comment">// 无</span></div><div class="line"><span class="built_in">UITableViewCellAccessoryDisclosureIndicator</span>, <span class="comment">// 箭头</span></div><div class="line"><span class="built_in">UITableViewCellAccessoryDetailDisclosureButton</span> __TVOS_PROHIBITED, <span class="comment">// 显示详情符号和灰色箭头</span></div><div class="line"><span class="built_in">UITableViewCellAccessoryCheckmark</span>, <span class="comment">// 复选框</span></div><div class="line"><span class="built_in">UITableViewCellAccessoryDetailButton</span> <span class="built_in">NS_ENUM_AVAILABLE_IOS</span>(<span class="number">7</span>_0)  __TVOS_PROHIBITED</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="comment">// 表格状态</span></div><div class="line"><span class="keyword">typedef</span> <span class="built_in">NS_OPTIONS</span>(<span class="built_in">NSUInteger</span>, <span class="built_in">UITableViewCellStateMask</span>) &#123;</div><div class="line"><span class="built_in">UITableViewCellStateDefaultMask</span>                     = <span class="number">0</span>, <span class="comment">// 默认</span></div><div class="line"><span class="built_in">UITableViewCellStateShowingEditControlMask</span>          = <span class="number">1</span> &lt;&lt; <span class="number">0</span>, <span class="comment">// 编辑状态</span></div><div class="line"><span class="built_in">UITableViewCellStateShowingDeleteConfirmationMask</span>   = <span class="number">1</span> &lt;&lt; <span class="number">1</span> <span class="comment">// 删除状态</span></div><div class="line">&#125;;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;UITableViewCell类定义了在UITableView对象出现时每个单元格的属性和行为。该类包括设置和管理单元格内容和背景（包括文本、图像和自定义视图）的属性和方法，管理单元格的选择和突出状态，管理附件视图，以及启动单元格内容的编辑。&lt;br&gt;
    
    </summary>
    
      <category term="iOS" scheme="https://wynter.wang/categories/iOS/"/>
    
    
      <category term="API" scheme="https://wynter.wang/tags/API/"/>
    
      <category term="iOS" scheme="https://wynter.wang/tags/iOS/"/>
    
  </entry>
  
</feed>
